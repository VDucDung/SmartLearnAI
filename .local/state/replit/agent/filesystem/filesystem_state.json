{"file_contents":{"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./index.html\", \"./src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"Inter\", \"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        \"fade-in\": {\n          from: { opacity: \"0\" },\n          to: { opacity: \"1\" },\n        },\n        \"slide-up\": {\n          from: { transform: \"translateY(20px)\", opacity: \"0\" },\n          to: { transform: \"translateY(0)\", opacity: \"1\" },\n        },\n        \"bounce-gentle\": {\n          \"0%, 20%, 50%, 80%, 100%\": { transform: \"translateY(0)\" },\n          \"40%\": { transform: \"translateY(-10px)\" },\n          \"60%\": { transform: \"translateY(-5px)\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fade-in 0.5s ease-in-out\",\n        \"slide-up\": \"slide-up 0.3s ease-out\",\n        \"bounce-gentle\": \"bounce-gentle 0.6s ease-in-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3370},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(__dirname, \"src\"),\n      \"@shared\": path.resolve(__dirname, \"shared\"),\n      \"@assets\": path.resolve(__dirname, \"attached_assets\"),\n    },\n  },\n  build: {\n    outDir: \"dist\",\n    emptyOutDir: true,\n  },\n  server: {\n    host: \"0.0.0.0\",\n    port: 5000,\n    strictPort: true,\n  },\n});\n","size_bytes":830},"shared/authTypes.ts":{"content":"import { z } from \"zod\";\n\n// JWT Authentication Types\nexport interface JWTTokens {\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport interface ExternalUser {\n  id: string;\n  fullname: string;\n  email: string;\n  phone?: string;\n  balance?: number;\n  isAdmin?: boolean;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n// Request/Response schemas for external API\nexport const loginRequestSchema = z.object({\n  email: z.string().email(\"Email không hợp lệ\"),\n  password: z.string().min(6, \"Mật khẩu phải có ít nhất 6 ký tự\"),\n});\n\nexport const registerRequestSchema = z.object({\n  fullname: z.string().min(2, \"Họ tên phải có ít nhất 2 ký tự\"),\n  email: z.string().email(\"Email không hợp lệ\"),\n  password: z.string().min(6, \"Mật khẩu phải có ít nhất 6 ký tự\"),\n});\n\nexport const updateProfileRequestSchema = z.object({\n  fullname: z.string().min(2, \"Họ tên phải có ít nhất 2 ký tự\").optional(),\n  phone: z.string().optional(),\n});\n\nexport const changePasswordRequestSchema = z.object({\n  oldPassword: z.string().min(1, \"Mật khẩu cũ là bắt buộc\"),\n  newPassword: z.string().min(6, \"Mật khẩu mới phải có ít nhất 6 ký tự\"),\n});\n\nexport const forgotPasswordRequestSchema = z.object({\n  email: z.string().email(\"Email không hợp lệ\"),\n});\n\nexport const refreshTokenRequestSchema = z.object({\n  refreshToken: z.string().min(1, \"Refresh token là bắt buộc\"),\n});\n\n// API Response wrapper\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  message: string;\n  data?: T;\n}\n\n// Types for use in components\nexport type LoginRequest = z.infer<typeof loginRequestSchema>;\nexport type RegisterRequest = z.infer<typeof registerRequestSchema>;\nexport type UpdateProfileRequest = z.infer<typeof updateProfileRequestSchema>;\nexport type ChangePasswordRequest = z.infer<typeof changePasswordRequestSchema>;\nexport type ForgotPasswordRequest = z.infer<typeof forgotPasswordRequestSchema>;\nexport type RefreshTokenRequest = z.infer<typeof refreshTokenRequestSchema>;\n\n// Authentication context types\nexport interface AuthContextType {\n  user: ExternalUser | null;\n  tokens: JWTTokens | null;\n  login: (credentials: LoginRequest) => Promise<void>;\n  register: (data: RegisterRequest) => Promise<void>;\n  logout: () => void;\n  refreshToken: () => Promise<boolean>;\n  updateProfile: (data: UpdateProfileRequest) => Promise<void>;\n  changePassword: (data: ChangePasswordRequest) => Promise<void>;\n  isLoading: boolean;\n  isAuthenticated: boolean;\n}\n\n// Token storage keys\nexport const TOKEN_STORAGE_KEY = 'auth_tokens';\nexport const USER_STORAGE_KEY = 'auth_user';","size_bytes":2643},"shared/schema.ts":{"content":"import { string, z } from \"zod\";\n\n// User types\nexport interface User {\n  id: string;\n  email?: string;\n  firstName?: string;\n  lastName?: string;\n  profileImageUrl?: string;\n  balance: string;\n  isAdmin: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Tool types\nexport interface Tool {\n  id: string;\n  name: string;\n  description: string;\n  price: string;\n  prices?: any; // Array of pricing options with duration and amount\n  purchases: number; // Total number of purchases\n  categoryId?: string;\n  imageUrl?: string;\n  videoUrl?: string;\n  instructions?: string; // Markdown content\n  downloadUrl?: string;\n  views: number;\n  rating: string;\n  reviewCount: number;\n  isActive: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n// Category types\nexport interface Category {\n  id: string;\n  name: string;\n  slug: string;\n  createdAt: Date;\n}\n\n// Purchase types\nexport interface Purchase {\n  id: string;\n  userId: string;\n  toolId: string;\n  price: string;\n  discountAmount: string;\n  finalPrice: string;\n  discountCodeId?: string;\n  expiresAt: Date;\n  keyValue: string;\n  isActive: boolean;\n  createdAt: Date;\n}\n\n// Discount code types\nexport interface DiscountCode {\n  id: string;\n  code: string;\n  discountType: string; // 'percentage' or 'fixed'\n  discountValue: string;\n  minPurchaseAmount: string;\n  usageLimit?: number;\n  usageCount: number;\n  isActive: boolean;\n  expiresAt?: Date;\n  createdAt: Date;\n}\n\n// Payment types\nexport interface Payment {\n  id: string;\n  userId: string;\n  amount: string;\n  type: string; // 'deposit' or 'purchase'\n  status: string; // 'pending', 'completed', 'failed'\n  description?: string;\n  transactionId?: string;\n  createdAt: Date;\n}\n\n// Key validation types\nexport interface KeyValidation {\n  id: string;\n  keyValue: string;\n  userId?: string;\n  toolId?: string;\n  isValid: boolean;\n  ipAddress?: string;\n  userAgent?: string;\n  createdAt: Date;\n}\n\n// Insert schemas for validation\nexport const insertUserSchema = z.object({\n  email: z.string().email().optional(),\n  firstName: z.string().optional(),\n  lastName: z.string().optional(),\n  profileImageUrl: z.string().optional(),\n  balance: z.string().default(\"0\"),\n  isAdmin: z.boolean().default(false),\n});\n\nexport const insertToolSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  price: z.string(),\n  prices: z.any().optional(),\n  purchases: z.number().default(0),\n  categoryId: z.string().optional(),\n  imageUrl: z.string().optional(),\n  videoUrl: z.string().optional(),\n  instructions: z.string().optional(),\n  downloadUrl: z.string().optional(),\n  isActive: z.boolean().default(true),\n});\n\nexport const insertCategorySchema = z.object({\n  name: z.string(),\n  slug: z.string(),\n});\n\nexport const insertPurchaseSchema = z.object({\n  userId: z.string(),\n  toolId: z.string(),\n  price: z.string(),\n  discountAmount: z.string().default(\"0\"),\n  finalPrice: z.string(),\n  discountCodeId: z.string().optional(),\n  expiresAt: z.date(),\n  isActive: z.boolean().default(true),\n});\n\nexport const insertDiscountCodeSchema = z.object({\n  code: z.string(),\n  discountType: z.string(),\n  discountValue: z.string(),\n  minPurchaseAmount: z.string().default(\"0\"),\n  usageLimit: z.number().optional(),\n  isActive: z.boolean().default(true),\n  expiresAt: z.date().optional(),\n});\n\nexport const insertPaymentSchema = z.object({\n  userId: z.string(),\n  amount: z.string(),\n  type: z.string(),\n  status: z.string().default(\"completed\"),\n  description: z.string().optional(),\n  transactionId: z.string().optional(),\n});\n\n// Types\nexport type UpsertUser = z.infer<typeof insertUserSchema>;\nexport type InsertTool = z.infer<typeof insertToolSchema>;\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\nexport type InsertPurchase = z.infer<typeof insertPurchaseSchema>;\nexport type InsertDiscountCode = z.infer<typeof insertDiscountCodeSchema>;\nexport type InsertPayment = z.infer<typeof insertPaymentSchema>;\n","size_bytes":3917},"replit.md":{"content":"# Overview\n\nThis is a React-based tool marketplace application called \"TOOL NRO\" - a Vietnamese platform for purchasing gaming tools and automation software. The application allows users to browse, purchase, and manage digital tools with integrated payment processing and user authentication. It features a modern UI built with React, TypeScript, and Tailwind CSS, providing both customer-facing functionality and admin panel capabilities. \n\n**Note**: This has been converted to a frontend-only application, removing the backend components for simpler deployment and maintenance. The application now works as a static React app that can connect to external APIs.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\nThe application uses a modern React-based architecture with:\n- **Framework**: React 18 with TypeScript for type safety\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **UI Components**: Radix UI primitives with shadcn/ui design system\n- **Styling**: Tailwind CSS with CSS variables for theming\n- **Animations**: Framer Motion for smooth transitions and interactions\n- **Forms**: React Hook Form with Zod validation for type-safe form handling\n\n## Component Structure\nThe application follows a modular component architecture:\n- **Layout Components**: Header, Footer, Sidebar, and Layout wrapper components\n- **Feature Components**: LoginForm, RegisterForm, ToolCard, WelcomeModal\n- **UI Components**: Reusable shadcn/ui components in `/components/ui/`\n- **Page Components**: Route-specific components in `/pages/`\n\n## Authentication System\nImplements JWT-based authentication with:\n- **Token Management**: Access and refresh token pattern stored in localStorage\n- **Context Provider**: React Context API for global auth state management\n- **External API Integration**: Communicates with external authentication service\n- **Form Validation**: Zod schemas for login/register validation\n- **Demo Mode**: Supports both real authentication and demo functionality\n\n## State Management Pattern\nUses a layered approach to state management:\n- **Server State**: TanStack Query for API data fetching, caching, and synchronization\n- **Authentication State**: React Context for user session management\n- **UI State**: Local component state with useState for ephemeral UI interactions\n- **Form State**: React Hook Form for complex form management with validation\n\n## Routing Architecture\nImplements protected route patterns:\n- **Public Routes**: Home, Tools, Login, Register, Statistics\n- **Protected Routes**: PurchasedTools, Deposit, History, Profile, AdminPanel, Checkout\n- **Conditional Rendering**: Authentication-based route access control\n- **Not Found Handling**: 404 page for unmatched routes\n\n## Design System\nBuilt on a consistent design foundation:\n- **Color Scheme**: CSS custom properties for light/dark theme support\n- **Component Variants**: Class Variance Authority for component styling variations\n- **Responsive Design**: Mobile-first approach with Tailwind breakpoints\n- **Accessibility**: ARIA attributes and keyboard navigation support\n\n# External Dependencies\n\n## Core Framework Dependencies\n- **React Ecosystem**: React 18, React DOM, React Router alternative (Wouter)\n- **TypeScript**: Full TypeScript support with strict configuration\n- **Build Tools**: Vite for fast development and optimized production builds\n\n## UI and Styling\n- **Radix UI**: Comprehensive primitive component library for accessibility\n- **Tailwind CSS**: Utility-first CSS framework with PostCSS processing\n- **shadcn/ui**: Pre-built component library built on Radix UI\n- **Framer Motion**: Animation library for smooth interactions\n- **Lucide React**: Icon library for consistent iconography\n\n## State Management and Data Fetching\n- **TanStack Query**: Server state management with caching and synchronization\n- **Axios**: HTTP client for API communication\n- **React Hook Form**: Form state management with performance optimization\n- **Zod**: Runtime type validation for forms and API responses\n\n## Development and Build Tools\n- **Vite**: Modern build tool with fast HMR and optimized production builds\n- **PostCSS**: CSS processing with Tailwind CSS and Autoprefixer\n- **ESLint**: Code quality and consistency (configured but not visible in files)\n\n## External Services Integration\n- **Stripe**: Payment processing integration with React Stripe.js\n- **External Authentication API**: JWT-based authentication service\n- **Replit Plugins**: Development tools for Replit environment integration\n\n## Utility Libraries\n- **date-fns**: Date manipulation and formatting\n- **clsx & tailwind-merge**: Conditional CSS class handling\n- **cmdk**: Command palette functionality\n- **embla-carousel**: Carousel component implementation\n\nThe application is designed to be easily deployable and maintainable, with clear separation of concerns between UI components, business logic, and external service integrations.","size_bytes":5079},"src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/components/ThemeProvider\";\nimport { WelcomeModal } from \"@/components/WelcomeModal\";\nimport { AuthProvider, useAuth } from \"@/contexts/AuthContext\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/Home\";\nimport Tools from \"@/pages/Tools\";\nimport ToolDetails from \"@/pages/ToolDetails\";\nimport PurchasedTools from \"@/pages/PurchasedTools\";\nimport Deposit from \"@/pages/Deposit\";\nimport History from \"@/pages/History\";\nimport AdminPanel from \"@/pages/AdminPanel\";\nimport Checkout from \"@/pages/Checkout\";\nimport Statistics from \"@/pages/Statistics\";\nimport Login from \"@/pages/Login\";\nimport Register from \"@/pages/Register\";\nimport Profile from \"@/pages/Profile\";\n\nfunction Router() {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  return (\n    <Switch>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n      \n      <Route path=\"/\" component={Home} />\n      <Route path=\"/tools\" component={Tools} />\n      <Route path=\"/tools/:id\" component={ToolDetails} />\n      <Route path=\"/statistics\" component={Statistics} />\n      \n      {isAuthenticated && (\n        <>\n          <Route path=\"/purchased-tools\" component={PurchasedTools} />\n          <Route path=\"/deposit\" component={Deposit} />\n          <Route path=\"/history\" component={History} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/admin\" component={AdminPanel} />\n          <Route path=\"/admin/:section\" component={AdminPanel} />\n          <Route path=\"/checkout\" component={Checkout} />\n        </>\n      )}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <ThemeProvider defaultTheme=\"light\" storageKey=\"ui-theme\">\n          <TooltipProvider>\n            <Toaster />\n            <WelcomeModal />\n            <Router />\n          </TooltipProvider>\n        </ThemeProvider>\n      </AuthProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":2333},"src/components/Footer.tsx":{"content":"import { FaFacebook, FaTelegram, FaPhone } from 'react-icons/fa';\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-slate-800 text-white py-8\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n          {/* Left Column */}\n          <div>\n            <h3 className=\"text-xl font-bold mb-4\">LINHCONG.NET</h3>\n            <p className=\"text-gray-300 mb-2\">Hệ thống ban tool - vps - captcha giá rẻ</p>\n            <p className=\"text-gray-300\">Đảm bảo uy tín và chất lượng</p>\n          </div>\n\n          {/* Right Column */}\n          <div>\n            <h3 className=\"text-xl font-bold mb-4\">VỀ CHÚNG TÔI</h3>\n            <p className=\"text-gray-300 mb-2\">Chúng tôi làm việc một cách chuyên nghiệp</p>\n            <p className=\"text-gray-300 mb-2\">uy tín, nhanh chóng</p>\n            <p className=\"text-gray-300 mb-4\">luôn đặt quyền lợi của bạn lên hàng đầu</p>\n            \n            {/* Contact Buttons */}\n            <div className=\"flex space-x-2 mt-4\">\n              <button\n                onClick={() => window.open('https://zalo.me/linhcong', '_blank')}\n                className=\"bg-blue-500 hover:bg-blue-600 text-white p-3 rounded-full text-lg transition-colors\"\n                title=\"Liên hệ Zalo\"\n              >\n                <FaPhone />\n              </button>\n              <button\n                onClick={() => window.open('https://t.me/linhcong', '_blank')}\n                className=\"bg-blue-400 hover:bg-blue-500 text-white p-3 rounded-full text-lg transition-colors\"\n                title=\"Liên hệ Telegram\"\n              >\n                <FaTelegram />\n              </button>\n              <button\n                onClick={() => window.open('https://facebook.com/linhcong', '_blank')}\n                className=\"bg-blue-600 hover:bg-blue-700 text-white p-3 rounded-full text-lg transition-colors\"\n                title=\"Liên hệ Facebook\"\n              >\n                <FaFacebook />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Copyright */}\n        <div className=\"border-t border-gray-700 mt-8 pt-6 text-center\">\n          <p className=\"text-gray-400 text-sm italic\">\n            Copyright © 2022 CAPTCHA - DEV BY Mr.DUNG\n          </p>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":2416},"src/components/Header.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { useTheme } from \"@/components/ThemeProvider\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Moon, Sun, Menu, User, Send, Wrench, Server, LogOut } from \"lucide-react\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Sidebar } from \"./Sidebar\";\n\nexport function Header() {\n  const [location] = useLocation();\n  const { theme, setTheme } = useTheme();\n  const { user, isAuthenticated } = useAuth();\n  const { toast } = useToast();\n\n  const handleLogout = async () => {\n    try {\n      const response = await fetch(\"/api/auth/demo-logout\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.ok) {\n        toast({\n          title: \"Đăng xuất thành công\",\n          description: \"Hẹn gặp lại bạn!\",\n        });\n        window.location.reload();\n      } else {\n        // Fallback to original logout for non-demo users\n        window.location.href = \"/api/logout\";\n      }\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n      // Fallback to original logout\n      window.location.href = \"/api/logout\";\n    }\n  };\n\n  const navigation = [\n    { name: \"Trang chủ\", href: \"/\" },\n  ];\n\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b border-border bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-3 h-16 items-center\">\n          {/* Logo - Left */}\n          <div className=\"flex items-center space-x-4\">\n            <Link href=\"/\" className=\"flex items-center space-x-2\" data-testid=\"link-logo\">\n              <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n                <span className=\"text-primary-foreground font-bold text-sm\">TM</span>\n              </div>\n              <span className=\"font-bold text-xl bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent\">\n                ToolMarket\n              </span>\n            </Link>\n          </div>\n\n          {/* Desktop Navigation - Center */}\n          <nav className=\"hidden md:flex items-center justify-center space-x-6\">\n            {navigation.map((item) => (\n              <Link\n                key={item.href}\n                href={item.href}\n                className={`text-sm font-medium transition-colors hover:text-primary ${\n                  location === item.href\n                    ? \"text-primary\"\n                    : \"text-muted-foreground\"\n                }`}\n                data-testid={`link-${item.name.toLowerCase().replace(' ', '-')}`}\n              >\n                {item.name}\n              </Link>\n            ))}\n          </nav>\n\n          {/* Actions - Right */}\n          <div className=\"flex items-center justify-end space-x-4\">\n            {/* Theme Toggle */}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n              data-testid=\"button-theme-toggle\"\n            >\n              <Sun className=\"h-4 w-4 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n              <Moon className=\"absolute h-4 w-4 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n            </Button>\n\n\n            {/* Auth Buttons */}\n            {!isAuthenticated ? (\n              <div className=\"flex items-center space-x-2\">\n                <Link href=\"/login\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    data-testid=\"button-login\"\n                  >\n                    Đăng nhập\n                  </Button>\n                </Link>\n                <Link href=\"/register\">\n                  <Button\n                    size=\"sm\"\n                    data-testid=\"button-register\"\n                  >\n                    Đăng ký\n                  </Button>\n                </Link>\n              </div>\n            ) : (\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"ghost\" className=\"relative h-8 w-8 rounded-full\" data-testid=\"button-user-menu\">\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarImage src={(user as any)?.profileImageUrl} alt=\"\" />\n                      <AvatarFallback className=\"text-xs\">\n                        {(user as any)?.firstName?.[0]?.toUpperCase() || (user as any)?.email?.[0]?.toUpperCase() || \"U\"}\n                      </AvatarFallback>\n                    </Avatar>\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n                  <div className=\"flex flex-col space-y-1 p-2\">\n                    <p className=\"text-sm font-medium\">{(user as any)?.firstName} {(user as any)?.lastName}</p>\n                    <p className=\"text-xs text-muted-foreground\">{(user as any)?.email}</p>\n                    {(user as any)?.isAdmin && (\n                      <span className=\"text-xs bg-primary text-primary-foreground px-2 py-1 rounded\">\n                        Admin\n                      </span>\n                    )}\n                  </div>\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/profile\" className=\"flex items-center\">\n                      <User className=\"mr-2 h-4 w-4 text-blue-500\" />\n                      <span>Thông tin tài khoản</span>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/deposit\" className=\"flex items-center\">\n                      <Send className=\"mr-2 h-4 w-4 text-pink-500\" />\n                      <span>Chuyển Tiền</span>\n                    </Link>\n                  </DropdownMenuItem>\n                  <DropdownMenuItem asChild>\n                    <Link href=\"/purchased-tools\" className=\"flex items-center\">\n                      <Wrench className=\"mr-2 h-4 w-4 text-orange-500\" />\n                      <span>Quản Lý Tool</span>\n                    </Link>\n                  </DropdownMenuItem>\n                  {(user as any)?.isAdmin && (\n                    <DropdownMenuItem asChild>\n                      <Link href=\"/admin\" className=\"flex items-center\">\n                        <Server className=\"mr-2 h-4 w-4 text-purple-500\" />\n                        <span>Quản Lý VPS</span>\n                      </Link>\n                    </DropdownMenuItem>\n                  )}\n                  <DropdownMenuSeparator />\n                  <DropdownMenuItem\n                    onClick={handleLogout}\n                    data-testid=\"button-logout\"\n                    className=\"flex items-center\"\n                  >\n                    <LogOut className=\"mr-2 h-4 w-4 text-red-500\" />\n                    <span>Đăng Xuất</span>\n                  </DropdownMenuItem>\n                </DropdownMenuContent>\n              </DropdownMenu>\n            )}\n\n            {/* Mobile Menu */}\n            {isAuthenticated && (\n              <Sheet>\n                <SheetTrigger asChild>\n                  <Button variant=\"ghost\" size=\"sm\" className=\"md:hidden\" data-testid=\"button-mobile-menu\">\n                    <Menu className=\"h-4 w-4\" />\n                  </Button>\n                </SheetTrigger>\n                <SheetContent side=\"left\" className=\"w-64\">\n                  <Sidebar />\n                </SheetContent>\n              </Sheet>\n            )}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","size_bytes":8152},"src/components/Layout.tsx":{"content":"import { useAuth } from \"@/hooks/useAuth\";\nimport { Header } from \"./Header\";\nimport { Sidebar } from \"./Sidebar\";\nimport { Footer } from \"./Footer\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n  showSidebar?: boolean;\n}\n\nexport function Layout({ children, showSidebar = false }: LayoutProps) {\n  const { isAuthenticated } = useAuth();\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header />\n      <div className=\"flex flex-1\">\n        {isAuthenticated && showSidebar && (\n          <div className=\"hidden lg:flex lg:flex-shrink-0\">\n            <Sidebar />\n          </div>\n        )}\n        <main className=\"flex-1\">\n          {children}\n        </main>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":750},"src/components/LoginForm.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useLocation } from \"wouter\";\nimport { Lock, User, Eye, EyeOff, LogIn, UserPlus } from \"lucide-react\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { loginRequestSchema, type LoginRequest } from \"@shared/authTypes\";\n\ninterface LoginFormProps {\n  onLoginSuccess?: () => void;\n}\n\nexport function LoginForm({ onLoginSuccess }: LoginFormProps) {\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberAccount, setRememberAccount] = useState(false);\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const { login, isLoading } = useAuth();\n\n  // Form setup with validation\n  const form = useForm<LoginRequest>({\n    resolver: zodResolver(loginRequestSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  // Load remembered email on component mount\n  useEffect(() => {\n    const rememberedEmail = localStorage.getItem(\"remembered-email\");\n    if (rememberedEmail) {\n      form.setValue(\"email\", rememberedEmail);\n      setRememberAccount(true);\n    }\n  }, [form]);\n\n  const handleSubmit = async (data: LoginRequest) => {\n    try {\n      await login(data);\n\n      // Handle remember account\n      if (rememberAccount) {\n        localStorage.setItem(\"remembered-email\", data.email);\n      } else {\n        localStorage.removeItem(\"remembered-email\");\n      }\n\n      toast({\n        title: \"Đăng nhập thành công\",\n        description: \"Chào mừng bạn đã quay trở lại!\",\n      });\n\n      setLocation(\"/\");\n      \n      if (onLoginSuccess) {\n        onLoginSuccess();\n      }\n    } catch (error: any) {\n      toast({\n        title: \"Đăng nhập thất bại\",\n        description: error.message || \"Thông tin đăng nhập không chính xác\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleForgotPassword = () => {\n    toast({\n      title: \"Tính năng sắp ra mắt\",\n      description: \"Chức năng quên mật khẩu đang được phát triển\",\n    });\n  };\n\n  const handleRegister = () => {\n    setLocation(\"/register\");\n  };\n\n  const handleGoogleLogin = () => {\n    toast({\n      title: \"Tính năng sắp ra mắt\",\n      description: \"Đăng nhập Google đang được phát triển\",\n    });\n  };\n\n  return (\n    <div className=\"w-full max-w-md mx-auto\">\n      <Card className=\"overflow-hidden border-0 shadow-2xl bg-gray-800 text-white\">\n        {/* Blue Header */}\n        <CardHeader className=\"bg-blue-600 text-center py-6\">\n          <CardTitle className=\"text-2xl font-bold text-white\">\n            Đăng Nhập\n          </CardTitle>\n        </CardHeader>\n        \n        <CardContent className=\"p-6 space-y-4\">\n          <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-4\" data-testid=\"login-form\">\n            {/* Email Field */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\" className=\"text-white font-medium\">\n                Email\n              </Label>\n              <Input\n                id=\"email\"\n                data-testid=\"email-input\"\n                type=\"email\"\n                placeholder=\"Nhập email của bạn\"\n                {...form.register(\"email\")}\n                className=\"bg-gray-100 border-gray-300 text-gray-900 placeholder:text-gray-500\"\n                disabled={isLoading}\n              />\n              {form.formState.errors.email && (\n                <p className=\"text-red-400 text-sm\">{form.formState.errors.email.message}</p>\n              )}\n            </div>\n\n            {/* Password Field */}\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\" className=\"text-white font-medium\">\n                Mật Khẩu\n              </Label>\n              <div className=\"relative\">\n                <Input\n                  id=\"password\"\n                  data-testid=\"password-input\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  placeholder=\"Nhập mật khẩu của bạn\"\n                  {...form.register(\"password\")}\n                  className=\"bg-gray-100 border-gray-300 text-gray-900 placeholder:text-gray-500 pr-10\"\n                  disabled={isLoading}\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent text-gray-600\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  disabled={isLoading}\n                  aria-pressed={showPassword}\n                  data-testid=\"password-toggle\"\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4\" />\n                  )}\n                </Button>\n              </div>\n            </div>\n\n            {/* Remember Account & Forgot Password */}\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"remember\"\n                  data-testid=\"remember-checkbox\"\n                  checked={rememberAccount}\n                  onCheckedChange={(checked) => setRememberAccount(checked as boolean)}\n                  className=\"border-gray-400 data-[state=checked]:bg-blue-600 data-[state=checked]:border-blue-600\"\n                />\n                <Label\n                  htmlFor=\"remember\"\n                  className=\"text-sm text-white cursor-pointer\"\n                >\n                  Nhớ Tài Khoản\n                </Label>\n              </div>\n              \n              <Button\n                type=\"button\"\n                variant=\"link\"\n                className=\"text-blue-400 hover:text-blue-300 p-0 h-auto font-normal text-sm\"\n                onClick={handleForgotPassword}\n                data-testid=\"forgot-password-link\"\n              >\n                Quên/Đổi Mật Khẩu?\n              </Button>\n            </div>\n\n            {/* Login Button */}\n            <Button\n              type=\"submit\"\n              className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3\"\n              disabled={isLoading}\n              data-testid=\"login-button\"\n            >\n              <LogIn className=\"w-4 h-4 mr-2\" />\n              {isLoading ? \"Đang đăng nhập...\" : \"Đăng Nhập\"}\n            </Button>\n          </form>\n\n          {/* Divider */}\n          <div className=\"relative my-6\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <div className=\"w-full border-t border-gray-600\"></div>\n            </div>\n            <div className=\"relative flex justify-center text-sm\">\n              <span className=\"px-4 bg-gray-800 text-gray-400 font-medium\">\n                - HOẶC -\n              </span>\n            </div>\n          </div>\n\n          {/* Social Login Buttons */}\n          <div className=\"grid grid-cols-2 gap-3\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              className=\"bg-green-600 hover:bg-green-700 border-green-600 text-white font-medium\"\n              onClick={handleRegister}\n              data-testid=\"register-button\"\n            >\n              <UserPlus className=\"w-4 h-4 mr-2\" />\n              Đăng Kí\n            </Button>\n            \n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              className=\"bg-red-600 hover:bg-red-700 border-red-600 text-white font-medium\"\n              onClick={handleGoogleLogin}\n              data-testid=\"google-button\"\n            >\n              <FcGoogle className=\"w-4 h-4 mr-2\" />\n              Google\n            </Button>\n          </div>\n\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":8340},"src/components/RegisterForm.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useLocation } from \"wouter\";\nimport { UserPlus, LogIn } from \"lucide-react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { registerRequestSchema, type RegisterRequest } from \"@shared/authTypes\";\n\ninterface RegisterFormProps {\n  onRegisterSuccess?: () => void;\n}\n\nexport function RegisterForm({ onRegisterSuccess }: RegisterFormProps) {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const { register, isLoading } = useAuth();\n\n  // Form setup with validation\n  const form = useForm<RegisterRequest>({\n    resolver: zodResolver(registerRequestSchema),\n    defaultValues: {\n      fullname: \"\",\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n\n  const handleSubmit = async (data: RegisterRequest) => {\n    try {\n      await register(data);\n      \n      toast({\n        title: \"Đăng ký thành công\",\n        description: \"Tài khoản của bạn đã được tạo thành công!\",\n      });\n\n      // Redirect to login page\n      setLocation(\"/login\");\n      \n      if (onRegisterSuccess) {\n        onRegisterSuccess();\n      }\n    } catch (error: any) {\n      toast({\n        title: \"Đăng ký thất bại\",\n        description: error.message || \"Có lỗi xảy ra khi đăng ký\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  const handleBackToLogin = () => {\n    setLocation(\"/login\");\n  };\n\n\n  return (\n    <div className=\"flex gap-6\">\n      {/* Register Form */}\n      <div className=\"flex-1 max-w-md\">\n        <Card className=\"overflow-hidden border-0 shadow-2xl bg-gray-800 text-white\">\n          {/* Green Header */}\n          <CardHeader className=\"bg-green-600 text-center py-6\">\n            <CardTitle className=\"text-2xl font-bold text-white\">\n              Đăng Ký\n            </CardTitle>\n          </CardHeader>\n          \n          <CardContent className=\"p-6 space-y-4\">\n            <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-4\" data-testid=\"register-form\">\n              {/* Email Field */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\" className=\"text-white font-medium\">\n                  Địa Chỉ E-Mail (*)\n                </Label>\n                <Input\n                  id=\"email\"\n                  data-testid=\"email-input\"\n                  type=\"email\"\n                  placeholder=\"\"\n                  {...form.register(\"email\")}\n                  className=\"bg-gray-100 border-gray-300 text-gray-900 placeholder:text-gray-500\"\n                  disabled={isLoading}\n                />\n                {form.formState.errors.email && (\n                  <p className=\"text-sm text-red-500\">{form.formState.errors.email.message}</p>\n                )}\n              </div>\n\n              {/* Full Name Field */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"fullName\" className=\"text-white font-medium\">\n                  Họ và Tên (*)\n                </Label>\n                <Input\n                  id=\"fullName\"\n                  data-testid=\"fullname-input\"\n                  type=\"text\"\n                  placeholder=\"\"\n                  {...form.register(\"fullname\")}\n                  className=\"bg-gray-100 border-gray-300 text-gray-900 placeholder:text-gray-500\"\n                  disabled={isLoading}\n                />\n                {form.formState.errors.fullname && (\n                  <p className=\"text-sm text-red-500\">{form.formState.errors.fullname.message}</p>\n                )}\n              </div>\n\n\n              {/* Password Field */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\" className=\"text-white font-medium\">\n                  Mật Khẩu (*)\n                </Label>\n                <Input\n                  id=\"password\"\n                  data-testid=\"password-input\"\n                  type=\"password\"\n                  placeholder=\"\"\n                  {...form.register(\"password\")}\n                  className=\"bg-gray-100 border-gray-300 text-gray-900 placeholder:text-gray-500\"\n                  disabled={isLoading}\n                />\n                {form.formState.errors.password && (\n                  <p className=\"text-sm text-red-500\">{form.formState.errors.password.message}</p>\n                )}\n              </div>\n\n              {/* Register Button */}\n              <Button\n                type=\"submit\"\n                className=\"w-full bg-green-600 hover:bg-green-700 text-white font-medium py-3\"\n                disabled={isLoading}\n                data-testid=\"register-button\"\n              >\n                <UserPlus className=\"w-4 h-4 mr-2\" />\n                {isLoading ? \"Đang đăng ký...\" : \"Đăng Ký\"}\n              </Button>\n            </form>\n\n            {/* Divider */}\n            <div className=\"relative my-6\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <div className=\"w-full border-t border-gray-600\"></div>\n              </div>\n              <div className=\"relative flex justify-center text-sm\">\n                <span className=\"px-4 bg-gray-800 text-gray-400 font-medium\">\n                  - HOẶC -\n                </span>\n              </div>\n            </div>\n\n            {/* Back to Login Button */}\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              className=\"w-full bg-blue-600 hover:bg-blue-700 border-blue-600 text-white font-medium\"\n              onClick={handleBackToLogin}\n              data-testid=\"back-to-login-button\"\n            >\n              <LogIn className=\"w-4 h-4 mr-2\" />\n              Đăng Nhập\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Rules Section */}\n      <div className=\"w-80\">\n        <Card className=\"overflow-hidden border-0 shadow-2xl bg-gray-800 text-white\">\n          {/* Green Header */}\n          <CardHeader className=\"bg-green-600 text-center py-4\">\n            <CardTitle className=\"text-xl font-bold text-white\">\n              Quy Tắc\n            </CardTitle>\n          </CardHeader>\n          \n          <CardContent className=\"p-6 space-y-4\">\n            <div className=\"text-sm text-gray-300 space-y-3\">\n              <p>\n                <strong>- Nhập đúng địa chỉ Email thật để lấy lại Password khi quên!</strong>\n              </p>\n              \n              <p>\n                <strong>- Họ và tên phải có ít nhất 2 ký tự!</strong>\n              </p>\n              \n              <p>\n                <strong>- Mật khẩu tối thiểu 6 ký tự, phải bao gồm chữ và số!</strong>\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":7147},"src/components/Sidebar.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { cn } from \"@/lib/utils\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  ShoppingBag,\n  CreditCard,\n  History,\n  Users,\n  Settings,\n  PlusCircle,\n  User2,\n} from \"lucide-react\";\n\nexport function Sidebar() {\n  const [location] = useLocation();\n  const { user } = useAuth();\n\n  const navigation = [\n    {\n      name: \"Thông tin cá nhân\",\n      href: \"/profile\",\n      icon: User2,\n    },\n    {\n      name: \"Công cụ đã mua\",\n      href: \"/purchased-tools\",\n      icon: ShoppingBag,\n    },\n    {\n      name: \"Nạp tiền\",\n      href: \"/deposit\",\n      icon: CreditCard,\n    },\n    {\n      name: \"Lịch sử\",\n      href: \"/history\",\n      icon: History,\n    },\n  ];\n\n  const adminNavigation = user?.isAdmin\n    ? [\n        {\n          name: \"Admin Panel\",\n          href: \"/admin\",\n          icon: Settings,\n        },\n        {\n          name: \"Quản lý người dùng\",\n          href: \"/admin/users\",\n          icon: Users,\n        },\n        {\n          name: \"Thêm công cụ\",\n          href: \"/admin/tools/new\",\n          icon: PlusCircle,\n        },\n      ]\n    : [];\n\n  return (\n    <div className=\"flex h-full w-64 flex-col bg-card border-r border-border\">\n      {/* User Info */}\n      <div className=\"flex items-center space-x-3 p-6 border-b border-border\">\n        <Avatar className=\"h-10 w-10\">\n          <AvatarImage src={user?.profileImageUrl} alt=\"\" />\n          <AvatarFallback>\n            {user?.firstName?.[0]?.toUpperCase() || user?.email?.[0]?.toUpperCase() || \"U\"}\n          </AvatarFallback>\n        </Avatar>\n        <div>\n          <p className=\"font-semibold text-sm\" data-testid=\"text-user-name\">\n            {user?.firstName && user?.lastName \n              ? `${user.firstName} ${user.lastName}`\n              : user?.email || \"User\"}\n          </p>\n          <p className=\"text-xs text-muted-foreground\">\n            {user?.isAdmin ? \"Quản trị viên\" : \"Thành viên\"}\n          </p>\n          <p className=\"text-xs font-medium text-emerald-600\" data-testid=\"text-user-balance\">\n            Số dư: {Number(user?.balance || 0).toLocaleString('vi-VN')}₫\n          </p>\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"flex-1 space-y-1 p-4\">\n        {navigation.map((item) => (\n          <Link\n            key={item.href}\n            href={item.href}\n            className={cn(\n              \"flex items-center space-x-3 px-3 py-2 rounded-lg text-sm font-medium transition-colors\",\n              location === item.href\n                ? \"bg-accent text-accent-foreground\"\n                : \"hover:bg-accent hover:text-accent-foreground\"\n            )}\n            data-testid={`link-sidebar-${item.name.toLowerCase().replace(/\\s+/g, '-')}`}\n          >\n            <item.icon className=\"h-5 w-5\" />\n            <span>{item.name}</span>\n          </Link>\n        ))}\n\n        {/* Admin Section */}\n        {adminNavigation.length > 0 && (\n          <>\n            <div className=\"py-2\">\n              <div className=\"px-3 py-2 text-xs font-semibold text-muted-foreground uppercase tracking-wider\">\n                Quản trị\n              </div>\n            </div>\n            {adminNavigation.map((item) => (\n              <Link\n                key={item.href}\n                href={item.href}\n                className={cn(\n                  \"flex items-center space-x-3 px-3 py-2 rounded-lg text-sm font-medium transition-colors\",\n                  location === item.href\n                    ? \"bg-accent text-accent-foreground\"\n                    : \"hover:bg-accent hover:text-accent-foreground\"\n                )}\n                data-testid={`link-sidebar-admin-${item.name.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                <item.icon className=\"h-5 w-5\" />\n                <span>{item.name}</span>\n              </Link>\n            ))}\n          </>\n        )}\n      </nav>\n    </div>\n  );\n}\n","size_bytes":4033},"src/components/ThemeProvider.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\";\n\ntype Theme = \"dark\" | \"light\" | \"system\";\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: \"system\",\n  setTheme: () => null,\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"system\",\n  storageKey = \"ui-theme\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  );\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n\n    root.classList.remove(\"light\", \"dark\");\n\n    if (theme === \"system\") {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n        .matches\n        ? \"dark\"\n        : \"light\";\n\n      root.classList.add(systemTheme);\n      return;\n    }\n\n    root.classList.add(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme);\n      setTheme(theme);\n    },\n  };\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n\n  return context;\n};\n","size_bytes":1600},"src/components/ToolCard.tsx":{"content":"import { Link } from \"wouter\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Eye, ShoppingCart } from \"lucide-react\";\n\ninterface ToolCardProps {\n  tool: {\n    id: string;\n    name: string;\n    description: string;\n    price: string;\n    prices?: Array<{ duration: string; amount: string }>;\n    imageUrl?: string;\n    views: number;\n    purchases: number;\n    [key: string]: any;\n  };\n  onPurchase?: (toolId: string) => void;\n}\n\nexport function ToolCard({ tool, onPurchase }: ToolCardProps) {\n  const handlePurchase = (e: React.MouseEvent) => {\n    e.preventDefault();\n    onPurchase?.(tool.id);\n  };\n\n  return (\n    <Card className=\"overflow-hidden hover:shadow-md transition-all duration-200 border border-gray-200 dark:border-gray-700 h-[320px] flex flex-col\" data-testid={`card-tool-${tool.id}`}>\n      {/* Tool Image - Orange Dragon Ball style */}\n      <div className=\"relative bg-gradient-to-br from-orange-400 to-orange-600 h-24 flex items-center justify-center flex-shrink-0\">\n        <div className=\"text-center\">\n          <div className=\"text-4xl mb-2\">🐉</div>\n          <div className=\"text-white font-bold text-xs bg-black/20 px-2 py-1 rounded\">NGỌC RỒNG</div>\n        </div>\n      </div>\n\n      <CardContent className=\"p-3 flex flex-col flex-grow\">\n        <div className=\"flex flex-col h-full\">\n          {/* Tool Name */}\n          <h3 className=\"font-bold text-sm text-center text-gray-800 dark:text-white mb-2 line-clamp-2 min-h-[2rem]\" data-testid={`text-tool-name-${tool.id}`}>\n            {tool.name}\n          </h3>\n          \n          {/* Pricing Options */}\n          <div className=\"space-y-1 mb-2 min-h-[3rem]\">\n            {tool.prices?.map((priceOption, index) => (\n              <div key={index} className=\"flex justify-between items-center text-xs\">\n                <span className=\"text-red-500 font-semibold\">\n                  {Number(priceOption.amount).toLocaleString('vi-VN')} ₫\n                </span>\n                <span className=\"text-red-400 dark:text-red-300\">/ {priceOption.duration}</span>\n              </div>\n            ))}\n            {!tool.prices && (\n              <div className=\"flex justify-between items-center text-xs\">\n                <span className=\"text-red-500 font-semibold\">\n                  {Number(tool.price).toLocaleString('vi-VN')} ₫\n                </span>\n                <span className=\"text-red-400 dark:text-red-300\">/ Vĩnh viễn</span>\n              </div>\n            )}\n          </div>\n\n          {/* Stats */}\n          <div className=\"flex justify-center items-center space-x-4 text-xs text-gray-500 dark:text-gray-400 mb-2 min-h-[1rem]\">\n            <div className=\"flex items-center space-x-1\">\n              <Eye className=\"w-3 h-3\" />\n              <span data-testid={`text-tool-views-${tool.id}`}>\n                Lượt xem: {tool.views?.toLocaleString('vi-VN') || 0}\n              </span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <ShoppingCart className=\"w-3 h-3\" />\n              <span data-testid={`text-tool-purchases-${tool.id}`}>\n                Lượt mua: {tool.purchases?.toLocaleString('vi-VN') || 0}\n              </span>\n            </div>\n          </div>\n          \n          {/* View Details Button */}\n          <div className=\"mt-auto\">\n            <Link href={`/tools/${tool.id}`}>\n              <Button \n                variant=\"outline\"\n                className=\"w-full text-blue-500 dark:text-blue-400 border-blue-300 dark:border-blue-600 hover:bg-blue-50 dark:hover:bg-blue-950 text-xs font-medium\"\n                data-testid={`button-view-details-${tool.id}`}\n              >\n                XEM CHI TIẾT\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":3874},"src/components/WelcomeModal.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Tooltip, TooltipContent, TooltipTrigger } from \"@/components/ui/tooltip\";\nimport { \n  X, \n  Megaphone, \n  ShieldAlert, \n  Users, \n  MessageSquare, \n  ExternalLink, \n  Facebook,\n  Sparkles,\n  Star,\n  Zap,\n  Gift,\n  Crown\n} from \"lucide-react\";\n\nexport function WelcomeModal() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [location] = useLocation();\n\n  useEffect(() => {\n    // Always clear session storage on every page load to ensure modal shows\n    sessionStorage.removeItem('welcome-modal-dismissed-session');\n    \n    // Show modal after a short delay for better UX\n    const timer = setTimeout(() => {\n      setIsOpen(true);\n    }, 1000);\n    \n    return () => clearTimeout(timer);\n  }, []); // Only run once on mount (page load/reload)\n\n  const handleClose = () => {\n    setIsOpen(false);\n    // Mark modal as dismissed in current session\n    sessionStorage.setItem('welcome-modal-dismissed-session', 'true');\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent \n        className=\"max-w-md w-full rounded-2xl p-0 overflow-hidden shadow-xl border-0 bg-gradient-to-br from-purple-50 via-pink-50 to-red-50 dark:from-purple-900/20 dark:via-pink-900/20 dark:to-red-900/20 animate-in zoom-in-95 duration-500 [&>button]:hidden backdrop-blur-sm\" \n        data-testid=\"modal-welcome\"\n      >\n        {/* Floating particles background */}\n        <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n          <div className=\"absolute top-4 left-4 w-2 h-2 bg-yellow-400 rounded-full animate-pulse opacity-60\"></div>\n          <div className=\"absolute top-8 right-8 w-1 h-1 bg-pink-400 rounded-full animate-bounce delay-300\"></div>\n          <div className=\"absolute bottom-12 left-8 w-1.5 h-1.5 bg-purple-400 rounded-full animate-pulse delay-500\"></div>\n          <div className=\"absolute bottom-20 right-12 w-1 h-1 bg-blue-400 rounded-full animate-bounce delay-700\"></div>\n        </div>\n\n        {/* Premium Close Button */}\n        <Tooltip>\n          <TooltipTrigger asChild>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={handleClose}\n              className=\"absolute -top-4 -right-4 h-10 w-10 rounded-full bg-gradient-to-br from-red-500 to-pink-600 text-white shadow-lg hover:shadow-xl hover:from-red-600 hover:to-pink-700 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-red-500 transition-all duration-300 z-50 group\"\n              data-testid=\"button-close-modal\"\n              aria-label=\"Đóng thông báo\"\n            >\n              <X className=\"h-5 w-5 group-hover:rotate-90 transition-transform duration-300\" />\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent side=\"left\">\n            <p>Đóng thông báo</p>\n          </TooltipContent>\n        </Tooltip>\n\n        {/* Stunning Header with animated gradient */}\n        <DialogHeader className=\"bg-gradient-to-r from-purple-600 via-pink-600 to-red-600 text-white p-4 relative overflow-hidden\">\n          {/* Animated gradient overlay */}\n          <div className=\"absolute inset-0 bg-gradient-to-r from-purple-600/80 via-pink-600/80 to-red-600/80 animate-pulse\"></div>\n          \n          {/* Sparkle effects */}\n          <div className=\"absolute top-2 left-4\">\n            <Sparkles className=\"h-4 w-4 text-yellow-300 animate-spin\" />\n          </div>\n          <div className=\"absolute top-4 right-6\">\n            <Star className=\"h-3 w-3 text-yellow-200 animate-pulse\" />\n          </div>\n          <div className=\"absolute bottom-2 left-8\">\n            <Zap className=\"h-3 w-3 text-yellow-400 animate-bounce\" />\n          </div>\n          \n          <DialogTitle className=\"text-center text-2xl font-bold tracking-tight flex items-center justify-center gap-3 relative z-10\">\n            <div className=\"p-2 bg-white/20 rounded-full backdrop-blur-sm\">\n              <Megaphone className=\"h-6 w-6 animate-pulse\" />\n            </div>\n            <span className=\"bg-gradient-to-r from-yellow-200 to-white bg-clip-text text-transparent\">\n              THÔNG BÁO ĐẶC BIỆT\n            </span>\n          </DialogTitle>\n          <DialogDescription className=\"sr-only\">\n            Thông báo chào mừng về shop tool/VPS ngọc rồng online\n          </DialogDescription>\n        </DialogHeader>\n\n        {/* Enhanced Content */}\n        <div className=\"p-4 space-y-3 relative\" id=\"welcome-modal-description\">\n          {/* Premium Title Section */}\n          <div className=\"text-center space-y-2\">\n            <h2 className=\"text-xl font-bold bg-gradient-to-r from-purple-600 via-pink-600 to-red-600 bg-clip-text text-transparent\">\n              SHOP TOOL/VPS NGỌC RỒNG ONLINE\n            </h2>\n            <Badge className=\"bg-gradient-to-r from-purple-600 to-pink-600 text-white px-3 py-1 text-xs font-semibold\">\n              <Crown className=\"h-3 w-3 mr-1\" />\n              LinhCong.net\n            </Badge>\n          </div>\n\n          {/* Description */}\n          <div className=\"bg-gradient-to-br from-white/80 to-purple-50/80 dark:from-gray-800/80 dark:to-purple-900/40 rounded-lg p-3\">\n            <p className=\"text-sm text-gray-700 dark:text-gray-300 text-center\">\n              🚀 Shop đã tích hợp <span className=\"font-bold text-purple-600\">nạp tự động</span>\n            </p>\n          </div>\n\n          {/* License Info */}\n          <Alert className=\"border-0 bg-gradient-to-br from-red-100 to-pink-100 dark:from-red-900/30 dark:to-pink-900/30\">\n            <ShieldAlert className=\"h-4 w-4 text-red-600\" />\n            <AlertDescription className=\"text-red-700 dark:text-red-300 text-sm\">\n              ⚡ Đổi license <Badge className=\"mx-1 bg-green-500 text-white px-2 py-0.5 text-xs\">không giới hạn</Badge>\n            </AlertDescription>\n          </Alert>\n\n          {/* Action Links */}\n          <div className=\"grid gap-2\">\n            <Button\n              size=\"sm\"\n              className=\"justify-center gap-2 py-2 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white\"\n              onClick={() => window.open('#', '_blank', 'noopener,noreferrer')}\n              data-testid=\"link-group-chat\"\n            >\n              <Users className=\"h-4 w-4\" />\n              GROUP GIAO LƯU\n            </Button>\n            \n            <Button\n              size=\"sm\"\n              className=\"justify-center gap-2 py-2 bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700 text-white\"\n              onClick={() => window.open('#', '_blank', 'noopener,noreferrer')}\n              data-testid=\"link-zalo-chat\"\n            >\n              <MessageSquare className=\"h-4 w-4\" />\n              BOX CHAT ZALO\n            </Button>\n          </div>\n\n          {/* Close Button */}\n          <Button \n            onClick={handleClose}\n            className=\"w-full bg-gradient-to-r from-purple-600 to-red-600 hover:from-purple-700 hover:to-red-700 text-white font-bold py-3\"\n            data-testid=\"button-close-welcome\"\n          >\n            <Sparkles className=\"h-4 w-4 mr-2\" />\n            Đã hiểu rồi!\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}","size_bytes":7675},"src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"src/contexts/AuthContext.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest, getTokens, setTokens, getUser, setUser } from '@/lib/queryClient';\nimport type { AuthContextType, LoginRequest, RegisterRequest, JWTTokens, ExternalUser } from '@shared/authTypes';\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const queryClient = useQueryClient();\n\n  // Initialize auth state from localStorage\n  const [tokens, setTokensState] = useState<JWTTokens | null>(getTokens());\n  const [user, setUserState] = useState<ExternalUser | null>(getUser());\n\n  // Query to fetch current user\n  const { data: fetchedUser, isLoading: userLoading } = useQuery({\n    queryKey: ['/api/auth/user'],\n    enabled: false, // We'll manually trigger this\n    retry: false,\n  });\n\n  // Login mutation\n  const loginMutation = useMutation({\n    mutationFn: async (credentials: LoginRequest) => {\n      const response = await apiRequest('POST', '/api/auth/login', credentials);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      if (data.success && data.data) {\n        const { accessToken, refreshToken, user: userData } = data.data;\n        const newTokens = { accessToken, refreshToken };\n        \n        setTokens(newTokens);\n        setUser(userData);\n        setTokensState(newTokens);\n        setUserState(userData);\n        \n        // Invalidate and refetch user data\n        queryClient.invalidateQueries({ queryKey: ['/api/auth/user'] });\n      }\n    },\n    onError: (error: any) => {\n      console.error('Login failed:', error);\n      throw error;\n    },\n  });\n\n  // Register mutation\n  const registerMutation = useMutation({\n    mutationFn: async (data: RegisterRequest) => {\n      const response = await apiRequest('POST', '/api/auth/register', data);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      if (data.success && data.data) {\n        const { accessToken, refreshToken, user: userData } = data.data;\n        const newTokens = { accessToken, refreshToken };\n        \n        setTokens(newTokens);\n        setUser(userData);\n        setTokensState(newTokens);\n        setUserState(userData);\n        \n        // Invalidate and refetch user data\n        queryClient.invalidateQueries({ queryKey: ['/api/auth/user'] });\n      }\n    },\n    onError: (error: any) => {\n      console.error('Register failed:', error);\n      throw error;\n    },\n  });\n\n  // Refresh token mutation\n  const refreshTokenMutation = useMutation({\n    mutationFn: async (refreshToken: string) => {\n      const response = await apiRequest('POST', '/api/auth/refresh-token', { refreshToken });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      if (data.success && data.data) {\n        const { accessToken, refreshToken } = data.data;\n        const newTokens = { accessToken, refreshToken };\n        \n        setTokens(newTokens);\n        setTokensState(newTokens);\n        \n        // Refetch user data with new token\n        queryClient.invalidateQueries({ queryKey: ['/api/auth/user'] });\n      }\n    },\n    onError: (error: any) => {\n      console.error('Token refresh failed:', error);\n      // Clear tokens on refresh failure\n      handleLogout();\n    },\n  });\n\n  // Logout function\n  const handleLogout = async () => {\n    try {\n      // Call logout endpoint to clear server-side data\n      await apiRequest('POST', '/api/auth/logout');\n    } catch (error) {\n      console.error('Logout API call failed:', error);\n    } finally {\n      // Always clear local storage and state\n      setTokens(null);\n      setUser(null);\n      setTokensState(null);\n      setUserState(null);\n      \n      // Clear all queries\n      queryClient.clear();\n    }\n  };\n\n  // Refresh token function\n  const handleRefreshToken = async (): Promise<boolean> => {\n    if (!tokens?.refreshToken) return false;\n    \n    try {\n      await refreshTokenMutation.mutateAsync(tokens.refreshToken);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n\n  // Profile update mutation\n  const updateProfileMutation = useMutation({\n    mutationFn: async (data: { fullname?: string; phone?: string }) => {\n      const response = await apiRequest('PUT', '/api/auth/profile', data);\n      return response.json();\n    },\n    onSuccess: (data) => {\n      if (data.success && data.data) {\n        setUser(data.data);\n        setUserState(data.data);\n        \n        // Invalidate and refetch user data\n        queryClient.invalidateQueries({ queryKey: ['/api/auth/user'] });\n      }\n    },\n  });\n\n  // Change password mutation\n  const changePasswordMutation = useMutation({\n    mutationFn: async (data: { oldPassword: string; newPassword: string }) => {\n      const response = await apiRequest('PUT', '/api/auth/change-password', data);\n      return response.json();\n    },\n  });\n\n  // Initialize authentication on app start\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedTokens = getTokens();\n      const storedUser = getUser();\n\n      if (storedTokens && storedUser) {\n        setTokensState(storedTokens);\n        setUserState(storedUser);\n\n        // Try to verify the token by fetching user data\n        try {\n          const response = await fetch('/api/auth/user', {\n            headers: {\n              Authorization: `Bearer ${storedTokens.accessToken}`,\n            },\n            credentials: 'include',\n          });\n\n          if (response.ok) {\n            const userData = await response.json();\n            setUser(userData);\n            setUserState(userData);\n          } else if (response.status === 401 && storedTokens.refreshToken) {\n            // Token expired, try to refresh\n            const refreshed = await handleRefreshToken();\n            if (!refreshed) {\n              // Refresh failed, clear everything\n              await handleLogout();\n            }\n          } else {\n            // Clear invalid tokens\n            await handleLogout();\n          }\n        } catch (error) {\n          console.error('Auth initialization failed:', error);\n          await handleLogout();\n        }\n      }\n      \n      setIsLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const contextValue: AuthContextType = {\n    user,\n    tokens,\n    login: async (credentials: LoginRequest) => {\n      await loginMutation.mutateAsync(credentials);\n    },\n    register: async (data: RegisterRequest) => {\n      await registerMutation.mutateAsync(data);\n    },\n    logout: handleLogout,\n    refreshToken: handleRefreshToken,\n    updateProfile: async (data: { fullname?: string; phone?: string }) => {\n      await updateProfileMutation.mutateAsync(data);\n    },\n    changePassword: async (data: { oldPassword: string; newPassword: string }) => {\n      await changePasswordMutation.mutateAsync(data);\n    },\n    isLoading: isLoading || loginMutation.isPending || registerMutation.isPending,\n    isAuthenticated: !!user && !!tokens,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};","size_bytes":7485},"src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"src/hooks/useAuth.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\ninterface User {\n  id: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n  profileImageUrl?: string;\n  balance: string;\n  isAdmin: boolean;\n}\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  return {\n    user: user as User | undefined,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n}\n","size_bytes":444},"src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(222.2 84% 4.9%);\n  --card: hsl(0 0% 100%);\n  --card-foreground: hsl(222.2 84% 4.9%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(222.2 84% 4.9%);\n  --primary: hsl(222.2 47.4% 11.2%);\n  --primary-foreground: hsl(210 40% 98%);\n  --secondary: hsl(210 40% 96%);\n  --secondary-foreground: hsl(222.2 84% 4.9%);\n  --muted: hsl(210 40% 96%);\n  --muted-foreground: hsl(215.4 16.3% 46.9%);\n  --accent: hsl(210 40% 96%);\n  --accent-foreground: hsl(222.2 84% 4.9%);\n  --destructive: hsl(0 84.2% 60.2%);\n  --destructive-foreground: hsl(210 40% 98%);\n  --border: hsl(214.3 31.8% 91.4%);\n  --input: hsl(214.3 31.8% 91.4%);\n  --ring: hsl(222.2 84% 4.9%);\n  --chart-1: hsl(203.8863 88.2845% 53.1373%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(180 6.6667% 97.0588%);\n  --sidebar-foreground: hsl(210 25% 7.8431%);\n  --sidebar-primary: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(211.5789 51.3514% 92.7451%);\n  --sidebar-accent-foreground: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-border: hsl(205.0000 25.0000% 90.5882%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n  --font-sans: Inter, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.75rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 2px 4px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 4px 6px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 8px 10px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: hsl(222.2 84% 4.9%);\n  --foreground: hsl(210 40% 98%);\n  --card: hsl(222.2 84% 4.9%);\n  --card-foreground: hsl(210 40% 98%);\n  --popover: hsl(222.2 84% 4.9%);\n  --popover-foreground: hsl(210 40% 98%);\n  --primary: hsl(210 40% 98%);\n  --primary-foreground: hsl(222.2 47.4% 11.2%);\n  --secondary: hsl(217.2 32.6% 17.5%);\n  --secondary-foreground: hsl(210 40% 98%);\n  --muted: hsl(217.2 32.6% 17.5%);\n  --muted-foreground: hsl(215 20.2% 65.1%);\n  --accent: hsl(217.2 32.6% 17.5%);\n  --accent-foreground: hsl(210 40% 98%);\n  --destructive: hsl(0 62.8% 30.6%);\n  --destructive-foreground: hsl(210 40% 98%);\n  --border: hsl(217.2 32.6% 17.5%);\n  --input: hsl(217.2 32.6% 17.5%);\n  --ring: hsl(212.7 26.8% 83.9%);\n  --sidebar: hsl(228 9.8039% 10%);\n  --sidebar-foreground: hsl(0 0% 85.0980%);\n  --sidebar-primary: hsl(202.8169 89.1213% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(205.7143 70% 7.8431%);\n  --sidebar-accent-foreground: hsl(203.7736 87.6033% 52.5490%);\n  --sidebar-border: hsl(205.7143 15.7895% 26.0784%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n  --font-sans: Inter, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 0.75rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 1px 2px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 2px 4px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 4px 6px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00), 0px 8px 10px -1px hsl(202.8169 89.1213% 53.1373% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(202.8169 89.1213% 53.1373% / 0.00);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n.glass-effect {\n  backdrop-filter: blur(10px);\n  background: rgba(255, 255, 255, 0.9);\n}\n\n.dark .glass-effect {\n  background: rgba(0, 0, 0, 0.9);\n}\n\n.gradient-text {\n  background: linear-gradient(135deg, #3b82f6, #10b981);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.hover-lift {\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.hover-lift:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n}\n\n.dark .hover-lift:hover {\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes slideUp {\n  from { transform: translateY(20px); opacity: 0; }\n  to { transform: translateY(0); opacity: 1; }\n}\n\n@keyframes bounceGentle {\n  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }\n  40% { transform: translateY(-10px); }\n  60% { transform: translateY(-5px); }\n}\n\n.animate-fade-in {\n  animation: fadeIn 0.5s ease-in-out;\n}\n\n.animate-slide-up {\n  animation: slideUp 0.3s ease-out;\n}\n\n.animate-bounce-gentle {\n  animation: bounceGentle 0.6s ease-in-out;\n}\n","size_bytes":5781},"src/lib/authUtils.ts":{"content":"export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}","size_bytes":115},"src/lib/mockData.ts":{"content":"// Mock data for tools and categories\n// Using placeholder image URL instead of imported asset to avoid module resolution issues\nconst proxyLogo = \"https://images.unsplash.com/photo-1558494949-ef010cbdcc31?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\";\nexport const mockCategories = [\n  {\n    id: \"1\",\n    name: \"Công cụ SEO\",\n    slug: \"seo-tools\",\n    createdAt: new Date(),\n  },\n  {\n    id: \"2\", \n    name: \"Marketing\",\n    slug: \"marketing\",\n    createdAt: new Date(),\n  },\n  {\n    id: \"3\",\n    name: \"Thiết kế\",\n    slug: \"design\", \n    createdAt: new Date(),\n  },\n  {\n    id: \"4\",\n    name: \"Phân tích dữ liệu\",\n    slug: \"analytics\",\n    createdAt: new Date(),\n  },\n  {\n    id: \"5\",\n    name: \"PROXY VIỆT\",\n    slug: \"proxy-viet\",\n    createdAt: new Date(),\n  }\n];\n\nexport const mockTools = [\n  {\n    id: \"1\",\n    name: \"NHẶT NGỌC HÀNG NGÀY\",\n    description: \"Công cụ tự động nhặt ngọc hàng ngày trong game\",\n    price: \"299000\",\n    prices: [\n      { duration: \"7 ngày\", amount: \"15000\" },\n      { duration: \"30 ngày\", amount: \"50000\" }, \n      { duration: \"Vĩnh viễn\", amount: \"250000\" }\n    ],\n    categoryId: \"1\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n    videoUrl: null,\n    instructions: null,\n    downloadUrl: \"https://example.com/download/nhat-ngoc\",\n    views: 3005,\n    purchases: 233,\n    rating: \"4.8\",\n    reviewCount: 89,\n    isActive: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    category: mockCategories[0]\n  },\n  {\n    id: \"2\", \n    name: \"NHẬN THƯỞNG NGỌC RỒNG ĐEN\",\n    description: \"Tự động nhận thưởng ngọc rồng đen\",\n    price: \"199000\",\n    prices: [\n      { duration: \"7 ngày\", amount: \"15000\" },\n      { duration: \"30 ngày\", amount: \"50000\" },\n      { duration: \"Vĩnh viễn\", amount: \"200000\" }\n    ],\n    categoryId: \"2\", \n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n    videoUrl: null,\n    instructions: null,\n    downloadUrl: \"https://example.com/download/nhan-thuong\",\n    views: 3010,\n    purchases: 724,\n    rating: \"4.6\", \n    reviewCount: 42,\n    isActive: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    category: mockCategories[1]\n  },\n  {\n    id: \"3\",\n    name: \"BOT BÁN ITEM\", \n    description: \"Tự động bán item trong game\",\n    price: \"399000\",\n    prices: [\n      { duration: \"7 ngày\", amount: \"15000\" },\n      { duration: \"30 ngày\", amount: \"50000\" },\n      { duration: \"Vĩnh viễn\", amount: \"300000\" }\n    ],\n    categoryId: \"3\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n    videoUrl: null,\n    instructions: null, \n    downloadUrl: \"https://example.com/download/bot-ban-item\",\n    views: 7267,\n    purchases: 354,\n    rating: \"4.9\",\n    reviewCount: 156,\n    isActive: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    category: mockCategories[2]\n  },\n  {\n    id: \"4\",\n    name: \"AUTO BÁN ĐỒ KHO BẢU\",\n    description: \"Tự động bán đồ kho báu trong game\",\n    price: \"599000\", \n    prices: [\n      { duration: \"7 ngày\", amount: \"35000\" },\n      { duration: \"30 ngày\", amount: \"100000\" },\n      { duration: \"Vĩnh viễn\", amount: \"500000\" }\n    ],\n    categoryId: \"4\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n    videoUrl: null,\n    instructions: null,\n    downloadUrl: \"https://example.com/download/auto-ban-do\",\n    views: 12063,\n    purchases: 608,\n    rating: \"4.7\",\n    reviewCount: 38,\n    isActive: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    category: mockCategories[3]\n  },\n  {\n    id: \"5\",\n    name: \"TỰ ĐỘNG ĐÁNH QUÁI\",\n    description: \"Tool tự động đánh quái và train level\",\n    price: \"450000\",\n    prices: [\n      { duration: \"7 ngày\", amount: \"35000\" },\n      { duration: \"30 ngày\", amount: \"100000\" },\n      { duration: \"Vĩnh viễn\", amount: \"600000\" }\n    ],\n    categoryId: \"2\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n    videoUrl: null,\n    instructions: null,\n    downloadUrl: \"https://example.com/download/auto-danh-quai\",\n    views: 8543,\n    purchases: 421,\n    rating: \"4.5\",\n    reviewCount: 73,\n    isActive: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    category: mockCategories[1]\n  },\n  {\n    id: \"6\", \n    name: \"TOOL UP ĐỂ VERT\",\n    description: \"Tool tự động up để vert trong game\",\n    price: \"349000\",\n    prices: [\n      { duration: \"7 ngày\", amount: \"15000\" },\n      { duration: \"30 ngày\", amount: \"40000\" },\n      { duration: \"Vĩnh viễn\", amount: \"250000\" }\n    ],\n    categoryId: \"2\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n    videoUrl: null,\n    instructions: null,\n    downloadUrl: \"https://example.com/download/tool-up-vert\",\n    views: 5621,\n    purchases: 298,\n    rating: \"4.4\",\n    reviewCount: 56,\n    isActive: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    category: mockCategories[1]\n  },\n  {\n    id: \"7\",\n    name: \"TOOL AUTO UP ĐỂ VERT\",\n    description: \"Phiên bản nâng cao của tool up để vert\", \n    price: \"499000\",\n    prices: [\n      { duration: \"7 ngày\", amount: \"35000\" },\n      { duration: \"30 ngày\", amount: \"100000\" },\n      { duration: \"Vĩnh viễn\", amount: \"600000\" }\n    ],\n    categoryId: \"2\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n    videoUrl: null,\n    instructions: null,\n    downloadUrl: \"https://example.com/download/tool-auto-up-vert\",\n    views: 4532,\n    purchases: 187,\n    rating: \"4.6\",\n    reviewCount: 34,\n    isActive: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    category: mockCategories[1]\n  },\n  {\n    id: \"8\",\n    name: \"TOOL UP CAPSULE XI BỊ\",\n    description: \"Tool tự động up capsule xi bị\",\n    price: \"399000\",\n    prices: [\n      { duration: \"7 ngày\", amount: \"35000\" },\n      { duration: \"30 ngày\", amount: \"100000\" },\n      { duration: \"Vĩnh viễn\", amount: \"600000\" }\n    ],\n    categoryId: \"3\",\n    imageUrl: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\",\n    videoUrl: null,\n    instructions: null,\n    downloadUrl: \"https://example.com/download/tool-capsule\",\n    views: 3245,\n    purchases: 156,\n    rating: \"4.3\",\n    reviewCount: 28,\n    isActive: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    category: mockCategories[2]\n  },\n  {\n    id: \"9\",\n    name: \"PROXY VIỆT NAM\",\n    description: \"Proxy Việt Nam chất lượng cao, tốc độ nhanh, ổn định cho mọi nhu cầu\",\n    price: \"50000\", // Base price per month\n    baseMonthlyPrice: \"50000\", // 50k per month\n    categoryId: \"5\",\n    imageUrl: proxyLogo,\n    videoUrl: null,\n    instructions: \"Hướng dẫn sử dụng proxy:\\n1. Sao chép IP và port\\n2. Nhập vào trình duyệt hoặc ứng dụng\\n3. Sử dụng username/password được cung cấp\",\n    downloadUrl: \"https://example.com/download/proxy-vn\",\n    views: 2845,\n    purchases: 456,\n    rating: \"4.8\",\n    reviewCount: 123,\n    isActive: true,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    category: mockCategories[4]\n  }\n];\n\n// Mock user data\nexport const mockUser = {\n  id: \"user-1\",\n  email: \"demo@example.com\", \n  firstName: \"Demo\",\n  lastName: \"User\",\n  profileImageUrl: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n  balance: \"1000000\", // 1,000,000 VND\n  isAdmin: false,\n  createdAt: new Date(),\n  updatedAt: new Date(),\n};\n\nexport const mockAdminUser = {\n  id: \"admin-1\", \n  email: \"admin@example.com\",\n  firstName: \"Admin\",\n  lastName: \"User\",\n  profileImageUrl: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\", \n  balance: \"5000000\", // 5,000,000 VND\n  isAdmin: true,\n  createdAt: new Date(),\n  updatedAt: new Date(),\n};\n\n// Mock payments data for history\nexport const mockPayments = [\n  {\n    id: \"payment-1\",\n    userId: \"user-1\",\n    type: \"deposit\",\n    amount: \"500000\",\n    status: \"completed\",\n    description: \"Nạp tiền vào tài khoản\",\n    createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2 days ago\n    updatedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000)\n  },\n  {\n    id: \"payment-2\", \n    userId: \"user-1\",\n    type: \"purchase\",\n    amount: \"-15000\",\n    status: \"completed\",\n    description: \"Mua NHẶT NGỌC HÀNG NGÀY (7 ngày)\",\n    createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 day ago\n    updatedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000)\n  },\n  {\n    id: \"payment-3\",\n    userId: \"user-1\", \n    type: \"purchase\",\n    amount: \"-50000\",\n    status: \"completed\",\n    description: \"Mua BOT BÁN ITEM (30 ngày)\",\n    createdAt: new Date(Date.now() - 6 * 60 * 60 * 1000), // 6 hours ago\n    updatedAt: new Date(Date.now() - 6 * 60 * 60 * 1000)\n  },\n  {\n    id: \"payment-4\",\n    userId: \"user-1\",\n    type: \"deposit\", \n    amount: \"1000000\",\n    status: \"pending\",\n    description: \"Nạp tiền qua chuyển khoản\",\n    createdAt: new Date(Date.now() - 1 * 60 * 60 * 1000), // 1 hour ago\n    updatedAt: new Date(Date.now() - 1 * 60 * 60 * 1000)\n  }\n];\n\n// Mock purchases data for history\nexport const mockPurchases = [\n  {\n    id: \"purchase-1\",\n    userId: \"user-1\",\n    toolId: \"1\",\n    finalPrice: \"15000\",\n    duration: \"7 days\",\n    expiresAt: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000), // expires in 5 days\n    createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\n    updatedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\n    tool: mockTools[0] // NHẶT NGỌC HÀNG NGÀY\n  },\n  {\n    id: \"purchase-2\",\n    userId: \"user-1\", \n    toolId: \"3\",\n    finalPrice: \"50000\",\n    duration: \"30 days\",\n    expiresAt: new Date(Date.now() + 24 * 24 * 60 * 60 * 1000), // expires in 24 days\n    createdAt: new Date(Date.now() - 6 * 60 * 60 * 1000),\n    updatedAt: new Date(Date.now() - 6 * 60 * 60 * 1000),\n    tool: mockTools[2] // BOT BÁN ITEM\n  }\n];\n\n// Mock VPS data\nexport const mockVPS = [\n  {\n    id: \"vps-1\",\n    name: \"VN HTTP PRIVATE\",\n    price: \"30000\",\n    duration: \"30 ngày\",\n    specs: {\n      cores: \"1 CORE\",\n      ram: \"1 GB\",\n      feature: \"IP ZALO 0766702003\"\n    },\n    availability: {\n      inStock: 901,\n      purchased: 99\n    },\n    isActive: true\n  },\n  {\n    id: \"vps-2\", \n    name: \"VPS VN + TOOL NRO\",\n    price: \"90000\",\n    duration: \"30 ngày\",\n    specs: {\n      cores: \"1 CORE\", \n      ram: \"1 GB\",\n      feature: \"VPS chuyên game NRO\"\n    },\n    availability: {\n      inStock: 999,\n      purchased: 191\n    },\n    isActive: true\n  },\n  {\n    id: \"vps-3\",\n    name: \"VPS VN PREMIUM\",\n    price: \"150000\",\n    duration: \"30 ngày\",\n    specs: {\n      cores: \"2 CORE\",\n      ram: \"2 GB\",\n      feature: \"VPS cao cấp hiệu năng tốt\"\n    },\n    availability: {\n      inStock: 456,\n      purchased: 344\n    },\n    isActive: true\n  }\n];\n\n// Default credentials\nexport const defaultCredentials = {\n  user: {\n    username: \"demo\",\n    password: \"demo123\"\n  },\n  admin: {\n    username: \"admin\", \n    password: \"admin123\"\n  }\n};","size_bytes":11566},"src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\n// Token storage helper functions\nexport const getTokens = () => {\n  try {\n    const tokens = localStorage.getItem('auth_tokens');\n    return tokens ? JSON.parse(tokens) : null;\n  } catch {\n    return null;\n  }\n};\n\nexport const setTokens = (tokens: { accessToken: string; refreshToken: string } | null) => {\n  if (tokens) {\n    localStorage.setItem('auth_tokens', JSON.stringify(tokens));\n  } else {\n    localStorage.removeItem('auth_tokens');\n  }\n};\n\nexport const getUser = () => {\n  try {\n    const user = localStorage.getItem('auth_user');\n    return user ? JSON.parse(user) : null;\n  } catch {\n    return null;\n  }\n};\n\nexport const setUser = (user: any) => {\n  if (user) {\n    localStorage.setItem('auth_user', JSON.stringify(user));\n  } else {\n    localStorage.removeItem('auth_user');\n  }\n};\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const tokens = getTokens();\n  const headers: Record<string, string> = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  // Add JWT token if available\n  if (tokens?.accessToken) {\n    headers.Authorization = `Bearer ${tokens.accessToken}`;\n  }\n\n  const res = await fetch(url, {\n    method,\n    headers,\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\", // Keep for session-based auth fallback\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const tokens = getTokens();\n    const headers: Record<string, string> = {};\n\n    // Add JWT token if available\n    if (tokens?.accessToken) {\n      headers.Authorization = `Bearer ${tokens.accessToken}`;\n    }\n\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      headers,\n      credentials: \"include\", // Keep for session-based auth fallback\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":2686},"src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"src/pages/AdminPanel.tsx":{"content":"import { useParams } from \"wouter\";\nimport { Layout } from \"@/components/Layout\";\nimport { motion } from \"framer-motion\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  Users, \n  ShoppingBag, \n  TrendingUp, \n  DollarSign,\n  Eye,\n  CheckCircle,\n  XCircle,\n  Clock,\n  Shield,\n  AlertTriangle\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useEffect } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { User, Tool, KeyValidation } from \"@shared/schema\";\n\ninterface AdminStats {\n  totalUsers: number;\n  totalTools: number;\n  monthlyRevenue: string;\n  totalRevenue: string;\n  keyValidation: {\n    totalToday: number;\n    successToday: number;\n    failedToday: number;\n  };\n}\n\ninterface UserWithStats extends User {\n  purchaseCount: number;\n  totalSpent: string;\n}\n\nexport default function AdminPanel() {\n  const { section } = useParams<{ section?: string }>();\n  const { user } = useAuth();\n  const { toast } = useToast();\n\n  // Check if user is admin\n  useEffect(() => {\n    if (user && !user.isAdmin) {\n      toast({\n        title: \"Không có quyền truy cập\",\n        description: \"Bạn cần quyền quản trị viên để truy cập trang này\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/\";\n      }, 2000);\n    }\n  }, [user, toast]);\n\n  const { data: stats, isLoading: statsLoading } = useQuery<AdminStats>({\n    queryKey: [\"/api/admin/stats\"],\n    enabled: !!user?.isAdmin,\n    retry: false,\n  });\n\n  const { data: users, isLoading: usersLoading } = useQuery<UserWithStats[]>({\n    queryKey: [\"/api/admin/users\"],\n    enabled: !!user?.isAdmin && section === 'users',\n    retry: false,\n  });\n\n  const { data: tools, isLoading: toolsLoading } = useQuery<Tool[]>({\n    queryKey: [\"/api/tools\"],\n    enabled: !!user?.isAdmin && section === 'tools',\n  });\n\n  const { data: keyValidations, isLoading: validationsLoading } = useQuery<(KeyValidation & { user?: User; tool?: Tool })[]>({\n    queryKey: [\"/api/admin/key-validations\"],\n    enabled: !!user?.isAdmin && section === 'validations',\n    retry: false,\n  });\n\n  if (!user?.isAdmin) {\n    return (\n      <Layout>\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"text-center\">\n            <Shield className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\n            <h1 className=\"text-2xl font-bold mb-2\">Không có quyền truy cập</h1>\n            <p className=\"text-muted-foreground mb-4\">Bạn cần quyền quản trị viên để truy cập trang này</p>\n            <Link href=\"/\">\n              <Button>Về trang chủ</Button>\n            </Link>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  const activeTab = section || \"overview\";\n\n  const statsCards = [\n    {\n      title: \"Tổng người dùng\",\n      value: stats?.totalUsers || 0,\n      icon: Users,\n      color: \"text-blue-600\",\n      bgColor: \"bg-blue-100 dark:bg-blue-900\"\n    },\n    {\n      title: \"Tổng công cụ\",\n      value: stats?.totalTools || 0,\n      icon: ShoppingBag,\n      color: \"text-emerald-600\",\n      bgColor: \"bg-emerald-100 dark:bg-emerald-900\"\n    },\n    {\n      title: \"Doanh thu tháng\",\n      value: stats ? `${Number(stats.monthlyRevenue).toLocaleString('vi-VN')}₫` : '0₫',\n      icon: TrendingUp,\n      color: \"text-purple-600\",\n      bgColor: \"bg-purple-100 dark:bg-purple-900\"\n    },\n    {\n      title: \"Tổng doanh thu\",\n      value: stats ? `${Number(stats.totalRevenue).toLocaleString('vi-VN')}₫` : '0₫',\n      icon: DollarSign,\n      color: \"text-orange-600\",\n      bgColor: \"bg-orange-100 dark:bg-orange-900\"\n    }\n  ];\n\n  return (\n    <Layout showSidebar>\n      <div className=\"p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold mb-2\">Admin Panel</h1>\n            <p className=\"text-muted-foreground\">Quản lý hệ thống và người dùng</p>\n          </div>\n\n          <Tabs value={activeTab} className=\"space-y-6\">\n            <TabsList className=\"grid w-full grid-cols-4\">\n              <TabsTrigger value=\"overview\" asChild>\n                <Link href=\"/admin\" data-testid=\"tab-overview\">Tổng quan</Link>\n              </TabsTrigger>\n              <TabsTrigger value=\"users\" asChild>\n                <Link href=\"/admin/users\" data-testid=\"tab-users\">Người dùng</Link>\n              </TabsTrigger>\n              <TabsTrigger value=\"tools\" asChild>\n                <Link href=\"/admin/tools\" data-testid=\"tab-tools\">Công cụ</Link>\n              </TabsTrigger>\n              <TabsTrigger value=\"validations\" asChild>\n                <Link href=\"/admin/validations\" data-testid=\"tab-validations\">Key Validation</Link>\n              </TabsTrigger>\n            </TabsList>\n\n            {/* Overview Tab */}\n            <TabsContent value=\"overview\">\n              {/* Stats Cards */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n                {statsCards.map((stat, index) => (\n                  <motion.div\n                    key={stat.title}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.6, delay: index * 0.1 }}\n                  >\n                    <Card className=\"hover:shadow-lg transition-all duration-200 hover:-translate-y-1\">\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-sm text-muted-foreground\">{stat.title}</p>\n                            <p className={`text-2xl font-bold ${stat.color}`} data-testid={`text-stat-${stat.title.toLowerCase().replace(/\\s+/g, '-')}`}>\n                              {stat.value}\n                            </p>\n                          </div>\n                          <div className={`w-12 h-12 ${stat.bgColor} rounded-lg flex items-center justify-center`}>\n                            <stat.icon className={`w-6 h-6 ${stat.color}`} />\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n\n              {/* Key Validation Stats */}\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: 0.4 }}\n              >\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Thống kê API Key Validation hôm nay</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {statsLoading ? (\n                      <div className=\"grid grid-cols-3 gap-4\">\n                        {[...Array(3)].map((_, i) => (\n                          <div key={i} className=\"text-center\">\n                            <Skeleton className=\"h-8 w-16 mx-auto mb-2\" />\n                            <Skeleton className=\"h-4 w-20 mx-auto\" />\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <div className=\"grid grid-cols-3 gap-4 text-center\">\n                        <div>\n                          <div className=\"text-3xl font-bold text-blue-600 mb-1\" data-testid=\"text-total-api-calls\">\n                            {stats?.keyValidation.totalToday || 0}\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">Tổng API calls</div>\n                        </div>\n                        <div>\n                          <div className=\"text-3xl font-bold text-emerald-600 mb-1\" data-testid=\"text-successful-api-calls\">\n                            {stats?.keyValidation.successToday || 0}\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">Thành công</div>\n                        </div>\n                        <div>\n                          <div className=\"text-3xl font-bold text-red-600 mb-1\" data-testid=\"text-failed-api-calls\">\n                            {stats?.keyValidation.failedToday || 0}\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">Thất bại</div>\n                        </div>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </TabsContent>\n\n            {/* Users Tab */}\n            <TabsContent value=\"users\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Quản lý người dùng</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {usersLoading ? (\n                    <div className=\"space-y-4\">\n                      {[...Array(5)].map((_, i) => (\n                        <div key={i} className=\"flex items-center justify-between p-4 border-b\">\n                          <div className=\"flex items-center space-x-4\">\n                            <Skeleton className=\"w-10 h-10 rounded-full\" />\n                            <div className=\"space-y-1\">\n                              <Skeleton className=\"h-4 w-32\" />\n                              <Skeleton className=\"h-3 w-24\" />\n                            </div>\n                          </div>\n                          <div className=\"space-y-1\">\n                            <Skeleton className=\"h-4 w-20\" />\n                            <Skeleton className=\"h-3 w-16\" />\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : users?.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <Users className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                      <h3 className=\"text-lg font-semibold mb-2\">Chưa có người dùng</h3>\n                      <p className=\"text-muted-foreground\">Hệ thống chưa có người dùng nào đăng ký</p>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {users?.map((user, index) => (\n                        <motion.div\n                          key={user.id}\n                          initial={{ opacity: 0, x: -20 }}\n                          animate={{ opacity: 1, x: 0 }}\n                          transition={{ duration: 0.4, delay: index * 0.05 }}\n                          className=\"flex items-center justify-between p-4 border border-border rounded-lg hover:bg-accent/50 transition-colors\"\n                        >\n                          <div className=\"flex items-center space-x-4\">\n                            <div className=\"w-10 h-10 bg-primary rounded-full flex items-center justify-center\">\n                              <span className=\"text-primary-foreground font-semibold text-sm\">\n                                {user.firstName?.[0] || user.email?.[0] || \"U\"}\n                              </span>\n                            </div>\n                            <div>\n                              <p className=\"font-medium\" data-testid={`text-user-name-${user.id}`}>\n                                {user.firstName && user.lastName \n                                  ? `${user.firstName} ${user.lastName}`\n                                  : user.email}\n                              </p>\n                              <div className=\"flex items-center space-x-2\">\n                                <p className=\"text-sm text-muted-foreground\">\n                                  {new Date(user.createdAt).toLocaleDateString('vi-VN')}\n                                </p>\n                                <Badge variant={user.isAdmin ? \"default\" : \"secondary\"}>\n                                  {user.isAdmin ? \"Admin\" : \"User\"}\n                                </Badge>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"font-medium text-emerald-600\" data-testid={`text-user-balance-${user.id}`}>\n                              {Number(user.balance).toLocaleString('vi-VN')}₫\n                            </p>\n                            <p className=\"text-sm text-muted-foreground\">\n                              {user.purchaseCount} công cụ | {Number(user.totalSpent).toLocaleString('vi-VN')}₫\n                            </p>\n                          </div>\n                        </motion.div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Tools Tab */}\n            <TabsContent value=\"tools\">\n              <Card>\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <CardTitle>Quản lý công cụ</CardTitle>\n                    <Button data-testid=\"button-add-tool\">Thêm công cụ mới</Button>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  {toolsLoading ? (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                      {[...Array(6)].map((_, i) => (\n                        <Card key={i}>\n                          <Skeleton className=\"w-full h-48\" />\n                          <CardContent className=\"p-4\">\n                            <Skeleton className=\"h-4 w-3/4 mb-2\" />\n                            <Skeleton className=\"h-3 w-full mb-4\" />\n                            <div className=\"flex justify-between\">\n                              <Skeleton className=\"h-4 w-16\" />\n                              <Skeleton className=\"h-4 w-20\" />\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                  ) : tools?.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <ShoppingBag className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                      <h3 className=\"text-lg font-semibold mb-2\">Chưa có công cụ</h3>\n                      <p className=\"text-muted-foreground\">Hệ thống chưa có công cụ nào</p>\n                    </div>\n                  ) : (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                      {tools?.map((tool, index) => (\n                        <motion.div\n                          key={tool.id}\n                          initial={{ opacity: 0, scale: 0.9 }}\n                          animate={{ opacity: 1, scale: 1 }}\n                          transition={{ duration: 0.4, delay: index * 0.05 }}\n                        >\n                          <Card className=\"overflow-hidden hover:shadow-lg transition-all duration-200 hover:-translate-y-1\">\n                            <img \n                              src={tool.imageUrl || \"https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\"} \n                              alt={tool.name}\n                              className=\"w-full h-48 object-cover\"\n                            />\n                            <CardContent className=\"p-4\">\n                              <h3 className=\"font-bold mb-1\" data-testid={`text-admin-tool-name-${tool.id}`}>{tool.name}</h3>\n                              <p className=\"text-sm text-muted-foreground mb-3 line-clamp-2\">\n                                {tool.description}\n                              </p>\n                              <div className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n                                  <Eye className=\"w-4 h-4\" />\n                                  <span data-testid={`text-admin-tool-views-${tool.id}`}>{tool.views}</span>\n                                </div>\n                                <div className=\"font-bold text-primary\" data-testid={`text-admin-tool-price-${tool.id}`}>\n                                  {Number(tool.price).toLocaleString('vi-VN')}₫\n                                </div>\n                              </div>\n                              <div className=\"flex items-center justify-between mt-3\">\n                                <Badge variant={tool.isActive ? \"default\" : \"secondary\"}>\n                                  {tool.isActive ? \"Hoạt động\" : \"Tạm dừng\"}\n                                </Badge>\n                                <div className=\"flex gap-2\">\n                                  <Button variant=\"outline\" size=\"sm\" data-testid={`button-edit-tool-${tool.id}`}>\n                                    Sửa\n                                  </Button>\n                                  <Button variant=\"outline\" size=\"sm\" data-testid={`button-delete-tool-${tool.id}`}>\n                                    Xóa\n                                  </Button>\n                                </div>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </motion.div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Key Validations Tab */}\n            <TabsContent value=\"validations\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Log Key Validation</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {validationsLoading ? (\n                    <div className=\"space-y-4\">\n                      {[...Array(10)].map((_, i) => (\n                        <div key={i} className=\"flex items-center justify-between p-3 border-b\">\n                          <div className=\"flex items-center space-x-3\">\n                            <Skeleton className=\"w-6 h-6 rounded-full\" />\n                            <div className=\"space-y-1\">\n                              <Skeleton className=\"h-4 w-32\" />\n                              <Skeleton className=\"h-3 w-24\" />\n                            </div>\n                          </div>\n                          <Skeleton className=\"h-4 w-20\" />\n                        </div>\n                      ))}\n                    </div>\n                  ) : keyValidations?.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <AlertTriangle className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                      <h3 className=\"text-lg font-semibold mb-2\">Chưa có log</h3>\n                      <p className=\"text-muted-foreground\">Chưa có API key validation nào được ghi log</p>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-3\">\n                      {keyValidations?.map((validation, index) => (\n                        <motion.div\n                          key={validation.id}\n                          initial={{ opacity: 0, x: -20 }}\n                          animate={{ opacity: 1, x: 0 }}\n                          transition={{ duration: 0.3, delay: index * 0.02 }}\n                          className=\"flex items-center justify-between p-3 border border-border rounded-lg hover:bg-accent/50 transition-colors\"\n                        >\n                          <div className=\"flex items-center space-x-3\">\n                            <div className={`w-6 h-6 rounded-full flex items-center justify-center ${\n                              validation.isValid \n                                ? 'bg-emerald-100 dark:bg-emerald-900' \n                                : 'bg-red-100 dark:bg-red-900'\n                            }`}>\n                              {validation.isValid ? (\n                                <CheckCircle className=\"w-4 h-4 text-emerald-600\" />\n                              ) : (\n                                <XCircle className=\"w-4 h-4 text-red-600\" />\n                              )}\n                            </div>\n                            <div>\n                              <p className=\"text-sm font-medium font-mono\" data-testid={`text-validation-key-${validation.id}`}>\n                                {validation.keyValue || \"N/A\"}\n                              </p>\n                              <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n                                {validation.user && (\n                                  <span>{validation.user.email}</span>\n                                )}\n                                {validation.tool && (\n                                  <span>• {validation.tool.name}</span>\n                                )}\n                                <span>• {validation.ipAddress}</span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"text-right\">\n                            <Badge variant={validation.isValid ? \"default\" : \"destructive\"}>\n                              {validation.isValid ? \"Hợp lệ\" : \"Không hợp lệ\"}\n                            </Badge>\n                            <p className=\"text-xs text-muted-foreground mt-1\">\n                              {new Date(validation.createdAt).toLocaleString('vi-VN')}\n                            </p>\n                          </div>\n                        </motion.div>\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </motion.div>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":22559},"src/pages/Cart.tsx":{"content":"import { useAuth } from \"@/hooks/useAuth\";\nimport { Layout } from \"@/components/Layout\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { ShoppingBag, ArrowLeft } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { motion } from \"framer-motion\";\nimport { useEffect } from \"react\";\n\nexport default function Cart() {\n  const { isAuthenticated } = useAuth();\n\n  // Set page title\n  useEffect(() => {\n    document.title = \"Giỏ hàng | TOOL NRO\";\n  }, []);\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return (\n      <Layout>\n        <div className=\"min-h-screen bg-gray-900 flex items-center justify-center px-4\">\n          <Card className=\"w-full max-w-md\">\n            <CardContent className=\"p-6 text-center\">\n              <h2 className=\"text-xl font-semibold mb-4\">Vui lòng đăng nhập</h2>\n              <p className=\"text-gray-600 mb-4\">Bạn cần đăng nhập để xem giỏ hàng</p>\n              <Link href=\"/login\">\n                <Button className=\"w-full\">Đăng nhập</Button>\n              </Link>\n            </CardContent>\n          </Card>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 py-8\">\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Header */}\n          <div className=\"flex items-center justify-center mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">GIỎ HÀNG</h1>\n          </div>\n\n          {/* Empty Cart State */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"flex flex-col items-center justify-center text-center py-16\"\n          >\n            <Card className=\"w-full max-w-2xl shadow-xl border-0 bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm\">\n              <CardContent className=\"p-12\">\n                <motion.div\n                  initial={{ scale: 0.8 }}\n                  animate={{ scale: 1 }}\n                  transition={{ duration: 0.5, delay: 0.2 }}\n                  className=\"mb-8\"\n                >\n                  {/* Shopping Bag Illustration */}\n                  <div className=\"relative mx-auto w-48 h-48 mb-6\">\n                    {/* Background clouds */}\n                    <div className=\"absolute top-4 left-8 w-16 h-10 opacity-20\">\n                      <div className=\"w-4 h-4 bg-gray-300 rounded-full absolute top-0 left-0\"></div>\n                      <div className=\"w-6 h-6 bg-gray-300 rounded-full absolute top-2 left-3\"></div>\n                      <div className=\"w-5 h-5 bg-gray-300 rounded-full absolute top-0 left-8\"></div>\n                      <div className=\"w-12 h-4 bg-gray-300 rounded-full absolute top-4 left-2\"></div>\n                    </div>\n                    \n                    <div className=\"absolute top-8 right-4 w-20 h-12 opacity-20\">\n                      <div className=\"w-5 h-5 bg-gray-300 rounded-full absolute top-0 left-0\"></div>\n                      <div className=\"w-7 h-7 bg-gray-300 rounded-full absolute top-1 left-4\"></div>\n                      <div className=\"w-6 h-6 bg-gray-300 rounded-full absolute top-0 left-11\"></div>\n                      <div className=\"w-16 h-5 bg-gray-300 rounded-full absolute top-5 left-2\"></div>\n                    </div>\n\n                    {/* Main shopping bag */}\n                    <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n                      <motion.div\n                        animate={{ \n                          rotate: [-2, 2, -2],\n                          y: [0, -5, 0]\n                        }}\n                        transition={{ \n                          duration: 3,\n                          repeat: Infinity,\n                          ease: \"easeInOut\"\n                        }}\n                        className=\"relative\"\n                      >\n                        {/* Bag body */}\n                        <div className=\"w-24 h-28 bg-gradient-to-b from-yellow-400 to-yellow-500 rounded-lg border-4 border-gray-700\">\n                          {/* Sad face */}\n                          <div className=\"flex items-center justify-center h-full\">\n                            <div className=\"text-gray-700\">\n                              <div className=\"flex space-x-2 mb-2\">\n                                <div className=\"w-2 h-2 bg-gray-700 rounded-full\"></div>\n                                <div className=\"w-2 h-2 bg-gray-700 rounded-full\"></div>\n                              </div>\n                              <div className=\"w-6 h-2 border-b-2 border-gray-700 rounded-full transform rotate-180\"></div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        {/* Bag handles */}\n                        <div className=\"absolute -top-4 left-2 w-4 h-6 border-4 border-gray-700 rounded-t-full border-b-0\"></div>\n                        <div className=\"absolute -top-4 right-2 w-4 h-6 border-4 border-gray-700 rounded-t-full border-b-0\"></div>\n                        \n                        {/* Arms */}\n                        <div className=\"absolute top-8 -left-8 w-6 h-1 bg-gray-700 rounded-full transform -rotate-12\"></div>\n                        <div className=\"absolute top-8 -right-8 w-6 h-1 bg-gray-700 rounded-full transform rotate-12\"></div>\n                      </motion.div>\n                    </div>\n                  </div>\n\n                  {/* Decorative text */}\n                  <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ duration: 0.5, delay: 0.4 }}\n                    className=\"text-4xl font-bold text-transparent bg-gradient-to-r from-yellow-400 via-orange-400 to-yellow-500 bg-clip-text mb-4\"\n                    style={{ \n                      textShadow: \"2px 2px 4px rgba(0,0,0,0.1)\",\n                      fontFamily: \"Comic Sans MS, cursive\"\n                    }}\n                  >\n                    Giỏ Hàng Trống\n                  </motion.div>\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ duration: 0.5, delay: 0.6 }}\n                >\n                  <p className=\"text-gray-600 dark:text-gray-300 text-lg mb-8 leading-relaxed\">\n                    Giỏ hàng trống, hãy đi mua sắm đi rồi quay lại nhé! 🛍️\n                  </p>\n\n                  <div className=\"flex justify-center\">\n                    <Link href=\"/\">\n                      <Button variant=\"outline\" size=\"lg\" data-testid=\"button-go-home\">\n                        Về trang chủ\n                      </Button>\n                    </Link>\n                  </div>\n                </motion.div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":7250},"src/pages/Checkout.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Layout } from \"@/components/Layout\";\nimport { motion } from \"framer-motion\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  ShoppingCart, \n  CreditCard, \n  Tag, \n  ArrowLeft,\n  CheckCircle,\n  AlertCircle,\n  Wallet\n} from \"lucide-react\";\nimport type { Tool, DiscountCode } from \"@shared/schema\";\n\nexport default function Checkout() {\n  const [, setLocation] = useLocation();\n  const { user, isAuthenticated } = useAuth();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [selectedToolId, setSelectedToolId] = useState<string>(\"\");\n  const [discountCode, setDiscountCode] = useState(\"\");\n  const [appliedDiscount, setAppliedDiscount] = useState<DiscountCode | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Get tool ID from URL params or localStorage\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const toolId = urlParams.get('tool');\n    if (toolId) {\n      setSelectedToolId(toolId);\n    } else {\n      // If no tool specified, redirect back to tools page\n      setLocation('/tools');\n    }\n  }, [setLocation]);\n\n  // Redirect if not authenticated\n  useEffect(() => {\n    if (!isAuthenticated) {\n      toast({\n        title: \"Cần đăng nhập\",\n        description: \"Vui lòng đăng nhập để tiếp tục mua hàng\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n    }\n  }, [isAuthenticated, toast]);\n\n  const { data: tool, isLoading: toolLoading } = useQuery<Tool>({\n    queryKey: [\"/api/tools\", selectedToolId],\n    enabled: !!selectedToolId,\n  });\n\n  const validateDiscountMutation = useMutation({\n    mutationFn: async (code: string) => {\n      const response = await apiRequest(\"POST\", \"/api/discount-codes/validate\", { code });\n      return await response.json();\n    },\n    onSuccess: (data) => {\n      setAppliedDiscount(data);\n      toast({\n        title: \"Mã giảm giá hợp lệ\",\n        description: `Giảm ${data.discountType === 'percentage' ? data.discountValue + '%' : Number(data.discountValue).toLocaleString('vi-VN') + '₫'}`,\n      });\n    },\n    onError: (error) => {\n      setAppliedDiscount(null);\n      toast({\n        title: \"Mã giảm giá không hợp lệ\",\n        description: error.message || \"Mã giảm giá không tồn tại hoặc đã hết hạn\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const purchaseMutation = useMutation({\n    mutationFn: async ({ toolId, discountCodeId }: { toolId: string; discountCodeId?: string }) => {\n      setIsProcessing(true);\n      return await apiRequest(\"POST\", \"/api/purchases\", { toolId, discountCodeId });\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Mua thành công!\",\n        description: \"Công cụ đã được thêm vào danh sách đã mua\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/purchases\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/auth/user\"] });\n      \n      // Redirect to purchased tools page\n      setTimeout(() => {\n        setLocation('/purchased-tools');\n      }, 1500);\n    },\n    onError: (error) => {\n      setIsProcessing(false);\n      \n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      \n      toast({\n        title: \"Lỗi thanh toán\",\n        description: error.message || \"Không thể hoàn tất giao dịch\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleApplyDiscount = () => {\n    if (discountCode.trim()) {\n      validateDiscountMutation.mutate(discountCode.trim());\n    }\n  };\n\n  const handleRemoveDiscount = () => {\n    setAppliedDiscount(null);\n    setDiscountCode(\"\");\n  };\n\n  const handleCompletePurchase = () => {\n    if (!tool) return;\n    \n    purchaseMutation.mutate({\n      toolId: tool.id,\n      discountCodeId: appliedDiscount?.code,\n    });\n  };\n\n  // Calculate pricing\n  const originalPrice = tool ? Number(tool.price) : 0;\n  let discountAmount = 0;\n  \n  if (appliedDiscount && tool) {\n    if (appliedDiscount.discountType === 'percentage') {\n      discountAmount = Math.floor(originalPrice * Number(appliedDiscount.discountValue) / 100);\n    } else {\n      discountAmount = Number(appliedDiscount.discountValue) * 100; // Convert to cents\n    }\n  }\n  \n  const finalPrice = originalPrice - discountAmount;\n  const hasInsufficientBalance = user ? Number(user.balance) < finalPrice : true;\n\n  if (!isAuthenticated) {\n    return (\n      <Layout>\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"text-center\">\n            <AlertCircle className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\n            <h1 className=\"text-2xl font-bold mb-2\">Cần đăng nhập</h1>\n            <p className=\"text-muted-foreground mb-4\">Vui lòng đăng nhập để tiếp tục</p>\n            <Button onClick={() => window.location.href = \"/api/login\"} data-testid=\"button-login-checkout\">\n              Đăng nhập\n            </Button>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  if (toolLoading) {\n    return (\n      <Layout>\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"animate-pulse space-y-6\">\n              <div className=\"h-8 bg-muted rounded w-32\"></div>\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n                <div className=\"lg:col-span-2\">\n                  <div className=\"h-64 bg-muted rounded-lg\"></div>\n                </div>\n                <div>\n                  <div className=\"h-96 bg-muted rounded-lg\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  if (!tool) {\n    return (\n      <Layout>\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center py-16\">\n            <AlertCircle className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\n            <h1 className=\"text-2xl font-bold mb-2\">Không tìm thấy công cụ</h1>\n            <p className=\"text-muted-foreground mb-6\">Công cụ bạn muốn mua không tồn tại hoặc đã bị xóa.</p>\n            <Link href=\"/tools\">\n              <Button data-testid=\"button-back-to-tools\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Quay lại danh sách\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-background\">\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            className=\"max-w-4xl mx-auto\"\n          >\n            {/* Back Button */}\n            <Link href=\"/tools\">\n              <Button variant=\"ghost\" className=\"mb-8\" data-testid=\"button-back-to-tools\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Quay lại danh sách\n              </Button>\n            </Link>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n              {/* Product Details */}\n              <motion.div\n                className=\"lg:col-span-2\"\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.6, delay: 0.2 }}\n              >\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <ShoppingCart className=\"mr-2 h-5 w-5\" />\n                      Chi tiết đơn hàng\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    {/* Product Info */}\n                    <div className=\"flex items-center space-x-4\">\n                      <img \n                        src={tool.imageUrl || \"https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&auto=format&fit=crop&w=200&h=200\"} \n                        alt={tool.name}\n                        className=\"w-20 h-20 object-cover rounded-lg\"\n                      />\n                      <div className=\"flex-1\">\n                        <h3 className=\"text-xl font-bold\" data-testid=\"text-checkout-tool-name\">{tool.name}</h3>\n                        <p className=\"text-muted-foreground line-clamp-2\" data-testid=\"text-checkout-tool-description\">\n                          {tool.description}\n                        </p>\n                        <div className=\"flex items-center space-x-2 mt-2\">\n                          <Badge variant=\"secondary\">Công cụ phần mềm</Badge>\n                          <Badge variant=\"outline\">30 ngày sử dụng</Badge>\n                        </div>\n                      </div>\n                    </div>\n\n                    <Separator />\n\n                    {/* Discount Code Section */}\n                    <div className=\"space-y-4\">\n                      <h4 className=\"font-semibold\">Mã giảm giá</h4>\n                      \n                      {appliedDiscount ? (\n                        <div className=\"flex items-center justify-between p-4 bg-emerald-50 dark:bg-emerald-950 border border-emerald-200 dark:border-emerald-800 rounded-lg\">\n                          <div className=\"flex items-center space-x-2\">\n                            <CheckCircle className=\"h-5 w-5 text-emerald-600\" />\n                            <div>\n                              <p className=\"font-medium text-emerald-800 dark:text-emerald-200\">\n                                Mã \"{appliedDiscount.code}\" đã được áp dụng\n                              </p>\n                              <p className=\"text-sm text-emerald-600 dark:text-emerald-400\">\n                                Giảm {appliedDiscount.discountType === 'percentage' \n                                  ? `${appliedDiscount.discountValue}%` \n                                  : `${Number(appliedDiscount.discountValue).toLocaleString('vi-VN')}₫`}\n                              </p>\n                            </div>\n                          </div>\n                          <Button \n                            variant=\"ghost\" \n                            size=\"sm\" \n                            onClick={handleRemoveDiscount}\n                            data-testid=\"button-remove-discount\"\n                          >\n                            Xóa\n                          </Button>\n                        </div>\n                      ) : (\n                        <div className=\"flex gap-2\">\n                          <Input\n                            placeholder=\"Nhập mã giảm giá\"\n                            value={discountCode}\n                            onChange={(e) => setDiscountCode(e.target.value)}\n                            data-testid=\"input-discount-code\"\n                          />\n                          <Button\n                            variant=\"outline\"\n                            onClick={handleApplyDiscount}\n                            disabled={!discountCode.trim() || validateDiscountMutation.isPending}\n                            data-testid=\"button-apply-discount\"\n                          >\n                            <Tag className=\"w-4 h-4 mr-1\" />\n                            Áp dụng\n                          </Button>\n                        </div>\n                      )}\n                    </div>\n\n                    <Separator />\n\n                    {/* Account Balance */}\n                    <div className=\"space-y-2\">\n                      <h4 className=\"font-semibold\">Số dư tài khoản</h4>\n                      <div className=\"flex items-center justify-between p-4 bg-muted/50 rounded-lg\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Wallet className=\"h-5 w-5 text-emerald-600\" />\n                          <span>Số dư hiện tại:</span>\n                        </div>\n                        <span className=\"font-bold text-emerald-600\" data-testid=\"text-checkout-balance\">\n                          {Number(user?.balance || 0).toLocaleString('vi-VN')}₫\n                        </span>\n                      </div>\n                      \n                      {hasInsufficientBalance && (\n                        <div className=\"flex items-center space-x-2 p-3 bg-red-50 dark:bg-red-950 border border-red-200 dark:border-red-800 rounded-lg\">\n                          <AlertCircle className=\"h-4 w-4 text-red-600\" />\n                          <p className=\"text-sm text-red-800 dark:text-red-200\">\n                            Số dư không đủ để thực hiện giao dịch này. \n                            <Link href=\"/deposit\" className=\"underline ml-1\">Nạp thêm tiền</Link>\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n\n              {/* Order Summary */}\n              <motion.div\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.6, delay: 0.4 }}\n              >\n                <Card className=\"sticky top-24\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <CreditCard className=\"mr-2 h-5 w-5\" />\n                      Tóm tắt đơn hàng\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {/* Pricing Breakdown */}\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <span>Giá gốc:</span>\n                        <span data-testid=\"text-original-price\">{originalPrice.toLocaleString('vi-VN')}₫</span>\n                      </div>\n                      \n                      {appliedDiscount && discountAmount > 0 && (\n                        <div className=\"flex justify-between text-emerald-600\">\n                          <span>Giảm giá:</span>\n                          <span data-testid=\"text-discount-amount\">-{discountAmount.toLocaleString('vi-VN')}₫</span>\n                        </div>\n                      )}\n                      \n                      <Separator />\n                      \n                      <div className=\"flex justify-between text-lg font-bold\">\n                        <span>Tổng cộng:</span>\n                        <span className=\"text-primary\" data-testid=\"text-final-price\">\n                          {finalPrice.toLocaleString('vi-VN')}₫\n                        </span>\n                      </div>\n                    </div>\n\n                    <Separator />\n\n                    {/* Purchase Button */}\n                    <div className=\"space-y-3\">\n                      <Button \n                        className=\"w-full\" \n                        onClick={handleCompletePurchase}\n                        disabled={hasInsufficientBalance || isProcessing || purchaseMutation.isPending}\n                        data-testid=\"button-complete-purchase\"\n                      >\n                        {isProcessing || purchaseMutation.isPending ? (\n                          \"Đang xử lý...\"\n                        ) : hasInsufficientBalance ? (\n                          \"Số dư không đủ\"\n                        ) : (\n                          `Thanh toán ${finalPrice.toLocaleString('vi-VN')}₫`\n                        )}\n                      </Button>\n\n                      {hasInsufficientBalance && (\n                        <Link href=\"/deposit\">\n                          <Button variant=\"outline\" className=\"w-full\" data-testid=\"button-deposit-more\">\n                            <Wallet className=\"w-4 h-4 mr-2\" />\n                            Nạp thêm tiền\n                          </Button>\n                        </Link>\n                      )}\n                    </div>\n\n                    <Separator />\n\n                    {/* Purchase Terms */}\n                    <div className=\"text-xs text-muted-foreground space-y-1\">\n                      <p>• Công cụ sẽ có hiệu lực trong 30 ngày kể từ khi mua</p>\n                      <p>• Bạn có thể đổi license key bất cứ lúc nào</p>\n                      <p>• Hỗ trợ kỹ thuật 24/7 qua Telegram, Zalo, Email</p>\n                      <p>• Không hoàn tiền sau khi mua thành công</p>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </div>\n\n            {/* Success Modal Effect */}\n            {isProcessing && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center\"\n              >\n                <motion.div\n                  initial={{ scale: 0.8, opacity: 0 }}\n                  animate={{ scale: 1, opacity: 1 }}\n                  className=\"bg-card border border-border rounded-xl p-8 text-center max-w-md mx-4\"\n                >\n                  <motion.div\n                    animate={{ rotate: 360 }}\n                    transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                    className=\"w-16 h-16 border-4 border-primary border-t-transparent rounded-full mx-auto mb-4\"\n                  ></motion.div>\n                  <h3 className=\"text-xl font-bold mb-2\">Đang xử lý thanh toán</h3>\n                  <p className=\"text-muted-foreground\">Vui lòng đợi trong giây lát...</p>\n                </motion.div>\n              </motion.div>\n            )}\n          </motion.div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":19004},"src/pages/Dashboard.tsx":{"content":"import { Layout } from \"@/components/Layout\";\nimport { motion } from \"framer-motion\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  CreditCard, \n  ShoppingBag, \n  Calendar, \n  TrendingUp,\n  ArrowRight,\n  Clock\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport type { Purchase, Tool, Payment } from \"@shared/schema\";\n\nexport default function Dashboard() {\n  const { user } = useAuth();\n\n  const { data: purchases, isLoading: purchasesLoading } = useQuery<(Purchase & { tool: Tool })[]>({\n    queryKey: [\"/api/purchases\"],\n  });\n\n  const { data: payments, isLoading: paymentsLoading } = useQuery<Payment[]>({\n    queryKey: [\"/api/payments\"],\n  });\n\n  const totalSpent = payments?.reduce((sum, payment) => {\n    return payment.type === \"purchase\" ? sum + Math.abs(Number(payment.amount)) : sum;\n  }, 0) || 0;\n\n  const recentPurchases = purchases?.slice(0, 3) || [];\n\n  const statsCards = [\n    {\n      title: \"Số dư\",\n      value: `${Number(user?.balance || 0).toLocaleString('vi-VN')}₫`,\n      icon: CreditCard,\n      color: \"text-emerald-600\",\n      bgColor: \"bg-emerald-100 dark:bg-emerald-900\"\n    },\n    {\n      title: \"Công cụ đã mua\",\n      value: purchases?.length || 0,\n      icon: ShoppingBag,\n      color: \"text-blue-600\",\n      bgColor: \"bg-blue-100 dark:bg-blue-900\"\n    },\n    {\n      title: \"Ngày tham gia\",\n      value: user?.createdAt ? new Date(user.createdAt).toLocaleDateString('vi-VN') : 'N/A',\n      icon: Calendar,\n      color: \"text-purple-600\",\n      bgColor: \"bg-purple-100 dark:bg-purple-900\"\n    },\n    {\n      title: \"Đã chi tiêu\",\n      value: `${totalSpent.toLocaleString('vi-VN')}₫`,\n      icon: TrendingUp,\n      color: \"text-orange-600\",\n      bgColor: \"bg-orange-100 dark:bg-orange-900\"\n    }\n  ];\n\n  return (\n    <Layout showSidebar>\n      <div className=\"p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold mb-2\">Dashboard</h1>\n            <p className=\"text-muted-foreground\">Quản lý tài khoản và công cụ của bạn</p>\n          </div>\n\n          {/* Stats Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {statsCards.map((stat, index) => (\n              <motion.div\n                key={stat.title}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n              >\n                <Card className=\"hover:shadow-lg transition-all duration-200 hover:-translate-y-1\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-sm text-muted-foreground\">{stat.title}</p>\n                        <p className={`text-2xl font-bold ${stat.color}`} data-testid={`text-stat-${stat.title.toLowerCase().replace(/\\s+/g, '-')}`}>\n                          {stat.value}\n                        </p>\n                      </div>\n                      <div className={`w-12 h-12 ${stat.bgColor} rounded-lg flex items-center justify-center`}>\n                        <stat.icon className={`w-6 h-6 ${stat.color}`} />\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Recent Purchases */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n          >\n            <Card>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-xl font-semibold\">Công cụ gần đây</CardTitle>\n                  <Link href=\"/purchased-tools\">\n                    <Button variant=\"outline\" size=\"sm\" data-testid=\"link-view-all-purchases\">\n                      Xem tất cả\n                      <ArrowRight className=\"ml-2 h-4 w-4\" />\n                    </Button>\n                  </Link>\n                </div>\n              </CardHeader>\n              <CardContent>\n                {purchasesLoading ? (\n                  <div className=\"space-y-4\">\n                    {[...Array(3)].map((_, i) => (\n                      <div key={i} className=\"flex items-center justify-between p-4 border border-border rounded-lg\">\n                        <div className=\"flex items-center space-x-4\">\n                          <Skeleton className=\"w-12 h-12 rounded-lg\" />\n                          <div className=\"space-y-1\">\n                            <Skeleton className=\"h-4 w-32\" />\n                            <Skeleton className=\"h-3 w-24\" />\n                          </div>\n                        </div>\n                        <div className=\"text-right space-y-1\">\n                          <Skeleton className=\"h-4 w-20\" />\n                          <Skeleton className=\"h-3 w-16\" />\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ) : recentPurchases.length > 0 ? (\n                  <div className=\"space-y-4\">\n                    {recentPurchases.map((purchase) => {\n                      const daysLeft = Math.ceil((new Date(purchase.expiresAt).getTime() - Date.now()) / (1000 * 60 * 60 * 24));\n                      const isExpiringSoon = daysLeft <= 7;\n                      const isExpired = daysLeft < 0;\n                      \n                      return (\n                        <div key={purchase.id} className=\"flex items-center justify-between p-4 border border-border rounded-lg\">\n                          <div className=\"flex items-center space-x-4\">\n                            <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center\">\n                              <ShoppingBag className=\"w-6 h-6 text-white\" />\n                            </div>\n                            <div>\n                              <p className=\"font-semibold\" data-testid={`text-purchase-tool-name-${purchase.id}`}>\n                                {purchase.tool.name}\n                              </p>\n                              <p className=\"text-sm text-muted-foreground\" data-testid={`text-purchase-date-${purchase.id}`}>\n                                Mua ngày {new Date(purchase.createdAt).toLocaleDateString('vi-VN')}\n                              </p>\n                            </div>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"font-semibold\" data-testid={`text-purchase-price-${purchase.id}`}>\n                              {Number(purchase.finalPrice).toLocaleString('vi-VN')}₫\n                            </p>\n                            <Badge \n                              variant={isExpired ? \"destructive\" : isExpiringSoon ? \"secondary\" : \"default\"}\n                              className={isExpired ? \"\" : isExpiringSoon ? \"bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200\" : \"bg-emerald-100 text-emerald-800 dark:bg-emerald-900 dark:text-emerald-200\"}\n                            >\n                              <Clock className=\"w-3 h-3 mr-1\" />\n                              {isExpired ? \"Đã hết hạn\" : `Còn ${daysLeft} ngày`}\n                            </Badge>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                ) : (\n                  <div className=\"text-center py-8\">\n                    <ShoppingBag className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                    <h3 className=\"text-lg font-semibold mb-2\">Chưa có công cụ nào</h3>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Bắt đầu khám phá và mua các công cụ chất lượng\n                    </p>\n                    <Link href=\"/tools\">\n                      <Button data-testid=\"button-browse-tools-from-dashboard\">\n                        Duyệt công cụ\n                        <ArrowRight className=\"ml-2 h-4 w-4\" />\n                      </Button>\n                    </Link>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </motion.div>\n        </motion.div>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":8949},"src/pages/Deposit.tsx":{"content":"import { Layout } from \"@/components/Layout\";\nimport { motion } from \"framer-motion\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  CreditCard, \n  Wallet, \n  QrCode,\n  CheckCircle,\n  Clock,\n  DollarSign\n} from \"lucide-react\";\nimport { useState } from \"react\";\nimport type { Payment } from \"@shared/schema\";\n\nexport default function Deposit() {\n  const { user, isAuthenticated } = useAuth();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [amount, setAmount] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n\n  const { data: payments, isLoading: paymentsLoading } = useQuery<Payment[]>({\n    queryKey: [\"/api/payments\"],\n    retry: false,\n  });\n\n  const depositMutation = useMutation({\n    mutationFn: async ({ amount, description }: { amount: string; description: string }) => {\n      const response = await apiRequest(\"POST\", \"/api/deposit\", { \n        amount: Number(amount) * 100, // Convert to cents\n        description \n      });\n      return await response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Nạp tiền thành công\",\n        description: \"Số dư của bạn đã được cập nhật\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/auth/user\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/payments\"] });\n      setAmount(\"\");\n      setDescription(\"\");\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      \n      toast({\n        title: \"Lỗi\",\n        description: error.message || \"Không thể nạp tiền\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleDeposit = () => {\n    if (!amount || Number(amount) <= 0) {\n      toast({\n        title: \"Lỗi\",\n        description: \"Vui lòng nhập số tiền hợp lệ\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    depositMutation.mutate({\n      amount,\n      description: description || \"Nạp tiền vào tài khoản\",\n    });\n  };\n\n  const quickAmounts = [50000, 100000, 200000, 500000, 1000000, 2000000];\n\n  const recentDeposits = payments?.filter(p => p.type === \"deposit\").slice(0, 5) || [];\n\n  return (\n    <Layout showSidebar={isAuthenticated}>\n      <div className=\"p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold mb-2\">Nạp tiền</h1>\n            <p className=\"text-muted-foreground\">Nạp tiền vào tài khoản để mua các công cụ</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Deposit Form */}\n            <motion.div\n              className=\"lg:col-span-2\"\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n            >\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <CreditCard className=\"mr-2 h-5 w-5\" />\n                    Nạp tiền vào tài khoản\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-6\">\n                  {/* Current Balance */}\n                  <div className=\"bg-muted/50 p-4 rounded-lg\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Wallet className=\"h-5 w-5 text-emerald-600\" />\n                        <span className=\"font-medium\">Số dư hiện tại:</span>\n                      </div>\n                      <span className=\"text-2xl font-bold text-emerald-600\" data-testid=\"text-current-balance\">\n                        {Number(user?.balance || 0).toLocaleString('vi-VN')}₫\n                      </span>\n                    </div>\n                  </div>\n\n                  {/* Quick Amount Selection */}\n                  <div className=\"space-y-3\">\n                    <Label>Chọn nhanh số tiền</Label>\n                    <div className=\"grid grid-cols-3 gap-2\">\n                      {quickAmounts.map((quickAmount) => (\n                        <Button\n                          key={quickAmount}\n                          variant={amount === quickAmount.toString() ? \"default\" : \"outline\"}\n                          size=\"sm\"\n                          onClick={() => setAmount(quickAmount.toString())}\n                          data-testid={`button-quick-amount-${quickAmount}`}\n                        >\n                          {quickAmount.toLocaleString('vi-VN')}₫\n                        </Button>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Custom Amount */}\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"amount\">Hoặc nhập số tiền tùy chỉnh (₫)</Label>\n                    <Input\n                      id=\"amount\"\n                      type=\"number\"\n                      placeholder=\"Nhập số tiền muốn nạp\"\n                      value={amount}\n                      onChange={(e) => setAmount(e.target.value)}\n                      min=\"10000\"\n                      step=\"10000\"\n                      data-testid=\"input-custom-amount\"\n                    />\n                    <p className=\"text-sm text-muted-foreground\">\n                      Số tiền tối thiểu: 10,000₫\n                    </p>\n                  </div>\n\n                  {/* Description */}\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"description\">Ghi chú (tùy chọn)</Label>\n                    <Textarea\n                      id=\"description\"\n                      placeholder=\"Nhập ghi chú cho giao dịch này\"\n                      value={description}\n                      onChange={(e) => setDescription(e.target.value)}\n                      rows={3}\n                      data-testid=\"input-description\"\n                    />\n                  </div>\n\n                  <Button \n                    className=\"w-full\" \n                    onClick={handleDeposit}\n                    disabled={!amount || Number(amount) <= 0 || depositMutation.isPending}\n                    data-testid=\"button-deposit\"\n                  >\n                    {depositMutation.isPending ? \"Đang xử lý...\" : `Nạp ${amount ? Number(amount).toLocaleString('vi-VN') + '₫' : 'tiền'}`}\n                  </Button>\n                </CardContent>\n              </Card>\n\n              {/* Payment Instructions */}\n              <Card className=\"mt-6\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <QrCode className=\"mr-2 h-5 w-5\" />\n                    Hướng dẫn nạp tiền\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"bg-blue-50 dark:bg-blue-950 p-4 rounded-lg\">\n                      <h4 className=\"font-semibold text-blue-800 dark:text-blue-200 mb-2\">Chuyển khoản ngân hàng</h4>\n                      <div className=\"text-sm space-y-1\">\n                        <p><strong>Ngân hàng:</strong> Vietcombank</p>\n                        <p><strong>Số tài khoản:</strong> 1234567890</p>\n                        <p><strong>Chủ tài khoản:</strong> CONG TY TOOLMARKET</p>\n                        <p><strong>Nội dung:</strong> NAPIEN [email của bạn]</p>\n                      </div>\n                    </div>\n\n                    <div className=\"bg-emerald-50 dark:bg-emerald-950 p-4 rounded-lg\">\n                      <h4 className=\"font-semibold text-emerald-800 dark:text-emerald-200 mb-2\">Ví điện tử MoMo</h4>\n                      <div className=\"text-sm space-y-1\">\n                        <p><strong>Số điện thoại:</strong> 0901234567</p>\n                        <p><strong>Chủ tài khoản:</strong> TOOLMARKET</p>\n                        <p><strong>Nội dung:</strong> NAPIEN [email của bạn]</p>\n                      </div>\n                    </div>\n\n                    <div className=\"text-sm text-muted-foreground p-4 bg-muted/50 rounded-lg\">\n                      <p className=\"font-medium mb-2\">Lưu ý quan trọng:</p>\n                      <ul className=\"space-y-1 list-disc list-inside\">\n                        <li>Vui lòng ghi đúng nội dung chuyển khoản để hệ thống tự động cộng tiền</li>\n                        <li>Số dư sẽ được cập nhật trong vòng 5-10 phút sau khi chuyển khoản thành công</li>\n                        <li>Nếu có vấn đề, vui lòng liên hệ bộ phận hỗ trợ</li>\n                      </ul>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            {/* Sidebar */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6, delay: 0.4 }}\n            >\n              {/* Account Summary */}\n              <Card className=\"mb-6\">\n                <CardHeader>\n                  <CardTitle>Thông tin tài khoản</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-muted-foreground\">Số dư hiện tại</span>\n                    <span className=\"font-bold text-emerald-600\" data-testid=\"text-sidebar-balance\">\n                      {Number(user?.balance || 0).toLocaleString('vi-VN')}₫\n                    </span>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-muted-foreground\">Loại tài khoản</span>\n                    <Badge variant={user?.isAdmin ? \"default\" : \"secondary\"}>\n                      {user?.isAdmin ? \"Quản trị viên\" : \"Thành viên\"}\n                    </Badge>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-muted-foreground\">Ngày tham gia</span>\n                    <span className=\"text-sm font-medium\">\n                      {user?.createdAt ? new Date(user.createdAt).toLocaleDateString('vi-VN') : 'N/A'}\n                    </span>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Recent Deposits */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Lịch sử nạp tiền gần đây</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {paymentsLoading ? (\n                    <div className=\"space-y-3\">\n                      {[...Array(3)].map((_, i) => (\n                        <div key={i} className=\"flex items-center justify-between p-2\">\n                          <div className=\"space-y-1\">\n                            <div className=\"h-4 bg-muted rounded w-24\"></div>\n                            <div className=\"h-3 bg-muted rounded w-16\"></div>\n                          </div>\n                          <div className=\"h-4 bg-muted rounded w-20\"></div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : recentDeposits.length > 0 ? (\n                    <div className=\"space-y-3\">\n                      {recentDeposits.map((payment) => (\n                        <div key={payment.id} className=\"flex items-center justify-between py-2\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"w-6 h-6 bg-emerald-100 dark:bg-emerald-900 rounded-full flex items-center justify-center\">\n                              <DollarSign className=\"w-3 h-3 text-emerald-600\" />\n                            </div>\n                            <div>\n                              <p className=\"text-sm font-medium\">\n                                +{Number(payment.amount).toLocaleString('vi-VN')}₫\n                              </p>\n                              <p className=\"text-xs text-muted-foreground\">\n                                {new Date(payment.createdAt).toLocaleDateString('vi-VN')}\n                              </p>\n                            </div>\n                          </div>\n                          <Badge \n                            variant={payment.status === 'completed' ? 'default' : payment.status === 'pending' ? 'secondary' : 'destructive'}\n                            className=\"text-xs\"\n                          >\n                            {payment.status === 'completed' ? (\n                              <>\n                                <CheckCircle className=\"w-3 h-3 mr-1\" />\n                                Thành công\n                              </>\n                            ) : payment.status === 'pending' ? (\n                              <>\n                                <Clock className=\"w-3 h-3 mr-1\" />\n                                Đang xử lý\n                              </>\n                            ) : (\n                              'Thất bại'\n                            )}\n                          </Badge>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-4\">\n                      <p className=\"text-sm text-muted-foreground\">Chưa có giao dịch nạp tiền nào</p>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </motion.div>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":14900},"src/pages/History.tsx":{"content":"import { Layout } from \"@/components/Layout\";\nimport { motion } from \"framer-motion\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { \n  CreditCard, \n  ShoppingBag, \n  TrendingUp, \n  Calendar,\n  CheckCircle,\n  Clock,\n  XCircle,\n  DollarSign\n} from \"lucide-react\";\nimport type { Payment, Purchase, Tool } from \"@shared/schema\";\n\nexport default function History() {\n  const { isAuthenticated } = useAuth();\n  const { data: payments, isLoading: paymentsLoading } = useQuery<Payment[]>({\n    queryKey: [\"/api/payments\"],\n    retry: false,\n  });\n\n  const { data: purchases, isLoading: purchasesLoading } = useQuery<(Purchase & { tool: Tool })[]>({\n    queryKey: [\"/api/purchases\"],\n    retry: false,\n  });\n\n  const depositHistory = payments?.filter(p => p.type === \"deposit\") || [];\n  const purchaseHistoryFromPayments = payments?.filter(p => p.type === \"purchase\") || [];\n\n  const totalDeposited = depositHistory.reduce((sum, payment) => sum + Number(payment.amount), 0);\n  const totalSpent = purchaseHistoryFromPayments.reduce((sum, payment) => sum + Math.abs(Number(payment.amount)), 0);\n  const totalTransactions = (payments?.length || 0) + (purchases?.length || 0);\n\n  const stats = [\n    {\n      title: \"Tổng số giao dịch\",\n      value: totalTransactions,\n      icon: Calendar,\n      color: \"text-blue-600\",\n      bgColor: \"bg-blue-100 dark:bg-blue-900\"\n    },\n    {\n      title: \"Tổng tiền đã nạp\",\n      value: `${totalDeposited.toLocaleString('vi-VN')}₫`,\n      icon: CreditCard,\n      color: \"text-emerald-600\",\n      bgColor: \"bg-emerald-100 dark:bg-emerald-900\"\n    },\n    {\n      title: \"Tổng tiền đã chi\",\n      value: `${totalSpent.toLocaleString('vi-VN')}₫`,\n      icon: TrendingUp,\n      color: \"text-orange-600\",\n      bgColor: \"bg-orange-100 dark:bg-orange-900\"\n    },\n    {\n      title: \"Công cụ đã mua\",\n      value: purchases?.length || 0,\n      icon: ShoppingBag,\n      color: \"text-purple-600\",\n      bgColor: \"bg-purple-100 dark:bg-purple-900\"\n    }\n  ];\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return <CheckCircle className=\"w-4 h-4 text-emerald-600\" />;\n      case 'pending':\n        return <Clock className=\"w-4 h-4 text-orange-600\" />;\n      case 'failed':\n        return <XCircle className=\"w-4 h-4 text-red-600\" />;\n      default:\n        return <Clock className=\"w-4 h-4 text-gray-600\" />;\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'Thành công';\n      case 'pending':\n        return 'Đang xử lý';\n      case 'failed':\n        return 'Thất bại';\n      default:\n        return 'Không xác định';\n    }\n  };\n\n  const getStatusVariant = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return 'default';\n      case 'pending':\n        return 'secondary';\n      case 'failed':\n        return 'destructive';\n      default:\n        return 'outline';\n    }\n  };\n\n  return (\n    <Layout showSidebar={isAuthenticated}>\n      <div className=\"p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold mb-2\">Lịch sử giao dịch</h1>\n            <p className=\"text-muted-foreground\">Xem lại tất cả các giao dịch của bạn</p>\n          </div>\n\n          {/* Stats Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            {stats.map((stat, index) => (\n              <motion.div\n                key={stat.title}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n              >\n                <Card className=\"hover:shadow-lg transition-all duration-200 hover:-translate-y-1\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-sm text-muted-foreground\">{stat.title}</p>\n                        <p className={`text-2xl font-bold ${stat.color}`} data-testid={`text-stat-${stat.title.toLowerCase().replace(/\\s+/g, '-')}`}>\n                          {stat.value}\n                        </p>\n                      </div>\n                      <div className={`w-12 h-12 ${stat.bgColor} rounded-lg flex items-center justify-center`}>\n                        <stat.icon className={`w-6 h-6 ${stat.color}`} />\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* History Tabs */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n          >\n            <Tabs defaultValue=\"all\" className=\"space-y-6\">\n              <TabsList className=\"grid w-full grid-cols-3\">\n                <TabsTrigger value=\"all\" data-testid=\"tab-all-history\">Tất cả</TabsTrigger>\n                <TabsTrigger value=\"deposits\" data-testid=\"tab-deposits\">Nạp tiền</TabsTrigger>\n                <TabsTrigger value=\"purchases\" data-testid=\"tab-purchases\">Mua hàng</TabsTrigger>\n              </TabsList>\n\n              {/* All Transactions */}\n              <TabsContent value=\"all\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Tất cả giao dịch</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {paymentsLoading ? (\n                      <div className=\"space-y-4\">\n                        {[...Array(5)].map((_, i) => (\n                          <div key={i} className=\"flex items-center justify-between p-4 border-b\">\n                            <div className=\"flex items-center space-x-4\">\n                              <Skeleton className=\"w-10 h-10 rounded-full\" />\n                              <div className=\"space-y-1\">\n                                <Skeleton className=\"h-4 w-32\" />\n                                <Skeleton className=\"h-3 w-24\" />\n                              </div>\n                            </div>\n                            <div className=\"text-right space-y-1\">\n                              <Skeleton className=\"h-4 w-20\" />\n                              <Skeleton className=\"h-3 w-16\" />\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : payments?.length === 0 ? (\n                      <div className=\"text-center py-8\">\n                        <Calendar className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                        <h3 className=\"text-lg font-semibold mb-2\">Chưa có giao dịch</h3>\n                        <p className=\"text-muted-foreground\">Bạn chưa thực hiện giao dịch nào</p>\n                      </div>\n                    ) : (\n                      <div className=\"space-y-4\">\n                        {payments?.slice().reverse().map((payment, index) => (\n                          <motion.div\n                            key={payment.id}\n                            initial={{ opacity: 0, x: -20 }}\n                            animate={{ opacity: 1, x: 0 }}\n                            transition={{ duration: 0.4, delay: index * 0.05 }}\n                            className=\"flex items-center justify-between p-4 border border-border rounded-lg hover:bg-accent/50 transition-colors\"\n                          >\n                            <div className=\"flex items-center space-x-4\">\n                              <div className={`w-10 h-10 rounded-full flex items-center justify-center ${\n                                payment.type === 'deposit' \n                                  ? 'bg-emerald-100 dark:bg-emerald-900' \n                                  : 'bg-blue-100 dark:bg-blue-900'\n                              }`}>\n                                {payment.type === 'deposit' ? (\n                                  <CreditCard className=\"w-5 h-5 text-emerald-600\" />\n                                ) : (\n                                  <ShoppingBag className=\"w-5 h-5 text-blue-600\" />\n                                )}\n                              </div>\n                              <div>\n                                <p className=\"font-medium\" data-testid={`text-transaction-description-${payment.id}`}>\n                                  {payment.description || (payment.type === 'deposit' ? 'Nạp tiền' : 'Mua công cụ')}\n                                </p>\n                                <p className=\"text-sm text-muted-foreground\" data-testid={`text-transaction-date-${payment.id}`}>\n                                  {payment.createdAt ? new Date(payment.createdAt).toLocaleString('vi-VN') : 'N/A'}\n                                </p>\n                              </div>\n                            </div>\n                            <div className=\"text-right\">\n                              <p className={`font-bold text-lg ${\n                                payment.type === 'deposit' ? 'text-emerald-600' : 'text-orange-600'\n                              }`} data-testid={`text-transaction-amount-${payment.id}`}>\n                                {payment.type === 'deposit' ? '+' : ''}\n                                {Number(payment.amount).toLocaleString('vi-VN')}₫\n                              </p>\n                              <Badge variant={getStatusVariant(payment.status)} className=\"mt-1\">\n                                {getStatusIcon(payment.status)}\n                                <span className=\"ml-1\">{getStatusText(payment.status)}</span>\n                              </Badge>\n                            </div>\n                          </motion.div>\n                        ))}\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              {/* Deposit History */}\n              <TabsContent value=\"deposits\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <CreditCard className=\"mr-2 h-5 w-5 text-emerald-600\" />\n                      Lịch sử nạp tiền\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {paymentsLoading ? (\n                      <div className=\"space-y-4\">\n                        {[...Array(3)].map((_, i) => (\n                          <div key={i} className=\"flex items-center justify-between p-4 border-b\">\n                            <div className=\"flex items-center space-x-4\">\n                              <Skeleton className=\"w-10 h-10 rounded-full\" />\n                              <div className=\"space-y-1\">\n                                <Skeleton className=\"h-4 w-32\" />\n                                <Skeleton className=\"h-3 w-24\" />\n                              </div>\n                            </div>\n                            <Skeleton className=\"h-4 w-20\" />\n                          </div>\n                        ))}\n                      </div>\n                    ) : depositHistory.length === 0 ? (\n                      <div className=\"text-center py-8\">\n                        <CreditCard className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                        <h3 className=\"text-lg font-semibold mb-2\">Chưa có giao dịch nạp tiền</h3>\n                        <p className=\"text-muted-foreground\">Bạn chưa nạp tiền vào tài khoản</p>\n                      </div>\n                    ) : (\n                      <div className=\"space-y-4\">\n                        {depositHistory.slice().reverse().map((payment, index) => (\n                          <motion.div\n                            key={payment.id}\n                            initial={{ opacity: 0, x: -20 }}\n                            animate={{ opacity: 1, x: 0 }}\n                            transition={{ duration: 0.4, delay: index * 0.05 }}\n                            className=\"flex items-center justify-between p-4 border border-border rounded-lg hover:bg-accent/50 transition-colors\"\n                          >\n                            <div className=\"flex items-center space-x-4\">\n                              <div className=\"w-10 h-10 bg-emerald-100 dark:bg-emerald-900 rounded-full flex items-center justify-center\">\n                                <DollarSign className=\"w-5 h-5 text-emerald-600\" />\n                              </div>\n                              <div>\n                                <p className=\"font-medium\" data-testid={`text-deposit-description-${payment.id}`}>\n                                  {payment.description || 'Nạp tiền vào tài khoản'}\n                                </p>\n                                <p className=\"text-sm text-muted-foreground\">\n                                  {payment.createdAt ? new Date(payment.createdAt).toLocaleString('vi-VN') : 'N/A'}\n                                </p>\n                              </div>\n                            </div>\n                            <div className=\"text-right\">\n                              <p className=\"font-bold text-lg text-emerald-600\" data-testid={`text-deposit-amount-${payment.id}`}>\n                                +{Number(payment.amount).toLocaleString('vi-VN')}₫\n                              </p>\n                              <Badge variant={getStatusVariant(payment.status)} className=\"mt-1\">\n                                {getStatusIcon(payment.status)}\n                                <span className=\"ml-1\">{getStatusText(payment.status)}</span>\n                              </Badge>\n                            </div>\n                          </motion.div>\n                        ))}\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              {/* Purchase History */}\n              <TabsContent value=\"purchases\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center\">\n                      <ShoppingBag className=\"mr-2 h-5 w-5 text-blue-600\" />\n                      Lịch sử mua hàng\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    {purchasesLoading ? (\n                      <div className=\"space-y-4\">\n                        {[...Array(3)].map((_, i) => (\n                          <div key={i} className=\"flex items-center justify-between p-4 border-b\">\n                            <div className=\"flex items-center space-x-4\">\n                              <Skeleton className=\"w-10 h-10 rounded-lg\" />\n                              <div className=\"space-y-1\">\n                                <Skeleton className=\"h-4 w-32\" />\n                                <Skeleton className=\"h-3 w-24\" />\n                              </div>\n                            </div>\n                            <Skeleton className=\"h-4 w-20\" />\n                          </div>\n                        ))}\n                      </div>\n                    ) : purchases?.length === 0 ? (\n                      <div className=\"text-center py-8\">\n                        <ShoppingBag className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                        <h3 className=\"text-lg font-semibold mb-2\">Chưa mua công cụ nào</h3>\n                        <p className=\"text-muted-foreground\">Bạn chưa mua công cụ nào từ thị trường</p>\n                      </div>\n                    ) : (\n                      <div className=\"space-y-4\">\n                        {purchases?.slice().reverse().map((purchase, index) => {\n                          const isExpired = new Date(purchase.expiresAt) < new Date();\n                          \n                          return (\n                            <motion.div\n                              key={purchase.id}\n                              initial={{ opacity: 0, x: -20 }}\n                              animate={{ opacity: 1, x: 0 }}\n                              transition={{ duration: 0.4, delay: index * 0.05 }}\n                              className=\"flex items-center justify-between p-4 border border-border rounded-lg hover:bg-accent/50 transition-colors\"\n                            >\n                              <div className=\"flex items-center space-x-4\">\n                                <div className=\"w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center\">\n                                  <ShoppingBag className=\"w-5 h-5 text-white\" />\n                                </div>\n                                <div>\n                                  <p className=\"font-medium\" data-testid={`text-purchase-tool-name-${purchase.id}`}>\n                                    {purchase.tool.name}\n                                  </p>\n                                  <p className=\"text-sm text-muted-foreground\">\n                                    Mua ngày {purchase.createdAt ? new Date(purchase.createdAt).toLocaleString('vi-VN') : 'N/A'}\n                                  </p>\n                                </div>\n                              </div>\n                              <div className=\"text-right\">\n                                <p className=\"font-bold text-lg\" data-testid={`text-purchase-final-price-${purchase.id}`}>\n                                  {Number(purchase.finalPrice).toLocaleString('vi-VN')}₫\n                                </p>\n                                <Badge variant={isExpired ? \"destructive\" : \"default\"} className=\"mt-1\">\n                                  {isExpired ? \"Đã hết hạn\" : \"Đang hoạt động\"}\n                                </Badge>\n                              </div>\n                            </motion.div>\n                          );\n                        })}\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            </Tabs>\n          </motion.div>\n        </motion.div>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":18891},"src/pages/Home.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Layout } from \"@/components/Layout\";\nimport { ToolCard } from \"@/components/ToolCard\";\nimport { motion } from \"framer-motion\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { mockTools, mockCategories, mockVPS } from \"@/lib/mockData\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { \n  Search, \n  Filter, \n  ShoppingCart,\n  AlertCircle,\n  Server,\n  Cpu,\n  HardDrive,\n  Eye,\n  ChevronUp,\n  X,\n  ChevronDown\n} from \"lucide-react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/components/ui/dialog\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport type { Tool, Category } from \"@shared/schema\";\n\nexport default function Home() {\n  const { isAuthenticated } = useAuth();\n  const { toast } = useToast();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n  const [purchaseDialogOpen, setPurchaseDialogOpen] = useState(false);\n  const [selectedTool, setSelectedTool] = useState<typeof mockTools[0] | null>(null);\n  const [showBackToTop, setShowBackToTop] = useState(false);\n  const [scrollProgress, setScrollProgress] = useState(0);\n  const [selectedMonths, setSelectedMonths] = useState<string>(\"1\");\n\n  // Use mock data instead of API calls\n  const tools = mockTools;\n  const categories = mockCategories;\n  const toolsLoading = false;\n  const categoriesLoading = false;\n\n  // Handle scroll to show/hide back to top button and calculate progress\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollY = window.scrollY;\n      const documentHeight = document.documentElement.scrollHeight - window.innerHeight;\n      const progress = Math.min((scrollY / documentHeight) * 100, 100);\n      \n      setShowBackToTop(scrollY > 400);\n      setScrollProgress(progress);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Scroll to top function\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  // Mock purchase function - no actual payment processing\n  const handlePurchaseSuccess = () => {\n    toast({\n      title: \"Demo: Mua thành công\",\n      description: \"Đây là demo - không có giao dịch thật sự được thực hiện\",\n    });\n    setPurchaseDialogOpen(false);\n    setSelectedTool(null);\n  };\n\n  // Mock discount validation - demo only  \n  const handleValidateDiscount = () => {\n    toast({\n      title: \"Demo: Mã giảm giá\",\n      description: \"Đây là chức năng demo - không có mã giảm giá thật\",\n      variant: \"default\",\n    });\n  };\n\n  // Filter tools and VPS based on search\n  const filteredTools = tools.filter(tool => {\n    const matchesSearch = tool.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         tool.description.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesSearch;\n  });\n\n  const filteredVPS = mockVPS.filter(vps => {\n    const matchesSearch = vps.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         vps.specs.feature.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesSearch;\n  });\n\n  const handlePurchase = (toolId: string) => {\n    if (!isAuthenticated) {\n      toast({\n        title: \"Cần đăng nhập\",\n        description: \"Vui lòng đăng nhập để xem demo mua hàng\",\n        variant: \"default\",\n      });\n      return;\n    }\n\n    const tool = tools.find(t => t.id === toolId);\n    if (tool) {\n      setSelectedTool(tool);\n      setPurchaseDialogOpen(true);\n    }\n  };\n\n  const handleConfirmPurchase = () => {\n    if (!selectedTool) return;\n    handlePurchaseSuccess();\n  };\n\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-background\">\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          {/* Global Search */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.4 }}\n            className=\"mb-8\"\n          >\n            <div className=\"max-w-2xl mx-auto\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Tìm kiếm tools và VPS...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-12 pr-12 h-12 text-lg border-2 border-gray-200 rounded-xl shadow-sm focus:outline-none focus:ring-0 focus:border-gray-200 focus-visible:outline-none focus-visible:ring-0 focus-visible:ring-offset-0\"\n                  data-testid=\"input-global-search\"\n                />\n                {searchQuery && (\n                  <button\n                    onClick={() => setSearchQuery(\"\")}\n                    className=\"absolute right-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-red-500 hover:text-red-700 transition-colors\"\n                    data-testid=\"button-clear-search\"\n                  >\n                    <X className=\"h-5 w-5\" />\n                  </button>\n                )}\n              </div>\n              {searchQuery && (\n                <p className=\"text-sm text-muted-foreground mt-2 text-center\">\n                  Tìm thấy {filteredTools.length} tools và {filteredVPS.length} VPS cho \"{searchQuery}\"\n                </p>\n              )}\n            </div>\n          </motion.div>\n\n          {/* TOOL NRO Header */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.4, delay: 0.1 }}\n            className=\"text-center mb-6\"\n          >\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-2\">\n              <span className=\"bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent\">\n                TOOL NRO\n              </span>\n            </h1>\n            <div className=\"h-1 w-16 bg-gradient-to-r from-blue-600 to-emerald-600 mx-auto rounded-full\"></div>\n          </motion.div>\n\n\n          {/* Tools Grid */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"mb-16\"\n          >\n            {toolsLoading ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {[...Array(6)].map((_, i) => (\n                  <Card key={i} className=\"overflow-hidden\">\n                    <Skeleton className=\"w-full h-48\" />\n                    <CardContent className=\"p-6\">\n                      <div className=\"space-y-3\">\n                        <Skeleton className=\"h-6 w-3/4\" />\n                        <Skeleton className=\"h-4 w-full\" />\n                        <Skeleton className=\"h-4 w-2/3\" />\n                        <div className=\"flex justify-between items-center\">\n                          <Skeleton className=\"h-8 w-24\" />\n                          <Skeleton className=\"h-6 w-16\" />\n                        </div>\n                        <div className=\"flex gap-2\">\n                          <Skeleton className=\"h-10 flex-1\" />\n                          <Skeleton className=\"h-10 w-10\" />\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            ) : (searchQuery ? filteredTools : tools).length > 0 ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {(searchQuery ? filteredTools : tools).map((tool, index) => (\n                  <motion.div\n                    key={tool.id}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.6, delay: 0.1 * index }}\n                  >\n                    <ToolCard tool={tool} onPurchase={handlePurchase} />\n                  </motion.div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <AlertCircle className=\"h-8 w-8 text-muted-foreground mx-auto mb-3\" />\n                <p className=\"text-muted-foreground\">\n                  {searchQuery ? `Không tìm thấy tool nào cho \"${searchQuery}\"` : \"Không có tool nào\"}\n                </p>\n              </div>\n            )}\n          </motion.div>\n\n          {/* VPS Section */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.5 }}\n            className=\"mt-16 mb-12\"\n          >\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl md:text-3xl font-bold mb-2\">\n                <span className=\"bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent\">\n                  VPS VIỆT\n                </span>\n              </h2>\n              <div className=\"h-1 w-16 bg-gradient-to-r from-purple-600 to-blue-600 mx-auto rounded-full\"></div>\n            </div>\n            \n            {(searchQuery ? filteredVPS : mockVPS).length > 0 ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {(searchQuery ? filteredVPS : mockVPS).map((vps, index) => (\n                  <motion.div\n                    key={vps.id}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.6, delay: 0.1 * index }}\n                  >\n                    <Card className=\"overflow-hidden border-2 hover:border-purple-200 dark:hover:border-purple-700 transition-all duration-300 hover:shadow-lg\">\n                      <CardContent className=\"p-6\">\n                        <div className=\"text-center mb-4\">\n                          <div className=\"w-16 h-16 bg-gradient-to-br from-blue-100 to-purple-100 dark:from-blue-800 dark:to-purple-800 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                            <Server className=\"w-8 h-8 text-blue-600 dark:text-blue-400\" />\n                          </div>\n                          <h3 className=\"font-bold text-lg mb-2 text-gray-900 dark:text-white\">{vps.name}</h3>\n                          <p className=\"text-2xl font-bold text-red-500 mb-1\">\n                            {Number(vps.price).toLocaleString('vi-VN')} ₫\n                            <span className=\"text-sm font-normal text-gray-500 dark:text-gray-400\"> / {vps.duration}</span>\n                          </p>\n                        </div>\n                        \n                        <div className=\"space-y-3 mb-4\">\n                          <div className=\"flex items-center justify-center space-x-2 text-blue-600 dark:text-blue-400\">\n                            <Cpu className=\"w-4 h-4\" />\n                            <span className=\"font-medium\">{vps.specs.cores}</span>\n                          </div>\n                          <div className=\"flex items-center justify-center space-x-2 text-blue-600 dark:text-blue-400\">\n                            <HardDrive className=\"w-4 h-4\" />\n                            <span className=\"font-medium\">{vps.specs.ram}</span>\n                          </div>\n                          <div className=\"text-center text-sm text-blue-600 dark:text-blue-400 font-medium\">\n                            {vps.specs.feature}\n                          </div>\n                        </div>\n                        \n                        <div className=\"flex items-center justify-center space-x-4 text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                          <div className=\"flex items-center space-x-1\">\n                            <Eye className=\"w-4 h-4\" />\n                            <span>Còn lại: {vps.availability.inStock}</span>\n                          </div>\n                          <div>\n                            <span>Lượt mua: {vps.availability.purchased}</span>\n                          </div>\n                        </div>\n                        \n                        <Button \n                          className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-medium\"\n                          onClick={() => {\n                            if (!isAuthenticated) {\n                              toast({\n                                title: \"Cần đăng nhập\",\n                                description: \"Vui lòng đăng nhập để xem demo mua VPS\",\n                                variant: \"default\",\n                              });\n                              return;\n                            }\n                            toast({\n                              title: \"Demo: Mua VPS\",\n                              description: \"Đây là demo - không có giao dịch thật sự được thực hiện\",\n                            });\n                          }}\n                        >\n                          ĐĂNG KÝ\n                        </Button>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <AlertCircle className=\"h-8 w-8 text-muted-foreground mx-auto mb-3\" />\n                <p className=\"text-muted-foreground\">\n                  {searchQuery ? `Không tìm thấy VPS nào cho \"${searchQuery}\"` : \"Không có VPS nào\"}\n                </p>\n              </div>\n            )}\n          </motion.div>\n\n          {/* PROXY VIỆT Section */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.6 }}\n            className=\"mt-16 mb-12\"\n          >\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl md:text-3xl font-bold mb-2\">\n                <span className=\"bg-gradient-to-r from-red-600 to-yellow-600 bg-clip-text text-transparent\">\n                  PROXY VIỆT\n                </span>\n              </h2>\n              <div className=\"h-1 w-16 bg-gradient-to-r from-red-600 to-yellow-600 mx-auto rounded-full\"></div>\n            </div>\n            \n            {/* Single Proxy Display */}\n            {(() => {\n              const proxyTool = tools.find(tool => tool.categoryId === \"5\");\n              \n              if (!proxyTool) {\n                return (\n                  <div className=\"text-center py-8\">\n                    <AlertCircle className=\"h-8 w-8 text-muted-foreground mx-auto mb-3\" />\n                    <p className=\"text-muted-foreground\">Không có proxy nào</p>\n                  </div>\n                );\n              }\n\n              // Calculate price based on selected months\n              const baseMonthlyPrice = 50000; // 50k per month\n              const months = parseInt(selectedMonths);\n              const calculatedPrice = baseMonthlyPrice * months;\n              \n              return (\n                <div className=\"max-w-md mx-auto\">\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.6 }}\n                  >\n                    <Card className=\"overflow-hidden border-2 hover:border-red-200 dark:hover:border-red-700 transition-all duration-300 hover:shadow-lg\">\n                      <CardContent className=\"p-8\">\n                        {/* Proxy Image */}\n                        <div className=\"text-center mb-6\">\n                          <div className=\"w-20 h-20 mx-auto mb-4 rounded-lg overflow-hidden\">\n                            <img \n                              src={proxyTool.imageUrl} \n                              alt={proxyTool.name}\n                              className=\"w-full h-full object-cover\"\n                            />\n                          </div>\n                          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">\n                            {proxyTool.name}\n                          </h3>\n                          <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n                            {proxyTool.description}\n                          </p>\n                        </div>\n\n                        {/* Price Display */}\n                        <div className=\"text-center mb-6\">\n                          <div className=\"text-sm text-gray-500 dark:text-gray-400 mb-1\">\n                            Giá / tháng\n                          </div>\n                          <div className=\"text-3xl font-bold text-red-500 mb-2\">\n                            {baseMonthlyPrice.toLocaleString('vi-VN')} ₫\n                          </div>\n                          <div className=\"text-lg text-gray-600 dark:text-gray-300\">\n                            {months > 1 && (\n                              <span>\n                                Tổng {months} tháng: <span className=\"font-bold text-primary\">\n                                  {calculatedPrice.toLocaleString('vi-VN')} ₫\n                                </span>\n                              </span>\n                            )}\n                          </div>\n                        </div>\n\n                        {/* Month Selection */}\n                        <div className=\"mb-6\">\n                          <Label htmlFor=\"months\" className=\"text-sm font-medium mb-2 block\">\n                            Chọn số tháng\n                          </Label>\n                          <Select value={selectedMonths} onValueChange={setSelectedMonths}>\n                            <SelectTrigger className=\"w-full\">\n                              <SelectValue placeholder=\"Chọn tháng\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"1\">1 tháng</SelectItem>\n                              <SelectItem value=\"2\">2 tháng</SelectItem>\n                              <SelectItem value=\"3\">3 tháng</SelectItem>\n                              <SelectItem value=\"6\">6 tháng</SelectItem>\n                              <SelectItem value=\"12\">12 tháng</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n\n                        {/* Purchase Button */}\n                        <Button \n                          className=\"w-full bg-gradient-to-r from-red-500 to-yellow-600 hover:from-red-600 hover:to-yellow-700 text-white font-medium text-lg py-3\"\n                          onClick={() => {\n                            if (!isAuthenticated) {\n                              toast({\n                                title: \"Cần đăng nhập\",\n                                description: \"Vui lòng đăng nhập để xem demo mua proxy\",\n                                variant: \"default\",\n                              });\n                              return;\n                            }\n                            toast({\n                              title: \"Demo: Mua Proxy\",\n                              description: `Mua ${proxyTool.name} ${months} tháng - ${calculatedPrice.toLocaleString('vi-VN')}₫`,\n                            });\n                          }}\n                          data-testid=\"button-purchase-proxy\"\n                        >\n                          MUA ({calculatedPrice.toLocaleString('vi-VN')}₫)\n                        </Button>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                </div>\n              );\n            })()}\n          </motion.div>\n\n          {/* Statistics Section */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.7 }}\n            className=\"mt-16 mb-12\"\n          >\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl md:text-3xl font-bold mb-2\">\n                <span className=\"bg-gradient-to-r from-emerald-600 to-cyan-600 bg-clip-text text-transparent\">\n                  THỐNG KÊ\n                </span>\n              </h2>\n              <div className=\"h-1 w-16 bg-gradient-to-r from-emerald-600 to-cyan-600 mx-auto rounded-full\"></div>\n            </div>\n            \n            {/* Statistics Content */}\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Top Nạp */}\n              <Card className=\"shadow-lg\">\n                <div className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white text-center py-3 rounded-t-lg\">\n                  <h3 className=\"text-lg font-bold\">TOP NẠP</h3>\n                </div>\n                <CardContent className=\"p-0\">\n                  <div className=\"space-y-0\">\n                    {[\n                      { rank: 1, username: \"tung***\", amount: \"14.465.000\" },\n                      { rank: 2, username: \"appu***\", amount: \"8.575.000\" },\n                      { rank: 3, username: \"szhi***\", amount: \"6.380.000\" },\n                      { rank: 4, username: \"tiep***\", amount: \"6.112.950\" },\n                      { rank: 5, username: \"keyf***\", amount: \"6.000.000\" },\n                      { rank: 6, username: \"gian***\", amount: \"5.834.000\" },\n                      { rank: 7, username: \"stya***\", amount: \"5.349.000\" },\n                      { rank: 8, username: \"minh***\", amount: \"4.290.000\" },\n                      { rank: 9, username: \"taip***\", amount: \"3.901.000\" },\n                      { rank: 10, username: \"Duck***\", amount: \"3.600.000\" },\n                    ].map((user) => (\n                      <div\n                        key={user.rank}\n                        className=\"flex items-center justify-between px-4 py-3 border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-800\"\n                      >\n                        <div className=\"flex items-center space-x-3\">\n                          <Badge \n                            variant={user.rank <= 3 ? \"destructive\" : \"secondary\"}\n                            className=\"w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold\"\n                          >\n                            {user.rank}\n                          </Badge>\n                          <span className=\"font-medium text-gray-900 dark:text-white\">\n                            {user.username}\n                          </span>\n                        </div>\n                        <span className=\"bg-emerald-500 text-white px-3 py-1 rounded text-sm font-bold\">\n                          {user.amount}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Lịch Sử Giao Dịch */}\n              <Card className=\"shadow-lg\">\n                <div className=\"bg-gradient-to-r from-blue-500 to-blue-600 text-white text-center py-3 rounded-t-lg\">\n                  <h3 className=\"text-lg font-bold\">LỊCH SỬ GIAO DỊCH</h3>\n                </div>\n                <CardContent className=\"p-0\">\n                  <div className=\"space-y-0\">\n                    {[\n                      { username: \"buia***\", product: \"MUA (Tool Up Capsule Kỉ B)\", time: \"2025-09-19 12:40:11\" },\n                      { username: \"gian***\", product: \"MUA (Auto Bán Đồ Kho Báu)\", time: \"2025-09-18 19:41:34\" },\n                      { username: \"Nguy***\", product: \"MUA (Nhặt Thưởng Ngọc Rồng Đen)\", time: \"2025-09-17 20:56:32\" },\n                      { username: \"bach***\", product: \"MUA (Tự Động Đánh Quái)\", time: \"2025-09-17 12:50:43\" },\n                      { username: \"hibo***\", product: \"MUA (Tool Up Capsule Kỉ B)\", time: \"2025-09-17 12:21:59\" },\n                      { username: \"minh***\", product: \"MUA (Bot Bán Item)\", time: \"2025-09-17 07:00:53\" },\n                      { username: \"cayz***\", product: \"MUA (Tool Auto Up Đệ Ver1)\", time: \"2025-09-16 23:27:24\" },\n                      { username: \"0337***\", product: \"MUA (Nhặt Thưởng Ngọc Rồng Đen)\", time: \"2025-09-16 18:51:49\" },\n                      { username: \"ninh***\", product: \"MUA (Tự Động Đánh Quái)\", time: \"2025-09-15 17:00:53\" },\n                      { username: \"that***\", product: \"MUA (Tự Động Đánh Quái)\", time: \"2025-09-15 10:51:47\" },\n                    ].map((transaction, index) => (\n                      <div\n                        key={index}\n                        className=\"px-4 py-3 border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-800\"\n                      >\n                        <div className=\"flex items-start justify-between\">\n                          <div className=\"flex-1\">\n                            <div className=\"flex items-center space-x-2 mb-1\">\n                              <span className=\"text-red-500 font-bold text-sm\">\n                                {transaction.username}\n                              </span>\n                            </div>\n                            <p className=\"text-gray-700 dark:text-gray-300 text-sm\">\n                              {transaction.product}\n                            </p>\n                          </div>\n                          <div className=\"text-right\">\n                            <span className=\"text-gray-500 text-xs\">\n                              {transaction.time}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </motion.div>\n        </div>\n\n        {/* Back to Top Button */}\n        {showBackToTop && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0 }}\n            transition={{ duration: 0.2 }}\n            className=\"fixed bottom-6 right-6 z-50\"\n          >\n            <div className=\"relative\">\n              {/* Progress Circle */}\n              <svg className=\"w-16 h-16 transform -rotate-90\" viewBox=\"0 0 64 64\">\n                {/* Background circle */}\n                <circle\n                  cx=\"32\"\n                  cy=\"32\"\n                  r=\"28\"\n                  stroke=\"rgba(255, 255, 255, 0.1)\"\n                  strokeWidth=\"4\"\n                  fill=\"none\"\n                />\n                {/* Progress circle */}\n                <circle\n                  cx=\"32\"\n                  cy=\"32\"\n                  r=\"28\"\n                  stroke=\"url(#gradient)\"\n                  strokeWidth=\"4\"\n                  fill=\"none\"\n                  strokeLinecap=\"round\"\n                  strokeDasharray={`${2 * Math.PI * 28}`}\n                  strokeDashoffset={`${2 * Math.PI * 28 * (1 - scrollProgress / 100)}`}\n                  className=\"transition-all duration-300\"\n                />\n                <defs>\n                  <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor=\"#3b82f6\" />\n                    <stop offset=\"100%\" stopColor=\"#8b5cf6\" />\n                  </linearGradient>\n                </defs>\n              </svg>\n              \n              {/* Button */}\n              <button\n                onClick={scrollToTop}\n                className=\"absolute inset-2 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center group\"\n                data-testid=\"button-back-to-top\"\n              >\n                <ChevronUp className=\"w-6 h-6 text-white group-hover:scale-110 transition-transform duration-200\" />\n              </button>\n            </div>\n          </motion.div>\n        )}\n\n        {/* Purchase Confirmation Dialog */}\n        <Dialog open={purchaseDialogOpen} onOpenChange={setPurchaseDialogOpen}>\n          <DialogContent data-testid=\"dialog-purchase-confirmation\">\n            <DialogHeader>\n              <DialogTitle>Xác nhận mua hàng</DialogTitle>\n              <DialogDescription>\n                Bạn có chắc chắn muốn mua công cụ này không?\n              </DialogDescription>\n            </DialogHeader>\n            \n            {selectedTool && (\n              <div className=\"py-4\">\n                <div className=\"flex items-center space-x-4 mb-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center\">\n                    <ShoppingCart className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold\" data-testid=\"text-purchase-tool-name\">{selectedTool.name}</h4>\n                    <p className=\"text-2xl font-bold text-primary\" data-testid=\"text-purchase-tool-price\">\n                      {Number(selectedTool.price).toLocaleString('vi-VN')}₫\n                    </p>\n                  </div>\n                </div>\n                \n                {/* Demo - Discount Code (disabled) */}\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"discount-code\">Mã giảm giá (demo)</Label>\n                  <div className=\"flex gap-2\">\n                    <Input\n                      id=\"discount-code\"\n                      placeholder=\"Chức năng demo - không thực tế\"\n                      disabled\n                      data-testid=\"input-discount-code\"\n                    />\n                    <Button\n                      variant=\"outline\"\n                      onClick={handleValidateDiscount}\n                      data-testid=\"button-validate-discount\"\n                    >\n                      Demo\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <DialogFooter>\n              <Button \n                variant=\"outline\" \n                onClick={() => setPurchaseDialogOpen(false)}\n                data-testid=\"button-cancel-purchase\"\n              >\n                Hủy\n              </Button>\n              <Button \n                onClick={handleConfirmPurchase}\n                data-testid=\"button-confirm-purchase\"\n              >\n                Xác nhận mua (Demo)\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":31440},"src/pages/Landing.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Layout } from \"@/components/Layout\";\nimport { \n  Shield, \n  Zap, \n  Users, \n  ArrowRight,\n  CheckCircle\n} from \"lucide-react\";\n\nexport default function Landing() {\n  const features = [\n    {\n      icon: Shield,\n      title: \"An toàn & Bảo mật\",\n      description: \"Tất cả công cụ được kiểm duyệt kỹ lưỡng và đảm bảo an toàn\"\n    },\n    {\n      icon: Zap,\n      title: \"Hiệu suất cao\",\n      description: \"Các công cụ được tối ưu hóa để đạt hiệu suất tối đa\"\n    },\n    {\n      icon: Users,\n      title: \"Hỗ trợ 24/7\",\n      description: \"Đội ngũ hỗ trợ chuyên nghiệp sẵn sàng giúp bạn mọi lúc\"\n    }\n  ];\n\n  const stats = [\n    { value: \"1,000+\", label: \"Người dùng tin tưởng\" },\n    { value: \"50+\", label: \"Công cụ chất lượng\" },\n    { value: \"99.9%\", label: \"Uptime đảm bảo\" },\n    { value: \"24/7\", label: \"Hỗ trợ khách hàng\" }\n  ];\n\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-background\">\n        {/* Hero Section */}\n        <section className=\"relative py-20 bg-gradient-to-br from-blue-50 to-emerald-50 dark:from-gray-900 dark:to-gray-800\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div \n              className=\"max-w-4xl mx-auto text-center\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n            >\n              <h1 className=\"text-4xl md:text-6xl font-bold mb-6 leading-tight\">\n                Thị trường{\" \"}\n                <span className=\"bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent\">\n                  công cụ\n                </span>\n                <br />\n                chuyên nghiệp\n              </h1>\n              <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n                Khám phá và mua các công cụ phần mềm chất lượng cao từ các nhà phát triển uy tín. \n                Tất cả đều được kiểm duyệt và đảm bảo an toàn.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button \n                  size=\"lg\" \n                  className=\"px-8 py-4 text-lg font-semibold\"\n                  onClick={() => (window.location.href = \"/api/login\")}\n                  data-testid=\"button-get-started\"\n                >\n                  Khám phá công cụ\n                  <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n                <Button \n                  variant=\"outline\" \n                  size=\"lg\"\n                  className=\"px-8 py-4 text-lg font-semibold\"\n                  data-testid=\"button-learn-more\"\n                >\n                  Tìm hiểu thêm\n                </Button>\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Features Section */}\n        <section className=\"py-20\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div \n              className=\"text-center mb-16\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">\n                Tại sao chọn ToolMarket?\n              </h2>\n              <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n                Chúng tôi cam kết mang đến cho bạn những công cụ tốt nhất với chất lượng đảm bảo\n              </p>\n            </motion.div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              {features.map((feature, index) => (\n                <motion.div\n                  key={index}\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <Card className=\"h-full hover:shadow-lg transition-all duration-200 hover:-translate-y-1\">\n                    <CardContent className=\"p-8 text-center\">\n                      <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                        <feature.icon className=\"h-6 w-6 text-primary\" />\n                      </div>\n                      <h3 className=\"text-xl font-bold mb-3\">{feature.title}</h3>\n                      <p className=\"text-muted-foreground\">{feature.description}</p>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Stats Section */}\n        <section className=\"py-20 bg-muted/50\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div \n              className=\"grid grid-cols-2 md:grid-cols-4 gap-8\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              {stats.map((stat, index) => (\n                <div key={index} className=\"text-center\">\n                  <div className=\"text-3xl md:text-4xl font-bold text-primary mb-2\">\n                    {stat.value}\n                  </div>\n                  <div className=\"text-muted-foreground font-medium\">\n                    {stat.label}\n                  </div>\n                </div>\n              ))}\n            </motion.div>\n          </div>\n        </section>\n\n        {/* CTA Section */}\n        <section className=\"py-20\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div \n              className=\"text-center\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n            >\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">\n                Sẵn sàng bắt đầu?\n              </h2>\n              <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n                Tham gia cùng hàng nghìn người dùng đã tin tưởng ToolMarket cho nhu cầu công cụ của họ\n              </p>\n              <div className=\"flex items-center justify-center space-x-4 mb-8\">\n                <CheckCircle className=\"h-5 w-5 text-emerald-600\" />\n                <span className=\"text-muted-foreground\">Miễn phí tham gia</span>\n                <CheckCircle className=\"h-5 w-5 text-emerald-600\" />\n                <span className=\"text-muted-foreground\">Hỗ trợ 24/7</span>\n                <CheckCircle className=\"h-5 w-5 text-emerald-600\" />\n                <span className=\"text-muted-foreground\">Thanh toán an toàn</span>\n              </div>\n              <Button \n                size=\"lg\"\n                className=\"px-8 py-4 text-lg font-semibold\"\n                onClick={() => (window.location.href = \"/api/login\")}\n                data-testid=\"button-join-now\"\n              >\n                Tham gia ngay\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Footer */}\n        <footer className=\"border-t border-border bg-card\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n              <div className=\"col-span-1 md:col-span-2\">\n                <div className=\"flex items-center space-x-2 mb-4\">\n                  <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n                    <span className=\"text-primary-foreground font-bold text-sm\">TM</span>\n                  </div>\n                  <span className=\"font-bold text-xl bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent\">\n                    ToolMarket\n                  </span>\n                </div>\n                <p className=\"text-muted-foreground mb-4 max-w-md\">\n                  Thị trường công cụ phần mềm hàng đầu Việt Nam. Cung cấp các giải pháp chất lượng cao cho doanh nghiệp và cá nhân.\n                </p>\n              </div>\n\n              <div>\n                <h3 className=\"font-semibold mb-4\">Sản phẩm</h3>\n                <ul className=\"space-y-2 text-sm text-muted-foreground\">\n                  <li><a href=\"#\" className=\"hover:text-foreground transition-colors\">Công cụ SEO</a></li>\n                  <li><a href=\"#\" className=\"hover:text-foreground transition-colors\">Social Media</a></li>\n                  <li><a href=\"#\" className=\"hover:text-foreground transition-colors\">Email Marketing</a></li>\n                  <li><a href=\"#\" className=\"hover:text-foreground transition-colors\">Automation</a></li>\n                </ul>\n              </div>\n\n              <div>\n                <h3 className=\"font-semibold mb-4\">Hỗ trợ</h3>\n                <ul className=\"space-y-2 text-sm text-muted-foreground\">\n                  <li><a href=\"#\" className=\"hover:text-foreground transition-colors\">Trung tâm trợ giúp</a></li>\n                  <li><a href=\"#\" className=\"hover:text-foreground transition-colors\">Liên hệ</a></li>\n                  <li><a href=\"#\" className=\"hover:text-foreground transition-colors\">Chính sách</a></li>\n                  <li><a href=\"#\" className=\"hover:text-foreground transition-colors\">Điều khoản</a></li>\n                </ul>\n              </div>\n            </div>\n\n            <div className=\"border-t border-border mt-12 pt-8 text-center text-sm text-muted-foreground\">\n              <p>&copy; 2024 ToolMarket. Tất cả quyền được bảo lưu.</p>\n            </div>\n          </div>\n        </footer>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":10297},"src/pages/Login.tsx":{"content":"import { useAuth } from \"@/hooks/useAuth\";\nimport { Layout } from \"@/components/Layout\";\nimport { LoginForm } from \"@/components/LoginForm\";\nimport { motion } from \"framer-motion\";\nimport { useLocation } from \"wouter\";\nimport { useEffect } from \"react\";\n\nexport default function Login() {\n  const { user, isLoading } = useAuth();\n  const [, setLocation] = useLocation();\n\n  // If user is already logged in, redirect to home\n  useEffect(() => {\n    if (user && !isLoading) {\n      setLocation(\"/\");\n    }\n  }, [user, isLoading, setLocation]);\n\n  // Set page title\n  useEffect(() => {\n    document.title = \"Đăng nhập | TOOL NRO\";\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center px-4\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"w-full max-w-md\"\n        >\n          <LoginForm />\n        </motion.div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":1025},"src/pages/Profile.tsx":{"content":"import { useState } from \"react\";\nimport { Layout } from \"@/components/Layout\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { User, Lock, Save, Edit } from \"lucide-react\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Link } from \"wouter\";\n\nexport default function Profile() {\n  const { user, isAuthenticated } = useAuth();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  \n  const [isEditingProfile, setIsEditingProfile] = useState(false);\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\n  \n  // Profile form state\n  const [firstName, setFirstName] = useState(user?.firstName || \"\");\n  const [lastName, setLastName] = useState(user?.lastName || \"\");\n  const [email, setEmail] = useState(user?.email || \"\");\n  \n  // Password form state\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  // Update profile mutation\n  const updateProfileMutation = useMutation({\n    mutationFn: async (data: { firstName: string; lastName: string; email: string }) => {\n      const response = await apiRequest(\"PATCH\", \"/api/user/profile\", data);\n      return await response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Cập nhật thành công\",\n        description: \"Thông tin cá nhân đã được cập nhật.\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/auth/user\"] });\n      setIsEditingProfile(false);\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Cập nhật thất bại\",\n        description: error.message || \"Có lỗi xảy ra khi cập nhật thông tin.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Change password mutation\n  const changePasswordMutation = useMutation({\n    mutationFn: async (data: { currentPassword: string; newPassword: string }) => {\n      const response = await apiRequest(\"PATCH\", \"/api/user/password\", data);\n      return await response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Đổi mật khẩu thành công\",\n        description: \"Mật khẩu của bạn đã được thay đổi.\",\n      });\n      setIsChangingPassword(false);\n      setCurrentPassword(\"\");\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Đổi mật khẩu thất bại\",\n        description: error.message || \"Có lỗi xảy ra khi đổi mật khẩu.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleProfileSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!firstName.trim() || !lastName.trim()) {\n      toast({\n        title: \"Thiếu thông tin\",\n        description: \"Vui lòng nhập đầy đủ họ và tên.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    updateProfileMutation.mutate({\n      firstName: firstName.trim(),\n      lastName: lastName.trim(),\n      email: email.trim(),\n    });\n  };\n\n  const handlePasswordSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!currentPassword || !newPassword || !confirmPassword) {\n      toast({\n        title: \"Thiếu thông tin\",\n        description: \"Vui lòng điền đầy đủ tất cả các trường.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      toast({\n        title: \"Mật khẩu không khớp\",\n        description: \"Mật khẩu mới và xác nhận mật khẩu không giống nhau.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    if (newPassword.length < 6) {\n      toast({\n        title: \"Mật khẩu quá ngắn\",\n        description: \"Mật khẩu mới phải có ít nhất 6 ký tự.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    changePasswordMutation.mutate({\n      currentPassword,\n      newPassword,\n    });\n  };\n\n  const handleCancelEdit = () => {\n    setFirstName(user?.firstName || \"\");\n    setLastName(user?.lastName || \"\");\n    setEmail(user?.email || \"\");\n    setIsEditingProfile(false);\n  };\n\n  if (!user) {\n    return (\n      <Layout showSidebar={isAuthenticated}>\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"text-center\">\n            <p className=\"text-muted-foreground\">Vui lòng đăng nhập để xem thông tin cá nhân.</p>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout showSidebar={isAuthenticated}>\n      <div className=\"container mx-auto px-4 py-8 max-w-md\">\n        <div className=\"space-y-4\">\n        {/* User Info Card */}\n        <Card className=\"w-full\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex items-center space-x-4 mb-4\">\n              <Avatar className=\"h-12 w-12\">\n                <AvatarImage src={user.profileImageUrl} alt=\"\" />\n                <AvatarFallback className=\"text-sm\">\n                  {user.firstName?.[0]?.toUpperCase() || user.email?.[0]?.toUpperCase() || \"U\"}\n                </AvatarFallback>\n              </Avatar>\n              <div>\n                <h2 className=\"font-bold text-lg\" data-testid=\"text-user-display-name\">\n                  {user.firstName && user.lastName \n                    ? `${user.firstName} ${user.lastName}`\n                    : user.email}\n                </h2>\n                <p className=\"text-sm text-muted-foreground\">\n                  {user.isAdmin ? \"Quản trị viên\" : \"Thành viên\"}\n                </p>\n                <p className=\"text-sm font-semibold text-emerald-600\" data-testid=\"text-user-balance-profile\">\n                  Số dư: {Number(user.balance || 0).toLocaleString('vi-VN')}₫\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Navigation Menu */}\n        <Card className=\"w-full\">\n          <CardContent className=\"p-0\">\n            <div className=\"divide-y divide-border\">\n              <Link href=\"/profile\" className=\"flex items-center space-x-3 px-4 py-4 hover:bg-accent transition-colors\" data-testid=\"link-profile\">\n                <User className=\"h-5 w-5 text-blue-500\" />\n                <span className=\"font-medium\">Thông tin cá nhân</span>\n              </Link>\n              <Link href=\"/purchased-tools\" className=\"flex items-center space-x-3 px-4 py-4 hover:bg-accent transition-colors\" data-testid=\"link-purchased-tools\">\n                <div className=\"h-5 w-5 text-orange-500 flex items-center justify-center\">📦</div>\n                <span className=\"font-medium\">Công cụ đã mua</span>\n              </Link>\n              <Link href=\"/deposit\" className=\"flex items-center space-x-3 px-4 py-4 hover:bg-accent transition-colors\" data-testid=\"link-deposit\">\n                <div className=\"h-5 w-5 text-gray-600 flex items-center justify-center\">💳</div>\n                <span className=\"font-medium\">Nạp tiền</span>\n              </Link>\n              <Link href=\"/history\" className=\"flex items-center space-x-3 px-4 py-4 hover:bg-accent transition-colors\" data-testid=\"link-history\">\n                <div className=\"h-5 w-5 text-gray-600 flex items-center justify-center\">🕒</div>\n                <span className=\"font-medium\">Lịch sử</span>\n              </Link>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Edit Profile Button */}\n        <Card className=\"w-full\">\n          <CardContent className=\"pt-6\">\n            <Button \n              variant=\"outline\" \n              className=\"w-full\" \n              onClick={() => setIsEditingProfile(true)}\n              data-testid=\"button-edit-profile\"\n            >\n              <Edit className=\"h-4 w-4 mr-2\" />\n              Chỉnh sửa thông tin\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Edit Profile Modal/Overlay */}\n      {isEditingProfile && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <Card className=\"w-full max-w-md max-h-[90vh] overflow-y-auto\">\n            <CardHeader>\n              <CardTitle>Chỉnh sửa thông tin</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleProfileSubmit} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"firstName\">Họ</Label>\n                  <Input\n                    id=\"firstName\"\n                    value={firstName}\n                    onChange={(e) => setFirstName(e.target.value)}\n                    placeholder=\"Nhập họ của bạn\"\n                    data-testid=\"input-first-name\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"lastName\">Tên</Label>\n                  <Input\n                    id=\"lastName\"\n                    value={lastName}\n                    onChange={(e) => setLastName(e.target.value)}\n                    placeholder=\"Nhập tên của bạn\"\n                    data-testid=\"input-last-name\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    placeholder=\"Nhập email của bạn\"\n                    data-testid=\"input-email\"\n                  />\n                </div>\n                <div className=\"flex gap-2\">\n                  <Button \n                    type=\"submit\" \n                    disabled={updateProfileMutation.isPending}\n                    className=\"flex-1\"\n                    data-testid=\"button-save-profile\"\n                  >\n                    <Save className=\"h-4 w-4 mr-2\" />\n                    {updateProfileMutation.isPending ? \"Đang lưu...\" : \"Lưu\"}\n                  </Button>\n                  <Button \n                    type=\"button\" \n                    variant=\"outline\" \n                    onClick={handleCancelEdit}\n                    className=\"flex-1\"\n                    data-testid=\"button-cancel-profile\"\n                  >\n                    Hủy\n                  </Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n      </div>\n    </Layout>\n  );\n}","size_bytes":11023},"src/pages/PurchasedTools.tsx":{"content":"import { Layout } from \"@/components/Layout\";\nimport { motion } from \"framer-motion\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { \n  Download, \n  RefreshCw, \n  Clock, \n  ShoppingBag,\n  ArrowRight,\n  Key,\n  Copy,\n  ExternalLink\n} from \"lucide-react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/components/ui/dialog\";\nimport { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport type { Purchase, Tool } from \"@shared/schema\";\n\nexport default function PurchasedTools() {\n  const { isAuthenticated } = useAuth();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [changeKeyDialogOpen, setChangeKeyDialogOpen] = useState(false);\n  const [selectedPurchase, setSelectedPurchase] = useState<Purchase | null>(null);\n  const [newKey, setNewKey] = useState(\"\");\n\n  const { data: purchases, isLoading } = useQuery<(Purchase & { tool: Tool })[]>({\n    queryKey: [\"/api/purchases\"],\n    retry: false,\n  });\n\n  const changeKeyMutation = useMutation({\n    mutationFn: async ({ purchaseId, newKey }: { purchaseId: string; newKey: string }) => {\n      const response = await apiRequest(\"PUT\", `/api/purchases/${purchaseId}/key`, { newKey });\n      return await response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Đổi key thành công\",\n        description: \"Key mới đã được cập nhật\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/purchases\"] });\n      setChangeKeyDialogOpen(false);\n      setSelectedPurchase(null);\n      setNewKey(\"\");\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      \n      toast({\n        title: \"Lỗi\",\n        description: error.message || \"Không thể đổi key\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleChangeKey = (purchase: Purchase & { tool: Tool }) => {\n    setSelectedPurchase(purchase);\n    setNewKey(\"\");\n    setChangeKeyDialogOpen(true);\n  };\n\n  const handleConfirmChangeKey = () => {\n    if (!selectedPurchase || !newKey.trim()) return;\n    \n    changeKeyMutation.mutate({\n      purchaseId: selectedPurchase.id,\n      newKey: newKey.trim(),\n    });\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    toast({\n      title: \"Đã sao chép\",\n      description: \"Key đã được sao chép vào clipboard\",\n    });\n  };\n\n  const activePurchases = purchases?.filter(p => {\n    const now = new Date();\n    const expiry = new Date(p.expiresAt);\n    return expiry > now && p.isActive;\n  }) || [];\n\n  const expiredPurchases = purchases?.filter(p => {\n    const now = new Date();\n    const expiry = new Date(p.expiresAt);\n    return expiry <= now || !p.isActive;\n  }) || [];\n\n  return (\n    <Layout showSidebar={isAuthenticated}>\n      <div className=\"p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold mb-2\">Công cụ đã mua</h1>\n            <p className=\"text-muted-foreground\">Quản lý các công cụ bạn đã mua và key license</p>\n          </div>\n\n          {isLoading ? (\n            <div className=\"space-y-6\">\n              {[...Array(3)].map((_, i) => (\n                <Card key={i}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-4\">\n                        <Skeleton className=\"w-16 h-16 rounded-lg\" />\n                        <div className=\"space-y-2\">\n                          <Skeleton className=\"h-6 w-48\" />\n                          <Skeleton className=\"h-4 w-32\" />\n                          <Skeleton className=\"h-4 w-40\" />\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <Skeleton className=\"h-10 w-24\" />\n                        <Skeleton className=\"h-10 w-20\" />\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : purchases?.length === 0 ? (\n            <div className=\"text-center py-16\">\n              <ShoppingBag className=\"h-16 w-16 text-muted-foreground mx-auto mb-6\" />\n              <h3 className=\"text-2xl font-bold mb-4\">Chưa có công cụ nào</h3>\n              <p className=\"text-muted-foreground mb-8 max-w-md mx-auto\">\n                Bạn chưa mua công cụ nào. Khám phá thị trường để tìm những công cụ phù hợp với nhu cầu của bạn.\n              </p>\n              <Link href=\"/tools\">\n                <Button size=\"lg\" data-testid=\"button-browse-tools\">\n                  Duyệt công cụ\n                  <ArrowRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n              </Link>\n            </div>\n          ) : (\n            <div className=\"space-y-8\">\n              {/* Active Tools */}\n              {activePurchases.length > 0 && (\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: 0.2 }}\n                >\n                  <h2 className=\"text-2xl font-bold mb-6 text-emerald-600\">Đang hoạt động ({activePurchases.length})</h2>\n                  <div className=\"space-y-4\">\n                    {activePurchases.map((purchase, index) => {\n                      const daysLeft = Math.ceil((new Date(purchase.expiresAt).getTime() - Date.now()) / (1000 * 60 * 60 * 24));\n                      const isExpiringSoon = daysLeft <= 7;\n                      \n                      return (\n                        <motion.div\n                          key={purchase.id}\n                          initial={{ opacity: 0, x: -20 }}\n                          animate={{ opacity: 1, x: 0 }}\n                          transition={{ duration: 0.4, delay: index * 0.1 }}\n                        >\n                          <Card className=\"hover:shadow-lg transition-all duration-200\">\n                            <CardContent className=\"p-6\">\n                              <div className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center space-x-4\">\n                                  <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center\">\n                                    <ShoppingBag className=\"w-8 h-8 text-white\" />\n                                  </div>\n                                  <div>\n                                    <h3 className=\"text-xl font-bold mb-1\" data-testid={`text-tool-name-${purchase.id}`}>\n                                      {purchase.tool.name}\n                                    </h3>\n                                    <p className=\"text-sm text-muted-foreground mb-2\" data-testid={`text-purchase-date-${purchase.id}`}>\n                                      Mua ngày {new Date(purchase.createdAt).toLocaleDateString('vi-VN')}\n                                    </p>\n                                    <div className=\"flex items-center space-x-2\">\n                                      <Badge \n                                        variant={isExpiringSoon ? \"secondary\" : \"default\"}\n                                        className={isExpiringSoon ? \"bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200\" : \"bg-emerald-100 text-emerald-800 dark:bg-emerald-900 dark:text-emerald-200\"}\n                                      >\n                                        <Clock className=\"w-3 h-3 mr-1\" />\n                                        Còn {daysLeft} ngày\n                                      </Badge>\n                                      <div className=\"flex items-center space-x-2 text-sm font-mono bg-muted px-2 py-1 rounded\">\n                                        <Key className=\"w-3 h-3\" />\n                                        <span data-testid={`text-license-key-${purchase.id}`}>{purchase.keyValue}</span>\n                                        <Button \n                                          variant=\"ghost\" \n                                          size=\"sm\" \n                                          className=\"h-6 w-6 p-0\"\n                                          onClick={() => copyToClipboard(purchase.keyValue)}\n                                          data-testid={`button-copy-key-${purchase.id}`}\n                                        >\n                                          <Copy className=\"w-3 h-3\" />\n                                        </Button>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className=\"flex flex-col gap-2\">\n                                  <div className=\"text-right\">\n                                    <p className=\"text-sm text-muted-foreground\">Giá mua</p>\n                                    <p className=\"text-lg font-bold\" data-testid={`text-purchase-price-${purchase.id}`}>\n                                      {Number(purchase.finalPrice).toLocaleString('vi-VN')}₫\n                                    </p>\n                                  </div>\n                                  <div className=\"flex gap-2\">\n                                    {purchase.tool.downloadUrl && (\n                                      <Button \n                                        variant=\"outline\" \n                                        size=\"sm\" \n                                        asChild\n                                        data-testid={`button-download-${purchase.id}`}\n                                      >\n                                        <a href={purchase.tool.downloadUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                                          <Download className=\"w-4 h-4 mr-1\" />\n                                          Tải\n                                        </a>\n                                      </Button>\n                                    )}\n                                    <Button \n                                      variant=\"outline\" \n                                      size=\"sm\"\n                                      onClick={() => handleChangeKey(purchase)}\n                                      data-testid={`button-change-key-${purchase.id}`}\n                                    >\n                                      <RefreshCw className=\"w-4 h-4 mr-1\" />\n                                      Đổi key\n                                    </Button>\n                                    <Link href={`/tools/${purchase.tool.id}`}>\n                                      <Button \n                                        variant=\"ghost\" \n                                        size=\"sm\"\n                                        data-testid={`button-view-details-${purchase.id}`}\n                                      >\n                                        <ExternalLink className=\"w-4 h-4\" />\n                                      </Button>\n                                    </Link>\n                                  </div>\n                                </div>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </motion.div>\n                      );\n                    })}\n                  </div>\n                </motion.div>\n              )}\n\n              {/* Expired Tools */}\n              {expiredPurchases.length > 0 && (\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: 0.4 }}\n                >\n                  <h2 className=\"text-2xl font-bold mb-6 text-red-600\">Đã hết hạn ({expiredPurchases.length})</h2>\n                  <div className=\"space-y-4\">\n                    {expiredPurchases.map((purchase, index) => (\n                      <motion.div\n                        key={purchase.id}\n                        initial={{ opacity: 0, x: -20 }}\n                        animate={{ opacity: 1, x: 0 }}\n                        transition={{ duration: 0.4, delay: index * 0.1 }}\n                      >\n                        <Card className=\"opacity-75\">\n                          <CardContent className=\"p-6\">\n                            <div className=\"flex items-center justify-between\">\n                              <div className=\"flex items-center space-x-4\">\n                                <div className=\"w-16 h-16 bg-gray-400 rounded-lg flex items-center justify-center\">\n                                  <ShoppingBag className=\"w-8 h-8 text-white\" />\n                                </div>\n                                <div>\n                                  <h3 className=\"text-xl font-bold mb-1 text-muted-foreground\" data-testid={`text-expired-tool-name-${purchase.id}`}>\n                                    {purchase.tool.name}\n                                  </h3>\n                                  <p className=\"text-sm text-muted-foreground mb-2\">\n                                    Hết hạn ngày {new Date(purchase.expiresAt).toLocaleDateString('vi-VN')}\n                                  </p>\n                                  <Badge variant=\"destructive\">\n                                    <Clock className=\"w-3 h-3 mr-1\" />\n                                    Đã hết hạn\n                                  </Badge>\n                                </div>\n                              </div>\n                              <div className=\"text-right\">\n                                <p className=\"text-sm text-muted-foreground\">Đã mua với giá</p>\n                                <p className=\"text-lg font-bold text-muted-foreground\">\n                                  {Number(purchase.finalPrice).toLocaleString('vi-VN')}₫\n                                </p>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      </motion.div>\n                    ))}\n                  </div>\n                </motion.div>\n              )}\n            </div>\n          )}\n        </motion.div>\n\n        {/* Change Key Dialog */}\n        <Dialog open={changeKeyDialogOpen} onOpenChange={setChangeKeyDialogOpen}>\n          <DialogContent data-testid=\"dialog-change-key\">\n            <DialogHeader>\n              <DialogTitle>Đổi License Key</DialogTitle>\n              <DialogDescription>\n                Nhập key mới cho công cụ {selectedPurchase?.toolId}\n              </DialogDescription>\n            </DialogHeader>\n            \n            <div className=\"py-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"new-key\">Key mới</Label>\n                <Input\n                  id=\"new-key\"\n                  placeholder=\"Nhập license key mới\"\n                  value={newKey}\n                  onChange={(e) => setNewKey(e.target.value)}\n                  data-testid=\"input-new-key\"\n                />\n              </div>\n            </div>\n\n            <DialogFooter>\n              <Button \n                variant=\"outline\" \n                onClick={() => setChangeKeyDialogOpen(false)}\n                data-testid=\"button-cancel-change-key\"\n              >\n                Hủy\n              </Button>\n              <Button \n                onClick={handleConfirmChangeKey}\n                disabled={!newKey.trim() || changeKeyMutation.isPending}\n                data-testid=\"button-confirm-change-key\"\n              >\n                {changeKeyMutation.isPending ? \"Đang xử lý...\" : \"Đổi key\"}\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":17045},"src/pages/Register.tsx":{"content":"import { useAuth } from \"@/hooks/useAuth\";\nimport { Layout } from \"@/components/Layout\";\nimport { RegisterForm } from \"@/components/RegisterForm\";\nimport { motion } from \"framer-motion\";\nimport { useLocation } from \"wouter\";\nimport { useEffect } from \"react\";\n\nexport default function Register() {\n  const { user, isLoading } = useAuth();\n  const [, setLocation] = useLocation();\n\n  // If user is already logged in, redirect to home\n  useEffect(() => {\n    if (user && !isLoading) {\n      setLocation(\"/\");\n    }\n  }, [user, isLoading, setLocation]);\n\n  // Set page title\n  useEffect(() => {\n    document.title = \"Đăng ký | TOOL NRO\";\n  }, []);\n\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center px-4\">\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n          className=\"w-full max-w-5xl\"\n        >\n          <RegisterForm />\n        </motion.div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":1035},"src/pages/Statistics.tsx":{"content":"import { useAuth } from \"@/hooks/useAuth\";\nimport { Layout } from \"@/components/Layout\";\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { useEffect } from \"react\";\n\nexport default function Statistics() {\n  const { isAuthenticated } = useAuth();\n\n  // Set page title\n  useEffect(() => {\n    document.title = \"Thống kê | TOOL NRO\";\n  }, []);\n\n  // Mock data for Top Nạp\n  const topRechargeUsers = [\n    { rank: 1, username: \"tung***\", amount: \"14.465.000\" },\n    { rank: 2, username: \"appu***\", amount: \"8.575.000\" },\n    { rank: 3, username: \"szhi***\", amount: \"6.380.000\" },\n    { rank: 4, username: \"tiep***\", amount: \"6.112.950\" },\n    { rank: 5, username: \"keyf***\", amount: \"6.000.000\" },\n    { rank: 6, username: \"gian***\", amount: \"5.834.000\" },\n    { rank: 7, username: \"stya***\", amount: \"5.349.000\" },\n    { rank: 8, username: \"minh***\", amount: \"4.290.000\" },\n    { rank: 9, username: \"taip***\", amount: \"3.901.000\" },\n    { rank: 10, username: \"Duck***\", amount: \"3.600.000\" },\n  ];\n\n  // Mock data for Lịch Sử Giao Dịch\n  const transactionHistory = [\n    { username: \"buia***\", product: \"MUA (Tool Up Capsule Kỉ B)\", time: \"2025-09-19 12:40:11\" },\n    { username: \"gian***\", product: \"MUA (Auto Bán Đồ Kho Báu)\", time: \"2025-09-18 19:41:34\" },\n    { username: \"Nguy***\", product: \"MUA (Nhặt Thưởng Ngọc Rồng Đen)\", time: \"2025-09-17 20:56:32\" },\n    { username: \"bach***\", product: \"MUA (Tự Động Đánh Quái)\", time: \"2025-09-17 12:50:43\" },\n    { username: \"hibo***\", product: \"MUA (Tool Up Capsule Kỉ B)\", time: \"2025-09-17 12:21:59\" },\n    { username: \"minh***\", product: \"MUA (Bot Bán Item)\", time: \"2025-09-17 07:00:53\" },\n    { username: \"cayz***\", product: \"MUA (Tool Auto Up Đệ Ver1)\", time: \"2025-09-16 23:27:24\" },\n    { username: \"0337***\", product: \"MUA (Nhặt Thưởng Ngọc Rồng Đen)\", time: \"2025-09-16 18:51:49\" },\n    { username: \"ninh***\", product: \"MUA (Tự Động Đánh Quái)\", time: \"2025-09-15 17:00:53\" },\n    { username: \"that***\", product: \"MUA (Tự Động Đánh Quái)\", time: \"2025-09-15 10:51:47\" },\n  ];\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return (\n      <Layout>\n        <div className=\"min-h-screen bg-gray-900 flex items-center justify-center px-4\">\n          <Card className=\"w-full max-w-md\">\n            <CardContent className=\"p-6 text-center\">\n              <h2 className=\"text-xl font-semibold mb-4\">Vui lòng đăng nhập</h2>\n              <p className=\"text-gray-600 mb-4\">Bạn cần đăng nhập để xem thống kê</p>\n              <Link href=\"/login\">\n                <Button className=\"w-full\">Đăng nhập</Button>\n              </Link>\n            </CardContent>\n          </Card>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-8\">\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Header */}\n          <div className=\"text-center mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">THỐNG KÊ</h1>\n            <div className=\"w-16 h-1 bg-green-500 mx-auto\"></div>\n          </div>\n\n          {/* Statistics Content */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Top Nạp */}\n            <Card className=\"shadow-lg\">\n              <CardHeader className=\"bg-blue-500 text-white text-center py-3\">\n                <h2 className=\"text-lg font-bold\">TOP NẠP</h2>\n              </CardHeader>\n              <CardContent className=\"p-0\">\n                <div className=\"space-y-0\">\n                  {topRechargeUsers.map((user) => (\n                    <div\n                      key={user.rank}\n                      className=\"flex items-center justify-between px-4 py-3 border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-800\"\n                      data-testid={`top-user-${user.rank}`}\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <Badge \n                          variant={user.rank <= 3 ? \"destructive\" : \"secondary\"}\n                          className=\"w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold\"\n                        >\n                          {user.rank}\n                        </Badge>\n                        <span className=\"font-medium text-gray-900 dark:text-white\">\n                          {user.username}\n                        </span>\n                      </div>\n                      <span className=\"bg-green-500 text-white px-3 py-1 rounded text-sm font-bold\">\n                        {user.amount}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Lịch Sử Giao Dịch */}\n            <Card className=\"shadow-lg\">\n              <CardHeader className=\"bg-blue-500 text-white text-center py-3\">\n                <h2 className=\"text-lg font-bold\">LỊCH SỬ GIAO DỊCH</h2>\n              </CardHeader>\n              <CardContent className=\"p-0\">\n                <div className=\"space-y-0\">\n                  {transactionHistory.map((transaction, index) => (\n                    <div\n                      key={index}\n                      className=\"px-4 py-3 border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-800\"\n                      data-testid={`transaction-${index}`}\n                    >\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-1\">\n                            <span className=\"text-red-500 font-bold text-sm\">\n                              {transaction.username}\n                            </span>\n                          </div>\n                          <p className=\"text-gray-700 dark:text-gray-300 text-sm\">\n                            {transaction.product}\n                          </p>\n                        </div>\n                        <div className=\"text-right\">\n                          <span className=\"text-gray-500 text-xs\">\n                            {transaction.time}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}","size_bytes":6751},"src/pages/ToolDetails.tsx":{"content":"import { useParams, Link } from \"wouter\";\nimport { Layout } from \"@/components/Layout\";\nimport { motion } from \"framer-motion\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  ArrowLeft,\n  Eye,\n  Star,\n  ShoppingCart,\n  Play,\n  Download,\n  MessageCircle,\n  ExternalLink,\n} from \"lucide-react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useState } from \"react\";\nimport type { Tool, Category } from \"@shared/schema\";\n\nexport default function ToolDetails() {\n  const { id } = useParams<{ id: string }>();\n  const { isAuthenticated } = useAuth();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [purchaseDialogOpen, setPurchaseDialogOpen] = useState(false);\n  const [discountCode, setDiscountCode] = useState(\"\");\n\n  const { data: tool, isLoading } = useQuery<Tool & { category?: Category }>({\n    queryKey: [\"/api/tools\", id],\n  });\n\n  const purchaseMutation = useMutation({\n    mutationFn: async ({ toolId, discountCodeId }: { toolId: string; discountCodeId?: string }) => {\n      return await apiRequest(\"POST\", \"/api/purchases\", { toolId, discountCodeId });\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Mua thành công\",\n        description: \"Công cụ đã được thêm vào danh sách đã mua\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/purchases\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/auth/user\"] });\n      setPurchaseDialogOpen(false);\n      setDiscountCode(\"\");\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      \n      toast({\n        title: \"Lỗi\",\n        description: error.message || \"Không thể mua công cụ\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const validateDiscountMutation = useMutation({\n    mutationFn: async (code: string) => {\n      const response = await apiRequest(\"POST\", \"/api/discount-codes/validate\", { code });\n      return await response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Mã giảm giá hợp lệ\",\n        description: `Giảm ${data.discountType === 'percentage' ? data.discountValue + '%' : Number(data.discountValue).toLocaleString('vi-VN') + '₫'}`,\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Mã giảm giá không hợp lệ\",\n        description: error.message || \"Mã giảm giá không tồn tại hoặc đã hết hạn\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handlePurchase = () => {\n    if (!isAuthenticated) {\n      toast({\n        title: \"Cần đăng nhập\",\n        description: \"Vui lòng đăng nhập để mua công cụ\",\n        variant: \"destructive\",\n      });\n      setTimeout(() => {\n        window.location.href = \"/api/login\";\n      }, 500);\n      return;\n    }\n\n    setPurchaseDialogOpen(true);\n  };\n\n  const handleConfirmPurchase = () => {\n    if (!tool) return;\n    \n    purchaseMutation.mutate({\n      toolId: tool.id,\n      discountCodeId: discountCode || undefined,\n    });\n  };\n\n  const handleValidateDiscount = () => {\n    if (discountCode.trim()) {\n      validateDiscountMutation.mutate(discountCode.trim());\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Layout>\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <Skeleton className=\"h-10 w-32 mb-8\" />\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            <div className=\"lg:col-span-2\">\n              <Skeleton className=\"w-full h-64 mb-6\" />\n              <Skeleton className=\"h-8 w-3/4 mb-4\" />\n              <Skeleton className=\"h-4 w-full mb-2\" />\n              <Skeleton className=\"h-4 w-5/6 mb-6\" />\n              <Skeleton className=\"w-full h-48\" />\n            </div>\n            <div>\n              <Card>\n                <CardContent className=\"p-6\">\n                  <Skeleton className=\"h-8 w-24 mb-4\" />\n                  <Skeleton className=\"h-10 w-full mb-4\" />\n                  <Skeleton className=\"h-4 w-full mb-2\" />\n                  <Skeleton className=\"h-4 w-3/4\" />\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  if (!tool) {\n    return (\n      <Layout>\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          <div className=\"text-center py-16\">\n            <h1 className=\"text-2xl font-bold mb-4\">Không tìm thấy công cụ</h1>\n            <p className=\"text-muted-foreground mb-6\">Công cụ bạn tìm kiếm không tồn tại hoặc đã bị xóa.</p>\n            <Link href=\"/\">\n              <Button data-testid=\"button-back-to-home\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Quay lại trang chủ\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n          {/* Back Button */}\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.4 }}\n          >\n            <Link href=\"/\">\n              <Button variant=\"ghost\" className=\"mb-8\" data-testid=\"button-back-to-home\">\n                <ArrowLeft className=\"mr-2 h-4 w-4\" />\n                Quay lại trang chủ\n              </Button>\n            </Link>\n          </motion.div>\n\n          {/* Main Content Grid */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n            {/* Tool Info Section - Left Side */}\n            <motion.div\n              className=\"lg:col-span-3\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n            >\n              <Card className=\"overflow-hidden shadow-lg\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2\">\n                  {/* Tool Banner Image */}\n                  <div className=\"relative bg-gradient-to-br from-orange-400 to-orange-600 h-48 md:h-full flex items-center justify-center\">\n                    <div className=\"text-center\">\n                      <div className=\"text-6xl mb-4\">🐉</div>\n                      <div className=\"text-white font-bold text-sm bg-black/20 px-3 py-1 rounded-full\">NGỌC RỒNG ONLINE</div>\n                      <div className=\"text-white text-xs mt-2 opacity-80\">.com</div>\n                    </div>\n                  </div>\n\n                  {/* Tool Details */}\n                  <div className=\"p-6\">\n                    <h1 className=\"text-2xl font-bold mb-2\" data-testid=\"text-tool-name\">\n                      {tool.name}\n                    </h1>\n                    \n                    <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-6\">\n                      Người bán: <span className=\"text-blue-600 font-medium\">linhcong</span>\n                    </div>\n\n                    {/* Pricing Options */}\n                    <div className=\"space-y-3\">\n                      {(tool.prices && Array.isArray(tool.prices) && tool.prices.length > 0) ? tool.prices.map((priceOption: any, index: number) => (\n                        <Button\n                          key={index}\n                          variant=\"outline\"\n                          className=\"w-full h-12 justify-between bg-primary text-primary-foreground hover:bg-primary/90 border-gray-300 dark:border-gray-600\"\n                          onClick={() => handlePurchase()}\n                          data-testid={`button-purchase-${priceOption.duration.replace(' ', '-').toLowerCase()}`}\n                        >\n                          <span>Mua {priceOption.duration}</span>\n                          <span className=\"font-bold\">\n                            {Number(priceOption.amount).toLocaleString('vi-VN')}₫\n                          </span>\n                        </Button>\n                      )) : (\n                        <Button\n                          variant=\"outline\"\n                          className=\"w-full h-12 justify-between bg-primary text-primary-foreground hover:bg-primary/90 border-gray-300 dark:border-gray-600\"\n                          onClick={() => handlePurchase()}\n                          data-testid=\"button-purchase-permanent\"\n                        >\n                          <span>Mua Vĩnh Viễn</span>\n                          <span className=\"font-bold\">\n                            {Number(tool.price).toLocaleString('vi-VN')}₫\n                          </span>\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </Card>\n\n              {/* Product Information Section */}\n              <div className=\"mt-8\">\n                <Card>\n                  <CardHeader className=\"border-b\">\n                    <CardTitle className=\"text-lg\">\n                      THÔNG TIN SẢN PHẨM [Version 1.1.7 - {new Date().toLocaleDateString('vi-VN')} ]\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"p-6\">\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-400\">\n                          <Eye className=\"w-4 h-4 mr-1\" />\n                          <span data-testid=\"text-tool-views\">{(tool.views || 0).toLocaleString('vi-VN')} lượt xem</span>\n                        </div>\n                        <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-400\">\n                          <ShoppingCart className=\"w-4 h-4 mr-1\" />\n                          <span>{(tool.purchases || 0).toLocaleString('vi-VN')} lượt mua</span>\n                        </div>\n                        <div className=\"flex items-center text-sm text-gray-600 dark:text-gray-400\">\n                          <Star className=\"w-4 h-4 mr-1 text-yellow-500 fill-current\" />\n                          <span>{Number(tool.rating).toFixed(1)} ({tool.reviewCount} đánh giá)</span>\n                        </div>\n                      </div>\n                      \n                      <Separator />\n                      \n                      <div>\n                        <h3 className=\"font-semibold mb-2\">Mô tả sản phẩm:</h3>\n                        <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed\" data-testid=\"text-tool-description\">\n                          {tool.description}\n                        </p>\n                      </div>\n\n                      {/* Media Section - Images and Videos */}\n                      {(tool.imageUrl || tool.videoUrl) && (\n                        <div>\n                          <h3 className=\"font-semibold mb-3\">Hình ảnh demo</h3>\n                          <div className=\"space-y-4\">\n                            {tool.imageUrl && (\n                              <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden bg-gray-50 dark:bg-gray-800\">\n                                <img \n                                  src={tool.imageUrl} \n                                  alt={`Demo ${tool.name}`}\n                                  className=\"w-full h-auto max-h-96 object-contain\"\n                                  data-testid=\"img-tool-demo\"\n                                />\n                              </div>\n                            )}\n                            \n                            {tool.videoUrl && (\n                              <div className=\"border border-gray-200 dark:border-gray-700 rounded-lg overflow-hidden bg-gray-50 dark:bg-gray-800\">\n                                <video \n                                  controls \n                                  className=\"w-full h-auto max-h-96\"\n                                  data-testid=\"video-tool-demo\"\n                                >\n                                  <source src={tool.videoUrl} type=\"video/mp4\" />\n                                  Trình duyệt của bạn không hỗ trợ video.\n                                </video>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                      \n                      {tool.instructions && (\n                        <div>\n                          <h3 className=\"font-semibold mb-2\">Hướng dẫn sử dụng:</h3>\n                          <div className=\"bg-gray-50 dark:bg-gray-800 p-4 rounded-lg border border-gray-200 dark:border-gray-700\" data-testid=\"content-tool-instructions\">\n                            <pre className=\"whitespace-pre-wrap font-sans text-sm leading-relaxed text-gray-700 dark:text-gray-300\">\n                              {tool.instructions}\n                            </pre>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </motion.div>\n\n            {/* Purchase Information Sidebar */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n            >\n              <Card className=\"sticky top-24 bg-gray-50 dark:bg-gray-800\">\n                <CardContent className=\"p-6\">\n                  <div className=\"space-y-4\">\n                    <div className=\"bg-white dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\n                      <h3 className=\"font-semibold mb-2 text-gray-800 dark:text-gray-200\">Bạn có thể thanh toán sản phẩm vào giỏ</h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">Thanh toán một lúc</p>\n                    </div>\n                    \n                    <div className=\"bg-white dark:bg-gray-700 p-4 rounded-lg border border-gray-200 dark:border-gray-600\">\n                      <p className=\"text-sm text-gray-700 dark:text-gray-300 leading-relaxed\">\n                        <strong>Nếu có lỗi xảy ra hãy liên hệ với admin</strong><br/>\n                        Phương pháp liên hệ ở trang chủ\n                      </p>\n                    </div>\n                    \n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          </div>\n        </div>\n\n        {/* Purchase Confirmation Dialog */}\n        <Dialog open={purchaseDialogOpen} onOpenChange={setPurchaseDialogOpen}>\n          <DialogContent data-testid=\"dialog-purchase-confirmation\">\n            <DialogHeader>\n              <DialogTitle>Xác nhận mua hàng</DialogTitle>\n              <DialogDescription>\n                Bạn có chắc chắn muốn mua công cụ này không?\n              </DialogDescription>\n            </DialogHeader>\n            \n            <div className=\"py-4\">\n              <div className=\"flex items-center space-x-4 mb-4\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center\">\n                  <ShoppingCart className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold\" data-testid=\"text-purchase-tool-name\">{tool.name}</h4>\n                  <p className=\"text-2xl font-bold text-primary\" data-testid=\"text-purchase-tool-price\">\n                    {Number(tool.price).toLocaleString('vi-VN')}₫\n                  </p>\n                </div>\n              </div>\n              \n              {/* Discount Code Input */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"discount-code\">Mã giảm giá (tùy chọn)</Label>\n                <div className=\"flex gap-2\">\n                  <Input\n                    id=\"discount-code\"\n                    placeholder=\"Nhập mã giảm giá\"\n                    value={discountCode}\n                    onChange={(e) => setDiscountCode(e.target.value)}\n                    data-testid=\"input-discount-code\"\n                  />\n                  <Button\n                    variant=\"outline\"\n                    onClick={handleValidateDiscount}\n                    disabled={!discountCode.trim() || validateDiscountMutation.isPending}\n                    data-testid=\"button-validate-discount\"\n                  >\n                    Kiểm tra\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <DialogFooter>\n              <Button \n                variant=\"outline\" \n                onClick={() => setPurchaseDialogOpen(false)}\n                data-testid=\"button-cancel-purchase\"\n              >\n                Hủy\n              </Button>\n              <Button \n                onClick={handleConfirmPurchase}\n                disabled={purchaseMutation.isPending}\n                data-testid=\"button-confirm-purchase\"\n              >\n                {purchaseMutation.isPending ? \"Đang xử lý...\" : \"Xác nhận mua\"}\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":18406},"src/pages/Tools.tsx":{"content":"import { useState } from \"react\";\nimport { Layout } from \"@/components/Layout\";\nimport { ToolCard } from \"@/components/ToolCard\";\nimport { motion } from \"framer-motion\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { mockTools, mockCategories } from \"@/lib/mockData\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { \n  Search, \n  Filter, \n  ShoppingCart,\n  AlertCircle\n} from \"lucide-react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogFooter,\n} from \"@/components/ui/dialog\";\nimport { Label } from \"@/components/ui/label\";\n\nexport default function Tools() {\n  const { isAuthenticated } = useAuth();\n  const { toast } = useToast();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n  const [purchaseDialogOpen, setPurchaseDialogOpen] = useState(false);\n  const [selectedTool, setSelectedTool] = useState<typeof mockTools[0] | null>(null);\n\n  // Use mock data instead of API calls\n  const tools = mockTools;\n  const categories = mockCategories;\n  const toolsLoading = false;\n  const categoriesLoading = false;\n\n  // Mock purchase function - no actual payment processing\n  const handlePurchaseSuccess = () => {\n    toast({\n      title: \"Demo: Mua thành công\",\n      description: \"Đây là demo - không có giao dịch thật sự được thực hiện\",\n    });\n    setPurchaseDialogOpen(false);\n    setSelectedTool(null);\n  };\n\n  // Mock discount validation - demo only  \n  const handleValidateDiscount = () => {\n    toast({\n      title: \"Demo: Mã giảm giá\",\n      description: \"Đây là chức năng demo - không có mã giảm giá thật\",\n      variant: \"default\",\n    });\n  };\n\n  // Filter tools based on search only\n  const filteredTools = tools.filter(tool => {\n    const matchesSearch = tool.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         tool.description.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesSearch;\n  });\n\n  const handlePurchase = (toolId: string) => {\n    if (!isAuthenticated) {\n      toast({\n        title: \"Cần đăng nhập\",\n        description: \"Vui lòng đăng nhập để xem demo mua hàng\",\n        variant: \"default\",\n      });\n      return;\n    }\n\n    const tool = tools.find(t => t.id === toolId);\n    if (tool) {\n      setSelectedTool(tool);\n      setPurchaseDialogOpen(true);\n    }\n  };\n\n  const handleConfirmPurchase = () => {\n    if (!selectedTool) return;\n    handlePurchaseSuccess();\n  };\n\n  return (\n    <Layout>\n      <div className=\"min-h-screen bg-gradient-to-br from-cyan-50 via-blue-50 to-indigo-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-700\">\n        {/* Enhanced Header */}\n        <section className=\"py-16 px-4 sm:px-6 lg:px-8\">\n          <div className=\"container mx-auto text-center\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              className=\"space-y-6\"\n            >\n              <div className=\"inline-flex items-center justify-center w-20 h-20 rounded-full bg-gradient-to-r from-cyan-500 to-blue-600 mb-6\">\n                <ShoppingCart className=\"w-10 h-10 text-white\" />\n              </div>\n              \n              <h1 className=\"text-5xl md:text-6xl lg:text-7xl font-extrabold tracking-tight\">\n                <span className=\"text-gray-900 dark:text-white\">Thị trường </span>\n                <span className=\"bg-gradient-to-r from-cyan-600 via-blue-600 to-indigo-600 bg-clip-text text-transparent\">\n                  công cụ\n                </span>\n              </h1>\n              \n              <p className=\"text-xl md:text-2xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed\">\n                Khám phá bộ sưu tập công cụ chuyên nghiệp được tuyển chọn kỹ lưỡng\n              </p>\n              \n              <div className=\"flex flex-wrap justify-center gap-4 mt-8\">\n                <div className=\"flex items-center space-x-2 px-4 py-2 bg-white/80 dark:bg-gray-800/80 rounded-full border border-cyan-200 dark:border-cyan-800\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300\">\n                    {filteredTools.length} công cụ có sẵn\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-2 px-4 py-2 bg-white/80 dark:bg-gray-800/80 rounded-full border border-cyan-200 dark:border-cyan-800\">\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n                  <span className=\"text-sm text-gray-600 dark:text-gray-300\">\n                    Chất lượng cao\n                  </span>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n          {/* Enhanced Search Section */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n            className=\"mb-12\"\n          >\n            <div className=\"max-w-2xl mx-auto\">\n              {/* Search */}\n              <div className=\"relative mb-8\">\n                <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\n                  <Search className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <Input\n                  placeholder=\"Tìm kiếm công cụ chuyên nghiệp...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-12 pr-4 py-4 text-lg bg-white/90 dark:bg-gray-800/90 border-2 border-cyan-200 dark:border-cyan-800 rounded-2xl focus:border-cyan-500 dark:focus:border-cyan-400 shadow-lg backdrop-blur-sm transition-all duration-300\"\n                  data-testid=\"input-search-tools\"\n                />\n              </div>\n\n              {/* Results count */}\n              {!toolsLoading && (\n                <div className=\"text-center\">\n                  <p className=\"text-gray-600 dark:text-gray-300\" data-testid=\"text-results-count\">\n                    {searchQuery ? (\n                      <>\n                        Tìm thấy <span className=\"font-semibold text-cyan-600 dark:text-cyan-400\">{filteredTools.length}</span> kết quả cho \n                        <span className=\"font-semibold\"> \"{searchQuery}\"</span>\n                      </>\n                    ) : (\n                      <>\n                        Hiển thị <span className=\"font-semibold text-cyan-600 dark:text-cyan-400\">{filteredTools.length}</span> công cụ chuyên nghiệp\n                      </>\n                    )}\n                  </p>\n                </div>\n              )}\n            </div>\n          </motion.div>\n\n          {/* Tools Grid */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n          >\n            {toolsLoading ? (\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n                {[...Array(8)].map((_, i) => (\n                  <Card key={i} className=\"overflow-hidden\">\n                    <Skeleton className=\"w-full h-48\" />\n                    <CardContent className=\"p-6\">\n                      <div className=\"space-y-3\">\n                        <Skeleton className=\"h-6 w-3/4\" />\n                        <Skeleton className=\"h-4 w-full\" />\n                        <Skeleton className=\"h-4 w-2/3\" />\n                        <div className=\"flex justify-between items-center\">\n                          <Skeleton className=\"h-8 w-24\" />\n                          <Skeleton className=\"h-6 w-16\" />\n                        </div>\n                        <div className=\"flex gap-2\">\n                          <Skeleton className=\"h-10 flex-1\" />\n                          <Skeleton className=\"h-10 w-10\" />\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            ) : filteredTools.length > 0 ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\">\n                {filteredTools.map((tool, index) => (\n                  <motion.div\n                    key={tool.id}\n                    initial={{ opacity: 0, y: 30, scale: 0.9 }}\n                    animate={{ opacity: 1, y: 0, scale: 1 }}\n                    transition={{ \n                      duration: 0.6, \n                      delay: 0.1 * index,\n                      type: \"spring\",\n                      stiffness: 100 \n                    }}\n                    className=\"group\"\n                  >\n                    <div className=\"bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm rounded-2xl border border-cyan-200/50 dark:border-cyan-800/50 shadow-lg hover:shadow-2xl hover:shadow-cyan-500/20 transition-all duration-500 group-hover:scale-105 group-hover:bg-white dark:group-hover:bg-gray-800\">\n                      <ToolCard tool={tool} onPurchase={handlePurchase} />\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-20\">\n                <div className=\"max-w-md mx-auto\">\n                  <div className=\"w-24 h-24 mx-auto mb-6 bg-gradient-to-r from-cyan-100 to-blue-100 dark:from-cyan-900/30 dark:to-blue-900/30 rounded-full flex items-center justify-center\">\n                    <AlertCircle className=\"h-12 w-12 text-cyan-600 dark:text-cyan-400\" />\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-3\">\n                    Không tìm thấy công cụ\n                  </h3>\n                  <p className=\"text-gray-600 dark:text-gray-300 mb-6 leading-relaxed\">\n                    {searchQuery\n                      ? `Không có công cụ nào phù hợp với \"${searchQuery}\". Hãy thử từ khóa khác.`\n                      : \"Chưa có công cụ nào được thêm vào hệ thống. Vui lòng quay lại sau.\"}\n                  </p>\n                  {searchQuery && (\n                    <Button \n                      onClick={() => setSearchQuery(\"\")}\n                      className=\"bg-gradient-to-r from-cyan-600 to-blue-600 hover:from-cyan-700 hover:to-blue-700 text-white px-8 py-3 rounded-xl font-medium shadow-lg hover:shadow-xl transition-all duration-300\"\n                      data-testid=\"button-clear-search\"\n                    >\n                      Xóa tìm kiếm\n                    </Button>\n                  )}\n                </div>\n              </div>\n            )}\n          </motion.div>\n        </div>\n\n        {/* Purchase Confirmation Dialog */}\n        <Dialog open={purchaseDialogOpen} onOpenChange={setPurchaseDialogOpen}>\n          <DialogContent data-testid=\"dialog-purchase-confirmation\">\n            <DialogHeader>\n              <DialogTitle>Xác nhận mua hàng</DialogTitle>\n              <DialogDescription>\n                Bạn có chắc chắn muốn mua công cụ này không?\n              </DialogDescription>\n            </DialogHeader>\n            \n            {selectedTool && (\n              <div className=\"py-4\">\n                <div className=\"flex items-center space-x-4 mb-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-lg flex items-center justify-center\">\n                    <ShoppingCart className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold\" data-testid=\"text-purchase-tool-name\">{selectedTool.name}</h4>\n                    <p className=\"text-2xl font-bold text-primary\" data-testid=\"text-purchase-tool-price\">\n                      {Number(selectedTool.price).toLocaleString('vi-VN')}₫\n                    </p>\n                  </div>\n                </div>\n                \n                {/* Demo - Discount Code (disabled) */}\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"discount-code\">Mã giảm giá (demo)</Label>\n                  <div className=\"flex gap-2\">\n                    <Input\n                      id=\"discount-code\"\n                      placeholder=\"Chức năng demo - không thực tế\"\n                      disabled\n                      data-testid=\"input-discount-code\"\n                    />\n                    <Button\n                      variant=\"outline\"\n                      onClick={handleValidateDiscount}\n                      data-testid=\"button-validate-discount\"\n                    >\n                      Demo\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <DialogFooter>\n              <Button \n                variant=\"outline\" \n                onClick={() => setPurchaseDialogOpen(false)}\n                data-testid=\"button-cancel-purchase\"\n              >\n                Hủy\n              </Button>\n              <Button \n                onClick={handleConfirmPurchase}\n                data-testid=\"button-confirm-purchase\"\n              >\n                Xác nhận mua (Demo)\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      </div>\n    </Layout>\n  );\n}\n","size_bytes":13925},"src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711}},"version":1}